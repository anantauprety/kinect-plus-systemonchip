ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"UART.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 BE010000 		.text
  20      02004300 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.global	UART_initVar
  24              		.bss
  25              		.type	UART_initVar, %object
  26              		.size	UART_initVar, 1
  27              	UART_initVar:
  28 0000 00       		.space	1
  29              		.section	.text.UART_Start,"ax",%progbits
  30              		.align	2
  31              		.global	UART_Start
  32              		.thumb
  33              		.thumb_func
  34              		.type	UART_Start, %function
  35              	UART_Start:
  36              	.LFB0:
  37              		.file 1 "./Generated_Source/PSoC5/UART.c"
   1:./Generated_Source/PSoC5/UART.c **** /*******************************************************************************
   2:./Generated_Source/PSoC5/UART.c **** * File Name: UART.c
   3:./Generated_Source/PSoC5/UART.c **** * Version 2.0
   4:./Generated_Source/PSoC5/UART.c **** *
   5:./Generated_Source/PSoC5/UART.c **** * Description:
   6:./Generated_Source/PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:./Generated_Source/PSoC5/UART.c **** *
   8:./Generated_Source/PSoC5/UART.c **** * Note:
   9:./Generated_Source/PSoC5/UART.c **** *
  10:./Generated_Source/PSoC5/UART.c **** *******************************************************************************
  11:./Generated_Source/PSoC5/UART.c **** * Copyright 2008-2010, Cypress Semiconductor Corporation.  All rights reserved.
  12:./Generated_Source/PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:./Generated_Source/PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:./Generated_Source/PSoC5/UART.c **** * the software package with which this file was provided.
  15:./Generated_Source/PSoC5/UART.c **** ********************************************************************************/
  16:./Generated_Source/PSoC5/UART.c **** 
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 2


  17:./Generated_Source/PSoC5/UART.c **** 
  18:./Generated_Source/PSoC5/UART.c **** #include "UART.h"
  19:./Generated_Source/PSoC5/UART.c **** #include "CyLib.h"
  20:./Generated_Source/PSoC5/UART.c **** 
  21:./Generated_Source/PSoC5/UART.c **** 
  22:./Generated_Source/PSoC5/UART.c **** /***************************************
  23:./Generated_Source/PSoC5/UART.c **** * Global data allocation
  24:./Generated_Source/PSoC5/UART.c **** ***************************************/
  25:./Generated_Source/PSoC5/UART.c **** 
  26:./Generated_Source/PSoC5/UART.c **** #if( UART_TX_ENABLED && (UART_TXBUFFERSIZE > UART_FIFO_LENGTH))
  27:./Generated_Source/PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TXBUFFERSIZE];
  28:./Generated_Source/PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  29:./Generated_Source/PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  30:./Generated_Source/PSoC5/UART.c **** #endif /* End UART_TX_ENABLED */
  31:./Generated_Source/PSoC5/UART.c **** #if( ( UART_RX_ENABLED || UART_HD_ENABLED ) && \
  32:./Generated_Source/PSoC5/UART.c ****      (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
  33:./Generated_Source/PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RXBUFFERSIZE];
  34:./Generated_Source/PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead = 0u;
  35:./Generated_Source/PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  36:./Generated_Source/PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  37:./Generated_Source/PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow = 0u;
  38:./Generated_Source/PSoC5/UART.c **** #endif /* End UART_RX_ENABLED */
  39:./Generated_Source/PSoC5/UART.c **** 
  40:./Generated_Source/PSoC5/UART.c **** 
  41:./Generated_Source/PSoC5/UART.c **** /***************************************
  42:./Generated_Source/PSoC5/UART.c **** * Local data allocation
  43:./Generated_Source/PSoC5/UART.c **** ***************************************/
  44:./Generated_Source/PSoC5/UART.c **** 
  45:./Generated_Source/PSoC5/UART.c **** uint8 UART_initVar = 0u;
  46:./Generated_Source/PSoC5/UART.c **** 
  47:./Generated_Source/PSoC5/UART.c **** 
  48:./Generated_Source/PSoC5/UART.c **** /*******************************************************************************
  49:./Generated_Source/PSoC5/UART.c **** * Function Name: UART_Start
  50:./Generated_Source/PSoC5/UART.c **** ********************************************************************************
  51:./Generated_Source/PSoC5/UART.c **** *
  52:./Generated_Source/PSoC5/UART.c **** * Summary:
  53:./Generated_Source/PSoC5/UART.c **** *  Initialize and Enable the UART component.
  54:./Generated_Source/PSoC5/UART.c **** *  Enable the clock input to enable operation.
  55:./Generated_Source/PSoC5/UART.c **** *
  56:./Generated_Source/PSoC5/UART.c **** * Parameters:
  57:./Generated_Source/PSoC5/UART.c **** *  None.
  58:./Generated_Source/PSoC5/UART.c **** *
  59:./Generated_Source/PSoC5/UART.c **** * Return:
  60:./Generated_Source/PSoC5/UART.c **** *  None.
  61:./Generated_Source/PSoC5/UART.c **** *
  62:./Generated_Source/PSoC5/UART.c **** * Global variables:
  63:./Generated_Source/PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial 
  64:./Generated_Source/PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u) 
  65:./Generated_Source/PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This allows for 
  66:./Generated_Source/PSoC5/UART.c **** *  component initialization without re-initialization in all subsequent calls 
  67:./Generated_Source/PSoC5/UART.c **** *  to the UART_Start() routine. 
  68:./Generated_Source/PSoC5/UART.c **** *
  69:./Generated_Source/PSoC5/UART.c **** * Reentrant:
  70:./Generated_Source/PSoC5/UART.c **** *  No.
  71:./Generated_Source/PSoC5/UART.c **** *
  72:./Generated_Source/PSoC5/UART.c **** *******************************************************************************/
  73:./Generated_Source/PSoC5/UART.c **** void UART_Start(void)
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 3


  74:./Generated_Source/PSoC5/UART.c **** {
  38              		.loc 1 74 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 0
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 8
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_offset 14, -4
  47              		.cfi_offset 7, -8
  48              	.LCFI1:
  49              		.cfi_def_cfa_register 7
  75:./Generated_Source/PSoC5/UART.c ****     /* If not Initialized then initialize all required hardware and software */
  76:./Generated_Source/PSoC5/UART.c ****     if(UART_initVar == 0u)
  50              		.loc 1 76 0
  51 0004 40F20003 		movw	r3, #:lower16:UART_initVar
  52 0008 C0F20003 		movt	r3, #:upper16:UART_initVar
  53 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  54 000e 002B     		cmp	r3, #0
  55 0010 08D1     		bne	.L2
  77:./Generated_Source/PSoC5/UART.c ****     {
  78:./Generated_Source/PSoC5/UART.c ****         UART_Init();
  56              		.loc 1 78 0
  57 0012 FFF7FEFF 		bl	UART_Init
  79:./Generated_Source/PSoC5/UART.c ****         UART_initVar = 1u;
  58              		.loc 1 79 0
  59 0016 40F20003 		movw	r3, #:lower16:UART_initVar
  60 001a C0F20003 		movt	r3, #:upper16:UART_initVar
  61 001e 4FF00102 		mov	r2, #1
  62 0022 1A70     		strb	r2, [r3, #0]
  63              	.L2:
  80:./Generated_Source/PSoC5/UART.c ****     }
  81:./Generated_Source/PSoC5/UART.c ****     UART_Enable();
  64              		.loc 1 81 0
  65 0024 FFF7FEFF 		bl	UART_Enable
  82:./Generated_Source/PSoC5/UART.c **** }
  66              		.loc 1 82 0
  67 0028 80BD     		pop	{r7, pc}
  68              		.cfi_endproc
  69              	.LFE0:
  70              		.size	UART_Start, .-UART_Start
  71 002a 00BF     		.section	.text.UART_Init,"ax",%progbits
  72              		.align	2
  73              		.global	UART_Init
  74              		.thumb
  75              		.thumb_func
  76              		.type	UART_Init, %function
  77              	UART_Init:
  78              	.LFB1:
  83:./Generated_Source/PSoC5/UART.c **** 
  84:./Generated_Source/PSoC5/UART.c **** 
  85:./Generated_Source/PSoC5/UART.c **** /*******************************************************************************
  86:./Generated_Source/PSoC5/UART.c **** * Function Name: UART_Init
  87:./Generated_Source/PSoC5/UART.c **** ********************************************************************************
  88:./Generated_Source/PSoC5/UART.c **** *
  89:./Generated_Source/PSoC5/UART.c **** * Summary:
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 4


  90:./Generated_Source/PSoC5/UART.c **** *  Initialize component's parameters to the parameters set by user in the
  91:./Generated_Source/PSoC5/UART.c **** *  customizer of the component placed onto schematic. Usually called in
  92:./Generated_Source/PSoC5/UART.c **** *  UART_Start().
  93:./Generated_Source/PSoC5/UART.c **** *
  94:./Generated_Source/PSoC5/UART.c **** * Parameters:
  95:./Generated_Source/PSoC5/UART.c **** *  None.
  96:./Generated_Source/PSoC5/UART.c **** *
  97:./Generated_Source/PSoC5/UART.c **** * Return:
  98:./Generated_Source/PSoC5/UART.c **** *  None.
  99:./Generated_Source/PSoC5/UART.c **** *
 100:./Generated_Source/PSoC5/UART.c **** *******************************************************************************/
 101:./Generated_Source/PSoC5/UART.c **** void UART_Init(void) 
 102:./Generated_Source/PSoC5/UART.c **** {
  79              		.loc 1 102 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84 0000 80B4     		push	{r7}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 4
  87 0002 00AF     		add	r7, sp, #0
  88              		.cfi_offset 7, -4
  89              	.LCFI3:
  90              		.cfi_def_cfa_register 7
 103:./Generated_Source/PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 104:./Generated_Source/PSoC5/UART.c **** 
 105:./Generated_Source/PSoC5/UART.c ****         #if(UART_RX_INTERRUPT_ENABLED && (UART_RXBUFFERSIZE > UART_FIFO_LENGTH))
 106:./Generated_Source/PSoC5/UART.c ****             /* Set the RX Interrupt. */
 107:./Generated_Source/PSoC5/UART.c ****             CyIntSetVector(UART_RX_VECT_NUM,   UART_RXISR);
 108:./Generated_Source/PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 109:./Generated_Source/PSoC5/UART.c ****         #endif /* End UART_RX_INTERRUPT_ENABLED */
 110:./Generated_Source/PSoC5/UART.c **** 
 111:./Generated_Source/PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 112:./Generated_Source/PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RXAddressMode);
 113:./Generated_Source/PSoC5/UART.c ****             UART_SetRxAddress1(UART_RXHWADDRESS1);
 114:./Generated_Source/PSoC5/UART.c ****             UART_SetRxAddress2(UART_RXHWADDRESS2);
 115:./Generated_Source/PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 116:./Generated_Source/PSoC5/UART.c **** 
 117:./Generated_Source/PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 118:./Generated_Source/PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
 119:./Generated_Source/PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 120:./Generated_Source/PSoC5/UART.c **** 
 121:./Generated_Source/PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 122:./Generated_Source/PSoC5/UART.c ****         #if(UART_TX_INTERRUPT_ENABLED && (UART_TXBUFFERSIZE > UART_FIFO_LENGTH))
 123:./Generated_Source/PSoC5/UART.c ****             /* Set the TX Interrupt. */
 124:./Generated_Source/PSoC5/UART.c ****             CyIntSetVector(UART_TX_VECT_NUM,   UART_TXISR);
 125:./Generated_Source/PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 126:./Generated_Source/PSoC5/UART.c ****         #endif /* End UART_TX_INTERRUPT_ENABLED */
 127:./Generated_Source/PSoC5/UART.c **** 
 128:./Generated_Source/PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 129:./Generated_Source/PSoC5/UART.c ****         #if(UART_TXCLKGEN_DP)
 130:./Generated_Source/PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  91              		.loc 1 130 0
  92 0004 46F22543 		movw	r3, #:lower16:1073767461
  93 0008 C4F20003 		movt	r3, #:upper16:1073767461
  94 000c 4FF00702 		mov	r2, #7
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 5


  95 0010 1A70     		strb	r2, [r3, #0]
 131:./Generated_Source/PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = (UART_NUMBER_OF_DATA_BITS + \
  96              		.loc 1 131 0
  97 0012 46F23543 		movw	r3, #:lower16:1073767477
  98 0016 C4F20003 		movt	r3, #:upper16:1073767477
  99 001a 4FF04802 		mov	r2, #72
 100 001e 1A70     		strb	r2, [r3, #0]
 132:./Generated_Source/PSoC5/UART.c ****                                                     UART_NUMBER_OF_START_BIT) * \
 133:./Generated_Source/PSoC5/UART.c ****                                                     UART_OVER_SAMPLE_COUNT;
 134:./Generated_Source/PSoC5/UART.c ****         #else
 135:./Generated_Source/PSoC5/UART.c ****             UART_TXBITCTR_COUNTER_REG = (UART_NUMBER_OF_DATA_BITS + \
 136:./Generated_Source/PSoC5/UART.c ****                                                     UART_NUMBER_OF_START_BIT) * \
 137:./Generated_Source/PSoC5/UART.c ****                                                     UART_OVER_SAMPLE_8;
 138:./Generated_Source/PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 139:./Generated_Source/PSoC5/UART.c **** 
 140:./Generated_Source/PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 141:./Generated_Source/PSoC5/UART.c ****         #if(UART_TX_INTERRUPT_ENABLED && (UART_TXBUFFERSIZE > UART_FIFO_LENGTH))
 142:./Generated_Source/PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 143:./Generated_Source/PSoC5/UART.c ****         #else
 144:./Generated_Source/PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 101              		.loc 1 144 0
 102 0020 46F28443 		movw	r3, #:lower16:1073767556
 103 0024 C4F20003 		movt	r3, #:upper16:1073767556
 104 0028 4FF00102 		mov	r2, #1
 105 002c 1A70     		strb	r2, [r3, #0]
 145:./Generated_Source/PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 146:./Generated_Source/PSoC5/UART.c ****         
 147:./Generated_Source/PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 148:./Generated_Source/PSoC5/UART.c **** 
 149:./Generated_Source/PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 150:./Generated_Source/PSoC5/UART.c ****         UART_WriteControlRegister( \
 151:./Generated_Source/PSoC5/UART.c ****             (UART_ReadControlRegister() & ~UART_CTRL_PARITY_TYPE_MASK) | \
 152:./Generated_Source/PSoC5/UART.c ****             (UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 153:./Generated_Source/PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 154:./Generated_Source/PSoC5/UART.c **** }
 106              		.loc 1 154 0
 107 002e BD46     		mov	sp, r7
 108 0030 80BC     		pop	{r7}
 109 0032 7047     		bx	lr
 110              		.cfi_endproc
 111              	.LFE1:
 112              		.size	UART_Init, .-UART_Init
 113              		.section	.text.UART_Enable,"ax",%progbits
 114              		.align	2
 115              		.global	UART_Enable
 116              		.thumb
 117              		.thumb_func
 118              		.type	UART_Enable, %function
 119              	UART_Enable:
 120              	.LFB2:
 155:./Generated_Source/PSoC5/UART.c **** 
 156:./Generated_Source/PSoC5/UART.c **** 
 157:./Generated_Source/PSoC5/UART.c **** /*******************************************************************************
 158:./Generated_Source/PSoC5/UART.c **** * Function Name: UART_Enable
 159:./Generated_Source/PSoC5/UART.c **** ********************************************************************************
 160:./Generated_Source/PSoC5/UART.c **** *
 161:./Generated_Source/PSoC5/UART.c **** * Summary:
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 6


 162:./Generated_Source/PSoC5/UART.c **** *  Enables the UART block operation
 163:./Generated_Source/PSoC5/UART.c **** *
 164:./Generated_Source/PSoC5/UART.c **** * Parameters:
 165:./Generated_Source/PSoC5/UART.c **** *  None.
 166:./Generated_Source/PSoC5/UART.c **** *
 167:./Generated_Source/PSoC5/UART.c **** * Return:
 168:./Generated_Source/PSoC5/UART.c **** *  None.
 169:./Generated_Source/PSoC5/UART.c **** *
 170:./Generated_Source/PSoC5/UART.c **** *******************************************************************************/
 171:./Generated_Source/PSoC5/UART.c **** void UART_Enable(void) 
 172:./Generated_Source/PSoC5/UART.c **** {
 121              		.loc 1 172 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 8
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              	.LCFI4:
 127              		.cfi_def_cfa_offset 8
 128 0002 82B0     		sub	sp, sp, #8
 129              	.LCFI5:
 130              		.cfi_def_cfa_offset 16
 131 0004 00AF     		add	r7, sp, #0
 132              		.cfi_offset 14, -4
 133              		.cfi_offset 7, -8
 134              	.LCFI6:
 135              		.cfi_def_cfa_register 7
 173:./Generated_Source/PSoC5/UART.c ****     uint8 enableInterrupts;
 174:./Generated_Source/PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 136              		.loc 1 174 0
 137 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 138 000a 0346     		mov	r3, r0
 139 000c FB71     		strb	r3, [r7, #7]
 175:./Generated_Source/PSoC5/UART.c ****     
 176:./Generated_Source/PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 177:./Generated_Source/PSoC5/UART.c ****         /*RX Counter (Count7) Enable */
 178:./Generated_Source/PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 179:./Generated_Source/PSoC5/UART.c ****         /* Enable the RX Interrupt. */
 180:./Generated_Source/PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 181:./Generated_Source/PSoC5/UART.c ****         #if(UART_RX_INTERRUPT_ENABLED && (UART_RXBUFFERSIZE > UART_FIFO_LENGTH))
 182:./Generated_Source/PSoC5/UART.c ****             CyIntEnable(UART_RX_VECT_NUM);
 183:./Generated_Source/PSoC5/UART.c ****         #endif /* End UART_RX_INTERRUPT_ENABLED */
 184:./Generated_Source/PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 185:./Generated_Source/PSoC5/UART.c **** 
 186:./Generated_Source/PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 187:./Generated_Source/PSoC5/UART.c ****         /*TX Counter (DP/Count7) Enable */
 188:./Generated_Source/PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 189:./Generated_Source/PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 190:./Generated_Source/PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 191:./Generated_Source/PSoC5/UART.c ****         /* Enable the TX Interrupt. */
 192:./Generated_Source/PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 140              		.loc 1 192 0
 141 000e 46F29443 		movw	r3, #:lower16:1073767572
 142 0012 C4F20003 		movt	r3, #:upper16:1073767572
 143 0016 46F29442 		movw	r2, #:lower16:1073767572
 144 001a C4F20002 		movt	r2, #:upper16:1073767572
 145 001e 1278     		ldrb	r2, [r2, #0]
 146 0020 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 7


 147 0022 42F01002 		orr	r2, r2, #16
 148 0026 D2B2     		uxtb	r2, r2
 149 0028 1A70     		strb	r2, [r3, #0]
 193:./Generated_Source/PSoC5/UART.c ****         #if(UART_TX_INTERRUPT_ENABLED && (UART_TXBUFFERSIZE > UART_FIFO_LENGTH))
 194:./Generated_Source/PSoC5/UART.c ****             CyIntEnable(UART_TX_VECT_NUM);
 195:./Generated_Source/PSoC5/UART.c ****         #endif /* End UART_TX_INTERRUPT_ENABLED*/
 196:./Generated_Source/PSoC5/UART.c ****      #endif /* End UART_TX_ENABLED */
 197:./Generated_Source/PSoC5/UART.c **** 
 198:./Generated_Source/PSoC5/UART.c ****     #if(UART_INTERNAL_CLOCK_USED)
 199:./Generated_Source/PSoC5/UART.c ****         /* Set the bit to enable the clock. */
 200:./Generated_Source/PSoC5/UART.c ****         UART_INTCLOCK_CLKEN_REG |= UART_INTCLOCK_CLKEN_MASK;
 150              		.loc 1 200 0
 151 002a 44F2A233 		movw	r3, #:lower16:1073759138
 152 002e C4F20003 		movt	r3, #:upper16:1073759138
 153 0032 44F2A232 		movw	r2, #:lower16:1073759138
 154 0036 C4F20002 		movt	r2, #:upper16:1073759138
 155 003a 1278     		ldrb	r2, [r2, #0]
 156 003c D2B2     		uxtb	r2, r2
 157 003e 42F00202 		orr	r2, r2, #2
 158 0042 D2B2     		uxtb	r2, r2
 159 0044 1A70     		strb	r2, [r3, #0]
 201:./Generated_Source/PSoC5/UART.c ****     #endif /* End UART_INTERNAL_CLOCK_USED */
 202:./Generated_Source/PSoC5/UART.c ****     
 203:./Generated_Source/PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 160              		.loc 1 203 0
 161 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 162 0048 1846     		mov	r0, r3
 163 004a FFF7FEFF 		bl	CyExitCriticalSection
 204:./Generated_Source/PSoC5/UART.c **** }
 164              		.loc 1 204 0
 165 004e 07F10807 		add	r7, r7, #8
 166 0052 BD46     		mov	sp, r7
 167 0054 80BD     		pop	{r7, pc}
 168              		.cfi_endproc
 169              	.LFE2:
 170              		.size	UART_Enable, .-UART_Enable
 171 0056 00BF     		.section	.text.UART_Stop,"ax",%progbits
 172              		.align	2
 173              		.global	UART_Stop
 174              		.thumb
 175              		.thumb_func
 176              		.type	UART_Stop, %function
 177              	UART_Stop:
 178              	.LFB3:
 205:./Generated_Source/PSoC5/UART.c **** 
 206:./Generated_Source/PSoC5/UART.c **** 
 207:./Generated_Source/PSoC5/UART.c **** /*******************************************************************************
 208:./Generated_Source/PSoC5/UART.c **** * Function Name: UART_Stop
 209:./Generated_Source/PSoC5/UART.c **** ********************************************************************************
 210:./Generated_Source/PSoC5/UART.c **** *
 211:./Generated_Source/PSoC5/UART.c **** * Summary:
 212:./Generated_Source/PSoC5/UART.c **** *  Disable the UART component
 213:./Generated_Source/PSoC5/UART.c **** *
 214:./Generated_Source/PSoC5/UART.c **** * Parameters:
 215:./Generated_Source/PSoC5/UART.c **** *  None.
 216:./Generated_Source/PSoC5/UART.c **** *
 217:./Generated_Source/PSoC5/UART.c **** * Return:
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 8


 218:./Generated_Source/PSoC5/UART.c **** *  None.
 219:./Generated_Source/PSoC5/UART.c **** *
 220:./Generated_Source/PSoC5/UART.c **** *******************************************************************************/
 221:./Generated_Source/PSoC5/UART.c **** void UART_Stop(void) 
 222:./Generated_Source/PSoC5/UART.c **** {
 179              		.loc 1 222 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 8
 182              		@ frame_needed = 1, uses_anonymous_args = 0
 183 0000 80B5     		push	{r7, lr}
 184              	.LCFI7:
 185              		.cfi_def_cfa_offset 8
 186 0002 82B0     		sub	sp, sp, #8
 187              	.LCFI8:
 188              		.cfi_def_cfa_offset 16
 189 0004 00AF     		add	r7, sp, #0
 190              		.cfi_offset 14, -4
 191              		.cfi_offset 7, -8
 192              	.LCFI9:
 193              		.cfi_def_cfa_register 7
 223:./Generated_Source/PSoC5/UART.c ****     uint8 enableInterrupts;
 224:./Generated_Source/PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 194              		.loc 1 224 0
 195 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 196 000a 0346     		mov	r3, r0
 197 000c FB71     		strb	r3, [r7, #7]
 225:./Generated_Source/PSoC5/UART.c **** 
 226:./Generated_Source/PSoC5/UART.c ****     /*Write Bit Counter Disable */
 227:./Generated_Source/PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 228:./Generated_Source/PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= ~UART_CNTR_ENABLE;
 229:./Generated_Source/PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED */
 230:./Generated_Source/PSoC5/UART.c **** 
 231:./Generated_Source/PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 232:./Generated_Source/PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 233:./Generated_Source/PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= ~UART_CNTR_ENABLE;
 234:./Generated_Source/PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 235:./Generated_Source/PSoC5/UART.c ****     #endif /* UART_TX_ENABLED */
 236:./Generated_Source/PSoC5/UART.c **** 
 237:./Generated_Source/PSoC5/UART.c ****     #if(UART_INTERNAL_CLOCK_USED)
 238:./Generated_Source/PSoC5/UART.c ****         /* Clear the bit to enable the clock. */
 239:./Generated_Source/PSoC5/UART.c ****         UART_INTCLOCK_CLKEN_REG &= ~UART_INTCLOCK_CLKEN_MASK;
 198              		.loc 1 239 0
 199 000e 44F2A233 		movw	r3, #:lower16:1073759138
 200 0012 C4F20003 		movt	r3, #:upper16:1073759138
 201 0016 44F2A232 		movw	r2, #:lower16:1073759138
 202 001a C4F20002 		movt	r2, #:upper16:1073759138
 203 001e 1278     		ldrb	r2, [r2, #0]
 204 0020 D2B2     		uxtb	r2, r2
 205 0022 02F0FD02 		and	r2, r2, #253
 206 0026 1A70     		strb	r2, [r3, #0]
 240:./Generated_Source/PSoC5/UART.c ****     #endif /* End UART_INTERNAL_CLOCK_USED */
 241:./Generated_Source/PSoC5/UART.c ****     
 242:./Generated_Source/PSoC5/UART.c ****     /*Disable internal interrupt component*/
 243:./Generated_Source/PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 244:./Generated_Source/PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= ~UART_INT_ENABLE;
 245:./Generated_Source/PSoC5/UART.c ****         #if(UART_RX_INTERRUPT_ENABLED && (UART_RXBUFFERSIZE > UART_FIFO_LENGTH))
 246:./Generated_Source/PSoC5/UART.c ****             UART_DisableRxInt();
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 9


 247:./Generated_Source/PSoC5/UART.c ****         #endif /* End UART_RX_INTERRUPT_ENABLED */
 248:./Generated_Source/PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED */
 249:./Generated_Source/PSoC5/UART.c ****     
 250:./Generated_Source/PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 251:./Generated_Source/PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= ~UART_INT_ENABLE;
 207              		.loc 1 251 0
 208 0028 46F29443 		movw	r3, #:lower16:1073767572
 209 002c C4F20003 		movt	r3, #:upper16:1073767572
 210 0030 46F29442 		movw	r2, #:lower16:1073767572
 211 0034 C4F20002 		movt	r2, #:upper16:1073767572
 212 0038 1278     		ldrb	r2, [r2, #0]
 213 003a D2B2     		uxtb	r2, r2
 214 003c 02F0EF02 		and	r2, r2, #239
 215 0040 1A70     		strb	r2, [r3, #0]
 252:./Generated_Source/PSoC5/UART.c ****         #if(UART_TX_INTERRUPT_ENABLED && (UART_TXBUFFERSIZE > UART_FIFO_LENGTH))
 253:./Generated_Source/PSoC5/UART.c ****             UART_DisableTxInt();
 254:./Generated_Source/PSoC5/UART.c ****         #endif /* End UART_TX_INTERRUPT_ENABLED */
 255:./Generated_Source/PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 256:./Generated_Source/PSoC5/UART.c **** 
 257:./Generated_Source/PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 216              		.loc 1 257 0
 217 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 218 0044 1846     		mov	r0, r3
 219 0046 FFF7FEFF 		bl	CyExitCriticalSection
 258:./Generated_Source/PSoC5/UART.c **** }
 220              		.loc 1 258 0
 221 004a 07F10807 		add	r7, r7, #8
 222 004e BD46     		mov	sp, r7
 223 0050 80BD     		pop	{r7, pc}
 224              		.cfi_endproc
 225              	.LFE3:
 226              		.size	UART_Stop, .-UART_Stop
 227 0052 00BF     		.section	.text.UART_ReadControlRegister,"ax",%progbits
 228              		.align	2
 229              		.global	UART_ReadControlRegister
 230              		.thumb
 231              		.thumb_func
 232              		.type	UART_ReadControlRegister, %function
 233              	UART_ReadControlRegister:
 234              	.LFB4:
 259:./Generated_Source/PSoC5/UART.c **** 
 260:./Generated_Source/PSoC5/UART.c **** 
 261:./Generated_Source/PSoC5/UART.c **** /*******************************************************************************
 262:./Generated_Source/PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 263:./Generated_Source/PSoC5/UART.c **** ********************************************************************************
 264:./Generated_Source/PSoC5/UART.c **** *
 265:./Generated_Source/PSoC5/UART.c **** * Summary:
 266:./Generated_Source/PSoC5/UART.c **** *  Read the current state of the control register
 267:./Generated_Source/PSoC5/UART.c **** *
 268:./Generated_Source/PSoC5/UART.c **** * Parameters:
 269:./Generated_Source/PSoC5/UART.c **** *  None.
 270:./Generated_Source/PSoC5/UART.c **** *
 271:./Generated_Source/PSoC5/UART.c **** * Return:
 272:./Generated_Source/PSoC5/UART.c **** *  Current state of the control register.
 273:./Generated_Source/PSoC5/UART.c **** *
 274:./Generated_Source/PSoC5/UART.c **** *******************************************************************************/
 275:./Generated_Source/PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 10


 276:./Generated_Source/PSoC5/UART.c **** {
 235              		.loc 1 276 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 1, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240 0000 80B4     		push	{r7}
 241              	.LCFI10:
 242              		.cfi_def_cfa_offset 4
 243 0002 00AF     		add	r7, sp, #0
 244              		.cfi_offset 7, -4
 245              	.LCFI11:
 246              		.cfi_def_cfa_register 7
 277:./Generated_Source/PSoC5/UART.c ****     #if( UART_CONTROL_REG_REMOVED )
 278:./Generated_Source/PSoC5/UART.c ****         return(0u);
 247              		.loc 1 278 0
 248 0004 4FF00003 		mov	r3, #0
 279:./Generated_Source/PSoC5/UART.c ****     #else
 280:./Generated_Source/PSoC5/UART.c ****         return(UART_CONTROL_REG);
 281:./Generated_Source/PSoC5/UART.c ****     #endif /* End UART_CONTROL_REG_REMOVED */
 282:./Generated_Source/PSoC5/UART.c **** }
 249              		.loc 1 282 0
 250 0008 1846     		mov	r0, r3
 251 000a BD46     		mov	sp, r7
 252 000c 80BC     		pop	{r7}
 253 000e 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE4:
 256              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 257              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 258              		.align	2
 259              		.global	UART_WriteControlRegister
 260              		.thumb
 261              		.thumb_func
 262              		.type	UART_WriteControlRegister, %function
 263              	UART_WriteControlRegister:
 264              	.LFB5:
 283:./Generated_Source/PSoC5/UART.c **** 
 284:./Generated_Source/PSoC5/UART.c **** 
 285:./Generated_Source/PSoC5/UART.c **** /*******************************************************************************
 286:./Generated_Source/PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 287:./Generated_Source/PSoC5/UART.c **** ********************************************************************************
 288:./Generated_Source/PSoC5/UART.c **** *
 289:./Generated_Source/PSoC5/UART.c **** * Summary:
 290:./Generated_Source/PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 291:./Generated_Source/PSoC5/UART.c **** *
 292:./Generated_Source/PSoC5/UART.c **** * Parameters:
 293:./Generated_Source/PSoC5/UART.c **** *  control:  control register value
 294:./Generated_Source/PSoC5/UART.c **** *
 295:./Generated_Source/PSoC5/UART.c **** * Return:
 296:./Generated_Source/PSoC5/UART.c **** *  None.
 297:./Generated_Source/PSoC5/UART.c **** *
 298:./Generated_Source/PSoC5/UART.c **** *******************************************************************************/
 299:./Generated_Source/PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 300:./Generated_Source/PSoC5/UART.c **** {
 265              		.loc 1 300 0
 266              		.cfi_startproc
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 11


 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 270 0000 80B4     		push	{r7}
 271              	.LCFI12:
 272              		.cfi_def_cfa_offset 4
 273 0002 83B0     		sub	sp, sp, #12
 274              	.LCFI13:
 275              		.cfi_def_cfa_offset 16
 276 0004 00AF     		add	r7, sp, #0
 277              		.cfi_offset 7, -4
 278              	.LCFI14:
 279              		.cfi_def_cfa_register 7
 280 0006 0346     		mov	r3, r0
 281 0008 FB71     		strb	r3, [r7, #7]
 301:./Generated_Source/PSoC5/UART.c ****     #if( UART_CONTROL_REG_REMOVED )
 302:./Generated_Source/PSoC5/UART.c ****         control = control;      /* Reassigning to release compiler warning */ 
 303:./Generated_Source/PSoC5/UART.c ****     #else
 304:./Generated_Source/PSoC5/UART.c ****        UART_CONTROL_REG = control;
 305:./Generated_Source/PSoC5/UART.c ****     #endif /* End UART_CONTROL_REG_REMOVED */
 306:./Generated_Source/PSoC5/UART.c **** }
 282              		.loc 1 306 0
 283 000a 07F10C07 		add	r7, r7, #12
 284 000e BD46     		mov	sp, r7
 285 0010 80BC     		pop	{r7}
 286 0012 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE5:
 289              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 290              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 291              		.align	2
 292              		.global	UART_SetTxInterruptMode
 293              		.thumb
 294              		.thumb_func
 295              		.type	UART_SetTxInterruptMode, %function
 296              	UART_SetTxInterruptMode:
 297              	.LFB6:
 307:./Generated_Source/PSoC5/UART.c **** 
 308:./Generated_Source/PSoC5/UART.c **** 
 309:./Generated_Source/PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 310:./Generated_Source/PSoC5/UART.c **** 
 311:./Generated_Source/PSoC5/UART.c ****     #if(UART_RX_INTERRUPT_ENABLED)
 312:./Generated_Source/PSoC5/UART.c **** 
 313:./Generated_Source/PSoC5/UART.c ****         /*******************************************************************************
 314:./Generated_Source/PSoC5/UART.c ****         * Function Name: UART_EnableRxInt
 315:./Generated_Source/PSoC5/UART.c ****         ********************************************************************************
 316:./Generated_Source/PSoC5/UART.c ****         *
 317:./Generated_Source/PSoC5/UART.c ****         * Summary:
 318:./Generated_Source/PSoC5/UART.c ****         *  Enable RX interrupt generation
 319:./Generated_Source/PSoC5/UART.c ****         *
 320:./Generated_Source/PSoC5/UART.c ****         * Parameters:
 321:./Generated_Source/PSoC5/UART.c ****         *  None.
 322:./Generated_Source/PSoC5/UART.c ****         *
 323:./Generated_Source/PSoC5/UART.c ****         * Return:
 324:./Generated_Source/PSoC5/UART.c ****         *  None.
 325:./Generated_Source/PSoC5/UART.c ****         *
 326:./Generated_Source/PSoC5/UART.c ****         * Theory:
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 12


 327:./Generated_Source/PSoC5/UART.c ****         *  Enable the interrupt output -or- the interrupt component itself
 328:./Generated_Source/PSoC5/UART.c ****         *
 329:./Generated_Source/PSoC5/UART.c ****         *******************************************************************************/
 330:./Generated_Source/PSoC5/UART.c ****         void UART_EnableRxInt(void) 
 331:./Generated_Source/PSoC5/UART.c ****         {
 332:./Generated_Source/PSoC5/UART.c ****             CyIntEnable(UART_RX_VECT_NUM);
 333:./Generated_Source/PSoC5/UART.c ****         }
 334:./Generated_Source/PSoC5/UART.c **** 
 335:./Generated_Source/PSoC5/UART.c **** 
 336:./Generated_Source/PSoC5/UART.c ****         /*******************************************************************************
 337:./Generated_Source/PSoC5/UART.c ****         * Function Name: UART_DisableRxInt
 338:./Generated_Source/PSoC5/UART.c ****         ********************************************************************************
 339:./Generated_Source/PSoC5/UART.c ****         *
 340:./Generated_Source/PSoC5/UART.c ****         * Summary:
 341:./Generated_Source/PSoC5/UART.c ****         *  Disable RX interrupt generation
 342:./Generated_Source/PSoC5/UART.c ****         *
 343:./Generated_Source/PSoC5/UART.c ****         * Parameters:
 344:./Generated_Source/PSoC5/UART.c ****         *  None.
 345:./Generated_Source/PSoC5/UART.c ****         *
 346:./Generated_Source/PSoC5/UART.c ****         * Return:
 347:./Generated_Source/PSoC5/UART.c ****         *  None.
 348:./Generated_Source/PSoC5/UART.c ****         *
 349:./Generated_Source/PSoC5/UART.c ****         * Theory:
 350:./Generated_Source/PSoC5/UART.c ****         *  Disable the interrupt output -or- the interrupt component itself
 351:./Generated_Source/PSoC5/UART.c ****         *
 352:./Generated_Source/PSoC5/UART.c ****         *******************************************************************************/
 353:./Generated_Source/PSoC5/UART.c ****         void UART_DisableRxInt(void) 
 354:./Generated_Source/PSoC5/UART.c ****         {
 355:./Generated_Source/PSoC5/UART.c ****             CyIntDisable(UART_RX_VECT_NUM);
 356:./Generated_Source/PSoC5/UART.c ****         }
 357:./Generated_Source/PSoC5/UART.c **** 
 358:./Generated_Source/PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 359:./Generated_Source/PSoC5/UART.c **** 
 360:./Generated_Source/PSoC5/UART.c **** 
 361:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
 362:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 363:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
 364:./Generated_Source/PSoC5/UART.c ****     *
 365:./Generated_Source/PSoC5/UART.c ****     * Summary:
 366:./Generated_Source/PSoC5/UART.c ****     *  Configure which status bits trigger an interrupt event
 367:./Generated_Source/PSoC5/UART.c ****     *
 368:./Generated_Source/PSoC5/UART.c ****     * Parameters:
 369:./Generated_Source/PSoC5/UART.c ****     *  IntSrc:  An or'd combination of the desired status bit masks (defined in
 370:./Generated_Source/PSoC5/UART.c ****     *           the header file)
 371:./Generated_Source/PSoC5/UART.c ****     *
 372:./Generated_Source/PSoC5/UART.c ****     * Return:
 373:./Generated_Source/PSoC5/UART.c ****     *  None.
 374:./Generated_Source/PSoC5/UART.c ****     *
 375:./Generated_Source/PSoC5/UART.c ****     * Theory:
 376:./Generated_Source/PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 377:./Generated_Source/PSoC5/UART.c ****     *
 378:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
 379:./Generated_Source/PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 380:./Generated_Source/PSoC5/UART.c ****     {
 381:./Generated_Source/PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 382:./Generated_Source/PSoC5/UART.c ****     }
 383:./Generated_Source/PSoC5/UART.c **** 
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 13


 384:./Generated_Source/PSoC5/UART.c **** 
 385:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
 386:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 387:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
 388:./Generated_Source/PSoC5/UART.c ****     *
 389:./Generated_Source/PSoC5/UART.c ****     * Summary:
 390:./Generated_Source/PSoC5/UART.c ****     *  Returns data in RX Data register without checking status register to 
 391:./Generated_Source/PSoC5/UART.c ****     *  determine if data is valid
 392:./Generated_Source/PSoC5/UART.c ****     *
 393:./Generated_Source/PSoC5/UART.c ****     * Parameters:
 394:./Generated_Source/PSoC5/UART.c ****     *  None.
 395:./Generated_Source/PSoC5/UART.c ****     *
 396:./Generated_Source/PSoC5/UART.c ****     * Return:
 397:./Generated_Source/PSoC5/UART.c ****     *  Received data from RX register
 398:./Generated_Source/PSoC5/UART.c ****     *
 399:./Generated_Source/PSoC5/UART.c ****     * Global Variables:
 400:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 401:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer, 
 402:./Generated_Source/PSoC5/UART.c ****     *     checked to identify new data. 
 403:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer, 
 404:./Generated_Source/PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 405:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - creared if loop condition was detected
 406:./Generated_Source/PSoC5/UART.c ****     *     in RX ISR. 
 407:./Generated_Source/PSoC5/UART.c ****     *
 408:./Generated_Source/PSoC5/UART.c ****     * Reentrant:
 409:./Generated_Source/PSoC5/UART.c ****     *  No.
 410:./Generated_Source/PSoC5/UART.c ****     *
 411:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
 412:./Generated_Source/PSoC5/UART.c ****     uint8 UART_ReadRxData(void)
 413:./Generated_Source/PSoC5/UART.c ****     {
 414:./Generated_Source/PSoC5/UART.c ****         uint8 rxData;
 415:./Generated_Source/PSoC5/UART.c **** 
 416:./Generated_Source/PSoC5/UART.c ****         #if(UART_RXBUFFERSIZE > UART_FIFO_LENGTH)
 417:./Generated_Source/PSoC5/UART.c **** 
 418:./Generated_Source/PSoC5/UART.c ****             /* Disable Rx interrupt. */
 419:./Generated_Source/PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 420:./Generated_Source/PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
 421:./Generated_Source/PSoC5/UART.c ****                 UART_DisableRxInt();
 422:./Generated_Source/PSoC5/UART.c ****             #endif /* End UART_RX_INTERRUPT_ENABLED */
 423:./Generated_Source/PSoC5/UART.c **** 
 424:./Generated_Source/PSoC5/UART.c ****             if( (UART_rxBufferRead != UART_rxBufferWrite) || \
 425:./Generated_Source/PSoC5/UART.c ****                 (UART_rxBufferLoopDetect > 0u) )
 426:./Generated_Source/PSoC5/UART.c ****             {
 427:./Generated_Source/PSoC5/UART.c ****                 if(UART_rxBufferLoopDetect > 0u ) 
 428:./Generated_Source/PSoC5/UART.c ****                 {
 429:./Generated_Source/PSoC5/UART.c ****                     UART_rxBufferLoopDetect = 0u;
 430:./Generated_Source/PSoC5/UART.c ****                 }
 431:./Generated_Source/PSoC5/UART.c **** 
 432:./Generated_Source/PSoC5/UART.c ****                 if(UART_rxBufferRead >= UART_RXBUFFERSIZE)
 433:./Generated_Source/PSoC5/UART.c ****                 {
 434:./Generated_Source/PSoC5/UART.c ****                     UART_rxBufferRead = 0u;
 435:./Generated_Source/PSoC5/UART.c ****                 }
 436:./Generated_Source/PSoC5/UART.c **** 
 437:./Generated_Source/PSoC5/UART.c ****                 rxData = UART_rxBuffer[UART_rxBufferRead];
 438:./Generated_Source/PSoC5/UART.c **** 
 439:./Generated_Source/PSoC5/UART.c ****                 UART_rxBufferRead++;
 440:./Generated_Source/PSoC5/UART.c ****             }
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 14


 441:./Generated_Source/PSoC5/UART.c ****             else
 442:./Generated_Source/PSoC5/UART.c ****             {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 443:./Generated_Source/PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 444:./Generated_Source/PSoC5/UART.c ****             }
 445:./Generated_Source/PSoC5/UART.c **** 
 446:./Generated_Source/PSoC5/UART.c ****             /* Enable Rx interrupt. */
 447:./Generated_Source/PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
 448:./Generated_Source/PSoC5/UART.c ****                 UART_EnableRxInt();
 449:./Generated_Source/PSoC5/UART.c ****             #endif /* End UART_RX_INTERRUPT_ENABLED */
 450:./Generated_Source/PSoC5/UART.c **** 
 451:./Generated_Source/PSoC5/UART.c ****         #else /* UART_RXBUFFERSIZE > UART_FIFO_LENGTH */
 452:./Generated_Source/PSoC5/UART.c **** 
 453:./Generated_Source/PSoC5/UART.c ****             /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 454:./Generated_Source/PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 455:./Generated_Source/PSoC5/UART.c **** 
 456:./Generated_Source/PSoC5/UART.c ****         #endif /* UART_RXBUFFERSIZE > UART_FIFO_LENGTH */
 457:./Generated_Source/PSoC5/UART.c **** 
 458:./Generated_Source/PSoC5/UART.c ****         return(rxData);
 459:./Generated_Source/PSoC5/UART.c ****     }
 460:./Generated_Source/PSoC5/UART.c **** 
 461:./Generated_Source/PSoC5/UART.c **** 
 462:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
 463:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 464:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
 465:./Generated_Source/PSoC5/UART.c ****     *
 466:./Generated_Source/PSoC5/UART.c ****     * Summary:
 467:./Generated_Source/PSoC5/UART.c ****     *  Read the current state of the status register
 468:./Generated_Source/PSoC5/UART.c ****     *  And detect software buffer overflow.
 469:./Generated_Source/PSoC5/UART.c ****     *
 470:./Generated_Source/PSoC5/UART.c ****     * Parameters:
 471:./Generated_Source/PSoC5/UART.c ****     *  None.
 472:./Generated_Source/PSoC5/UART.c ****     *
 473:./Generated_Source/PSoC5/UART.c ****     * Return:
 474:./Generated_Source/PSoC5/UART.c ****     *  Current state of the status register.
 475:./Generated_Source/PSoC5/UART.c ****     *
 476:./Generated_Source/PSoC5/UART.c ****     * Global Variables:
 477:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition. 
 478:./Generated_Source/PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn?t free space in 
 479:./Generated_Source/PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned 
 480:./Generated_Source/PSoC5/UART.c ****     *   and cleared to zero by this API as an 
 481:./Generated_Source/PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register 
 482:./Generated_Source/PSoC5/UART.c ****     *   bits.
 483:./Generated_Source/PSoC5/UART.c ****     *
 484:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
 485:./Generated_Source/PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:./Generated_Source/PSoC5/UART.c ****     {
 487:./Generated_Source/PSoC5/UART.c ****         uint8 status;
 488:./Generated_Source/PSoC5/UART.c **** 
 489:./Generated_Source/PSoC5/UART.c ****         status = UART_RXSTATUS_REG;
 490:./Generated_Source/PSoC5/UART.c ****         status &= UART_RX_HW_MASK;
 491:./Generated_Source/PSoC5/UART.c **** 
 492:./Generated_Source/PSoC5/UART.c ****         #if(UART_RXBUFFERSIZE > UART_FIFO_LENGTH)
 493:./Generated_Source/PSoC5/UART.c ****             if( UART_rxBufferOverflow )
 494:./Generated_Source/PSoC5/UART.c ****             {
 495:./Generated_Source/PSoC5/UART.c ****                 status |= UART_RX_STS_SOFT_BUFF_OVER;
 496:./Generated_Source/PSoC5/UART.c ****                 UART_rxBufferOverflow = 0u;
 497:./Generated_Source/PSoC5/UART.c ****             }
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 15


 498:./Generated_Source/PSoC5/UART.c ****         #endif /* UART_RXBUFFERSIZE */
 499:./Generated_Source/PSoC5/UART.c **** 
 500:./Generated_Source/PSoC5/UART.c ****         return(status);
 501:./Generated_Source/PSoC5/UART.c ****     }
 502:./Generated_Source/PSoC5/UART.c **** 
 503:./Generated_Source/PSoC5/UART.c **** 
 504:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
 505:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_GetChar
 506:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
 507:./Generated_Source/PSoC5/UART.c ****     *
 508:./Generated_Source/PSoC5/UART.c ****     * Summary:
 509:./Generated_Source/PSoC5/UART.c ****     *  Reads UART RX buffer immediately, if data is not available or an error 
 510:./Generated_Source/PSoC5/UART.c ****     *  condition exists, zero is returned; otherwise, character is read and 
 511:./Generated_Source/PSoC5/UART.c ****     *  returned.
 512:./Generated_Source/PSoC5/UART.c ****     *
 513:./Generated_Source/PSoC5/UART.c ****     * Parameters:
 514:./Generated_Source/PSoC5/UART.c ****     *  None.
 515:./Generated_Source/PSoC5/UART.c ****     *
 516:./Generated_Source/PSoC5/UART.c ****     * Return:
 517:./Generated_Source/PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 518:./Generated_Source/PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 519:./Generated_Source/PSoC5/UART.c ****     *
 520:./Generated_Source/PSoC5/UART.c ****     * Global Variables:
 521:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 522:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer, 
 523:./Generated_Source/PSoC5/UART.c ****     *     checked to identify new data. 
 524:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer, 
 525:./Generated_Source/PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 526:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - creared if loop condition was detected
 527:./Generated_Source/PSoC5/UART.c ****     *     in RX ISR. 
 528:./Generated_Source/PSoC5/UART.c ****     *
 529:./Generated_Source/PSoC5/UART.c ****     * Reentrant:
 530:./Generated_Source/PSoC5/UART.c ****     *  No.
 531:./Generated_Source/PSoC5/UART.c ****     *
 532:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
 533:./Generated_Source/PSoC5/UART.c ****     uint8 UART_GetChar(void)
 534:./Generated_Source/PSoC5/UART.c ****     {
 535:./Generated_Source/PSoC5/UART.c ****         uint8 rxData = 0u;
 536:./Generated_Source/PSoC5/UART.c ****         uint8 rxStatus;
 537:./Generated_Source/PSoC5/UART.c **** 
 538:./Generated_Source/PSoC5/UART.c ****         #if(UART_RXBUFFERSIZE > UART_FIFO_LENGTH)
 539:./Generated_Source/PSoC5/UART.c **** 
 540:./Generated_Source/PSoC5/UART.c ****             /* Disable Rx interrupt. */
 541:./Generated_Source/PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 542:./Generated_Source/PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
 543:./Generated_Source/PSoC5/UART.c ****                 UART_DisableRxInt();
 544:./Generated_Source/PSoC5/UART.c ****             #endif /* UART_RX_INTERRUPT_ENABLED */
 545:./Generated_Source/PSoC5/UART.c **** 
 546:./Generated_Source/PSoC5/UART.c ****             if( (UART_rxBufferRead != UART_rxBufferWrite) || \
 547:./Generated_Source/PSoC5/UART.c ****                 (UART_rxBufferLoopDetect > 0u) )
 548:./Generated_Source/PSoC5/UART.c ****             {
 549:./Generated_Source/PSoC5/UART.c ****                 if(UART_rxBufferLoopDetect > 0u ) 
 550:./Generated_Source/PSoC5/UART.c ****                 {
 551:./Generated_Source/PSoC5/UART.c ****                     UART_rxBufferLoopDetect = 0u;
 552:./Generated_Source/PSoC5/UART.c ****                 }
 553:./Generated_Source/PSoC5/UART.c **** 
 554:./Generated_Source/PSoC5/UART.c ****                 if(UART_rxBufferRead >= UART_RXBUFFERSIZE)
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 16


 555:./Generated_Source/PSoC5/UART.c ****                 {
 556:./Generated_Source/PSoC5/UART.c ****                     UART_rxBufferRead = 0u;
 557:./Generated_Source/PSoC5/UART.c ****                 }
 558:./Generated_Source/PSoC5/UART.c **** 
 559:./Generated_Source/PSoC5/UART.c ****                 rxData = UART_rxBuffer[UART_rxBufferRead];
 560:./Generated_Source/PSoC5/UART.c **** 
 561:./Generated_Source/PSoC5/UART.c ****                 UART_rxBufferRead++;
 562:./Generated_Source/PSoC5/UART.c ****             }
 563:./Generated_Source/PSoC5/UART.c ****             else
 564:./Generated_Source/PSoC5/UART.c ****             {   rxStatus =UART_RXSTATUS_REG;
 565:./Generated_Source/PSoC5/UART.c ****                 if(rxStatus & UART_RX_STS_FIFO_NOTEMPTY)
 566:./Generated_Source/PSoC5/UART.c ****                 {   /* Read received data from FIFO*/
 567:./Generated_Source/PSoC5/UART.c ****                     rxData = UART_RXDATA_REG;
 568:./Generated_Source/PSoC5/UART.c ****                     /*Check status on error*/
 569:./Generated_Source/PSoC5/UART.c ****                     if(rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR | \
 570:./Generated_Source/PSoC5/UART.c ****                                    UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN))
 571:./Generated_Source/PSoC5/UART.c ****                     {
 572:./Generated_Source/PSoC5/UART.c ****                         rxData = 0u;
 573:./Generated_Source/PSoC5/UART.c ****                     }    
 574:./Generated_Source/PSoC5/UART.c ****                 }
 575:./Generated_Source/PSoC5/UART.c ****             }
 576:./Generated_Source/PSoC5/UART.c **** 
 577:./Generated_Source/PSoC5/UART.c ****             /* Enable Rx interrupt. */
 578:./Generated_Source/PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
 579:./Generated_Source/PSoC5/UART.c ****                 UART_EnableRxInt();
 580:./Generated_Source/PSoC5/UART.c ****             #endif /* UART_RX_INTERRUPT_ENABLED */
 581:./Generated_Source/PSoC5/UART.c **** 
 582:./Generated_Source/PSoC5/UART.c ****         #else /* UART_RXBUFFERSIZE > UART_FIFO_LENGTH */
 583:./Generated_Source/PSoC5/UART.c **** 
 584:./Generated_Source/PSoC5/UART.c ****             rxStatus =UART_RXSTATUS_REG;
 585:./Generated_Source/PSoC5/UART.c ****             if(rxStatus & UART_RX_STS_FIFO_NOTEMPTY)
 586:./Generated_Source/PSoC5/UART.c ****             {   /* Read received data from FIFO*/
 587:./Generated_Source/PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 588:./Generated_Source/PSoC5/UART.c ****                 /*Check status on error*/
 589:./Generated_Source/PSoC5/UART.c ****                 if(rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR | \
 590:./Generated_Source/PSoC5/UART.c ****                                UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN))
 591:./Generated_Source/PSoC5/UART.c ****                 {
 592:./Generated_Source/PSoC5/UART.c ****                     rxData = 0u;
 593:./Generated_Source/PSoC5/UART.c ****                 }
 594:./Generated_Source/PSoC5/UART.c ****             }
 595:./Generated_Source/PSoC5/UART.c ****         #endif /* UART_RXBUFFERSIZE > UART_FIFO_LENGTH */
 596:./Generated_Source/PSoC5/UART.c **** 
 597:./Generated_Source/PSoC5/UART.c ****         return(rxData);
 598:./Generated_Source/PSoC5/UART.c ****     }
 599:./Generated_Source/PSoC5/UART.c **** 
 600:./Generated_Source/PSoC5/UART.c **** 
 601:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
 602:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_GetByte
 603:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
 604:./Generated_Source/PSoC5/UART.c ****     *
 605:./Generated_Source/PSoC5/UART.c ****     * Summary:
 606:./Generated_Source/PSoC5/UART.c ****     *  Grab the next available byte of data from the recieve FIFO
 607:./Generated_Source/PSoC5/UART.c ****     *
 608:./Generated_Source/PSoC5/UART.c ****     * Parameters:
 609:./Generated_Source/PSoC5/UART.c ****     *  None.
 610:./Generated_Source/PSoC5/UART.c ****     *
 611:./Generated_Source/PSoC5/UART.c ****     * Return:
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 17


 612:./Generated_Source/PSoC5/UART.c ****     *  MSB contains Status Register and LSB contains UART RX data
 613:./Generated_Source/PSoC5/UART.c ****     *
 614:./Generated_Source/PSoC5/UART.c ****     * Reentrant:
 615:./Generated_Source/PSoC5/UART.c ****     *  No.
 616:./Generated_Source/PSoC5/UART.c ****     *
 617:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
 618:./Generated_Source/PSoC5/UART.c ****     uint16 UART_GetByte(void)
 619:./Generated_Source/PSoC5/UART.c ****     {
 620:./Generated_Source/PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 621:./Generated_Source/PSoC5/UART.c ****     }
 622:./Generated_Source/PSoC5/UART.c **** 
 623:./Generated_Source/PSoC5/UART.c **** 
 624:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
 625:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 626:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
 627:./Generated_Source/PSoC5/UART.c ****     *
 628:./Generated_Source/PSoC5/UART.c ****     * Summary:
 629:./Generated_Source/PSoC5/UART.c ****     *  Determine the amount of bytes left in the RX buffer and return the count in
 630:./Generated_Source/PSoC5/UART.c ****     *  bytes
 631:./Generated_Source/PSoC5/UART.c ****     *
 632:./Generated_Source/PSoC5/UART.c ****     * Parameters:
 633:./Generated_Source/PSoC5/UART.c ****     *  None.
 634:./Generated_Source/PSoC5/UART.c ****     *
 635:./Generated_Source/PSoC5/UART.c ****     * Return:
 636:./Generated_Source/PSoC5/UART.c ****     *  uint8: Integer count of the number of bytes left 
 637:./Generated_Source/PSoC5/UART.c ****     *  in the RX buffer
 638:./Generated_Source/PSoC5/UART.c ****     *
 639:./Generated_Source/PSoC5/UART.c ****     * Global Variables:
 640:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes. 
 641:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 642:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount. 
 643:./Generated_Source/PSoC5/UART.c ****     *
 644:./Generated_Source/PSoC5/UART.c ****     * Reentrant:
 645:./Generated_Source/PSoC5/UART.c ****     *  No.
 646:./Generated_Source/PSoC5/UART.c ****     *
 647:./Generated_Source/PSoC5/UART.c ****     * Theory:
 648:./Generated_Source/PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 649:./Generated_Source/PSoC5/UART.c ****     *
 650:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
 651:./Generated_Source/PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 652:./Generated_Source/PSoC5/UART.c ****     {
 653:./Generated_Source/PSoC5/UART.c ****         uint8 size;
 654:./Generated_Source/PSoC5/UART.c **** 
 655:./Generated_Source/PSoC5/UART.c ****         #if(UART_RXBUFFERSIZE > UART_FIFO_LENGTH)
 656:./Generated_Source/PSoC5/UART.c **** 
 657:./Generated_Source/PSoC5/UART.c ****             /* Disable Rx interrupt. */
 658:./Generated_Source/PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 659:./Generated_Source/PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
 660:./Generated_Source/PSoC5/UART.c ****                 UART_DisableRxInt();
 661:./Generated_Source/PSoC5/UART.c ****             #endif /* UART_RX_INTERRUPT_ENABLED */
 662:./Generated_Source/PSoC5/UART.c **** 
 663:./Generated_Source/PSoC5/UART.c ****             if(UART_rxBufferRead == UART_rxBufferWrite)
 664:./Generated_Source/PSoC5/UART.c ****             {
 665:./Generated_Source/PSoC5/UART.c ****                 if(UART_rxBufferLoopDetect > 0u)
 666:./Generated_Source/PSoC5/UART.c ****                 {
 667:./Generated_Source/PSoC5/UART.c ****                     size = UART_RXBUFFERSIZE;
 668:./Generated_Source/PSoC5/UART.c ****                 }
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 18


 669:./Generated_Source/PSoC5/UART.c ****                 else
 670:./Generated_Source/PSoC5/UART.c ****                 {
 671:./Generated_Source/PSoC5/UART.c ****                     size = 0u;
 672:./Generated_Source/PSoC5/UART.c ****                 }
 673:./Generated_Source/PSoC5/UART.c ****             }
 674:./Generated_Source/PSoC5/UART.c ****             else if(UART_rxBufferRead < UART_rxBufferWrite)
 675:./Generated_Source/PSoC5/UART.c ****             {
 676:./Generated_Source/PSoC5/UART.c ****                 size = (UART_rxBufferWrite - UART_rxBufferRead);
 677:./Generated_Source/PSoC5/UART.c ****             }
 678:./Generated_Source/PSoC5/UART.c ****             else
 679:./Generated_Source/PSoC5/UART.c ****             {
 680:./Generated_Source/PSoC5/UART.c ****                 size = (UART_RXBUFFERSIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 681:./Generated_Source/PSoC5/UART.c ****             }
 682:./Generated_Source/PSoC5/UART.c **** 
 683:./Generated_Source/PSoC5/UART.c ****             /* Enable Rx interrupt. */
 684:./Generated_Source/PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
 685:./Generated_Source/PSoC5/UART.c ****                 UART_EnableRxInt();
 686:./Generated_Source/PSoC5/UART.c ****             #endif /* End UART_RX_INTERRUPT_ENABLED */
 687:./Generated_Source/PSoC5/UART.c **** 
 688:./Generated_Source/PSoC5/UART.c ****         #else /* UART_RXBUFFERSIZE > UART_FIFO_LENGTH */
 689:./Generated_Source/PSoC5/UART.c **** 
 690:./Generated_Source/PSoC5/UART.c ****             /* We can only know if there is data in the fifo. */
 691:./Generated_Source/PSoC5/UART.c ****             size = (UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) ? 1u : 0u;
 692:./Generated_Source/PSoC5/UART.c **** 
 693:./Generated_Source/PSoC5/UART.c ****         #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH */
 694:./Generated_Source/PSoC5/UART.c **** 
 695:./Generated_Source/PSoC5/UART.c ****         return(size);
 696:./Generated_Source/PSoC5/UART.c ****     }
 697:./Generated_Source/PSoC5/UART.c **** 
 698:./Generated_Source/PSoC5/UART.c **** 
 699:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
 700:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 701:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
 702:./Generated_Source/PSoC5/UART.c ****     *
 703:./Generated_Source/PSoC5/UART.c ****     * Summary:
 704:./Generated_Source/PSoC5/UART.c ****     *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 705:./Generated_Source/PSoC5/UART.c ****     *
 706:./Generated_Source/PSoC5/UART.c ****     * Parameters:
 707:./Generated_Source/PSoC5/UART.c ****     *  None.
 708:./Generated_Source/PSoC5/UART.c ****     *
 709:./Generated_Source/PSoC5/UART.c ****     * Return:
 710:./Generated_Source/PSoC5/UART.c ****     *  None.
 711:./Generated_Source/PSoC5/UART.c ****     *
 712:./Generated_Source/PSoC5/UART.c ****     * Global Variables:
 713:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero. 
 714:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 715:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero. 
 716:./Generated_Source/PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero. 
 717:./Generated_Source/PSoC5/UART.c ****     *
 718:./Generated_Source/PSoC5/UART.c ****     * Reentrant:
 719:./Generated_Source/PSoC5/UART.c ****     *  No.
 720:./Generated_Source/PSoC5/UART.c ****     *
 721:./Generated_Source/PSoC5/UART.c ****     * Theory:
 722:./Generated_Source/PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to 
 723:./Generated_Source/PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may 
 724:./Generated_Source/PSoC5/UART.c ****     *  have remained in the RAM.
 725:./Generated_Source/PSoC5/UART.c ****     *
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 19


 726:./Generated_Source/PSoC5/UART.c ****     * Side Effects:
 727:./Generated_Source/PSoC5/UART.c ****     *  Any received data not read from the RAM buffer will be lost when overwritten.
 728:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
 729:./Generated_Source/PSoC5/UART.c ****     void UART_ClearRxBuffer(void)
 730:./Generated_Source/PSoC5/UART.c ****     {
 731:./Generated_Source/PSoC5/UART.c ****         #if(UART_RXBUFFERSIZE > UART_FIFO_LENGTH)
 732:./Generated_Source/PSoC5/UART.c ****             /* Disable Rx interrupt. */
 733:./Generated_Source/PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 734:./Generated_Source/PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
 735:./Generated_Source/PSoC5/UART.c ****                 UART_DisableRxInt();
 736:./Generated_Source/PSoC5/UART.c ****             #endif /* End UART_RX_INTERRUPT_ENABLED */
 737:./Generated_Source/PSoC5/UART.c **** 
 738:./Generated_Source/PSoC5/UART.c ****             UART_rxBufferRead = 0u;
 739:./Generated_Source/PSoC5/UART.c ****             UART_rxBufferWrite = 0u;
 740:./Generated_Source/PSoC5/UART.c ****             UART_rxBufferLoopDetect = 0u;
 741:./Generated_Source/PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 742:./Generated_Source/PSoC5/UART.c **** 
 743:./Generated_Source/PSoC5/UART.c ****             /* Enable Rx interrupt. */
 744:./Generated_Source/PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
 745:./Generated_Source/PSoC5/UART.c ****                 UART_EnableRxInt();
 746:./Generated_Source/PSoC5/UART.c ****             #endif /* End UART_RX_INTERRUPT_ENABLED */
 747:./Generated_Source/PSoC5/UART.c ****         #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH */
 748:./Generated_Source/PSoC5/UART.c ****     }
 749:./Generated_Source/PSoC5/UART.c **** 
 750:./Generated_Source/PSoC5/UART.c **** 
 751:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
 752:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 753:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
 754:./Generated_Source/PSoC5/UART.c ****     *
 755:./Generated_Source/PSoC5/UART.c ****     * Summary:
 756:./Generated_Source/PSoC5/UART.c ****     *  Set the receive addressing mode
 757:./Generated_Source/PSoC5/UART.c ****     *
 758:./Generated_Source/PSoC5/UART.c ****     * Parameters:
 759:./Generated_Source/PSoC5/UART.c ****     *  addressMode: Use one of the Enumerated Types listed below
 760:./Generated_Source/PSoC5/UART.c ****     *              #define UART__B_UART__AM_SW_BYTE_BYTE 1
 761:./Generated_Source/PSoC5/UART.c **** #define UART__B_UART__AM_SW_DETECT_TO_BUFFER 2
 762:./Generated_Source/PSoC5/UART.c **** #define UART__B_UART__AM_HW_BYTE_BY_BYTE 3
 763:./Generated_Source/PSoC5/UART.c **** #define UART__B_UART__AM_HW_DETECT_TO_BUFFER 4
 764:./Generated_Source/PSoC5/UART.c **** #define UART__B_UART__AM_NONE 0
 765:./Generated_Source/PSoC5/UART.c **** 
 766:./Generated_Source/PSoC5/UART.c ****     *
 767:./Generated_Source/PSoC5/UART.c ****     * Return:
 768:./Generated_Source/PSoC5/UART.c ****     *  None.
 769:./Generated_Source/PSoC5/UART.c ****     *
 770:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
 771:./Generated_Source/PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)  
 772:./Generated_Source/PSoC5/UART.c ****     {
 773:./Generated_Source/PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 774:./Generated_Source/PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 775:./Generated_Source/PSoC5/UART.c ****                 addressMode = addressMode;
 776:./Generated_Source/PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 777:./Generated_Source/PSoC5/UART.c ****                 uint8 tmpCtrl = 0u;
 778:./Generated_Source/PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & ~UART_CTRL_RXADDR_MODE_MASK;
 779:./Generated_Source/PSoC5/UART.c ****                 tmpCtrl |= ((addressMode << UART_CTRL_RXADDR_MODE0_SHIFT) & \
 780:./Generated_Source/PSoC5/UART.c ****                            UART_CTRL_RXADDR_MODE_MASK);
 781:./Generated_Source/PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 782:./Generated_Source/PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 20


 783:./Generated_Source/PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 784:./Generated_Source/PSoC5/UART.c ****             addressMode = addressMode;
 785:./Generated_Source/PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 786:./Generated_Source/PSoC5/UART.c ****     }
 787:./Generated_Source/PSoC5/UART.c **** 
 788:./Generated_Source/PSoC5/UART.c **** 
 789:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
 790:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 791:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
 792:./Generated_Source/PSoC5/UART.c ****     *
 793:./Generated_Source/PSoC5/UART.c ****     * Summary:
 794:./Generated_Source/PSoC5/UART.c ****     *  Set the first hardware address compare value
 795:./Generated_Source/PSoC5/UART.c ****     *
 796:./Generated_Source/PSoC5/UART.c ****     * Parameters:
 797:./Generated_Source/PSoC5/UART.c ****     *  address
 798:./Generated_Source/PSoC5/UART.c ****     *
 799:./Generated_Source/PSoC5/UART.c ****     * Return:
 800:./Generated_Source/PSoC5/UART.c ****     *  None.
 801:./Generated_Source/PSoC5/UART.c ****     *
 802:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
 803:./Generated_Source/PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 804:./Generated_Source/PSoC5/UART.c **** 
 805:./Generated_Source/PSoC5/UART.c ****     {
 806:./Generated_Source/PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 807:./Generated_Source/PSoC5/UART.c ****     }
 808:./Generated_Source/PSoC5/UART.c **** 
 809:./Generated_Source/PSoC5/UART.c **** 
 810:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
 811:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 812:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
 813:./Generated_Source/PSoC5/UART.c ****     *
 814:./Generated_Source/PSoC5/UART.c ****     * Summary:
 815:./Generated_Source/PSoC5/UART.c ****     *  Set the second hardware address compare value
 816:./Generated_Source/PSoC5/UART.c ****     *
 817:./Generated_Source/PSoC5/UART.c ****     * Parameters:
 818:./Generated_Source/PSoC5/UART.c ****     *  address
 819:./Generated_Source/PSoC5/UART.c ****     *
 820:./Generated_Source/PSoC5/UART.c ****     * Return:
 821:./Generated_Source/PSoC5/UART.c ****     *  None.
 822:./Generated_Source/PSoC5/UART.c ****     *
 823:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
 824:./Generated_Source/PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 825:./Generated_Source/PSoC5/UART.c ****     {
 826:./Generated_Source/PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 827:./Generated_Source/PSoC5/UART.c ****     }
 828:./Generated_Source/PSoC5/UART.c **** 
 829:./Generated_Source/PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 830:./Generated_Source/PSoC5/UART.c **** 
 831:./Generated_Source/PSoC5/UART.c **** 
 832:./Generated_Source/PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 833:./Generated_Source/PSoC5/UART.c **** 
 834:./Generated_Source/PSoC5/UART.c ****     #if(UART_TX_INTERRUPT_ENABLED)
 835:./Generated_Source/PSoC5/UART.c **** 
 836:./Generated_Source/PSoC5/UART.c ****         /*******************************************************************************
 837:./Generated_Source/PSoC5/UART.c ****         * Function Name: UART_EnableTxInt
 838:./Generated_Source/PSoC5/UART.c ****         ********************************************************************************
 839:./Generated_Source/PSoC5/UART.c ****         *
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 21


 840:./Generated_Source/PSoC5/UART.c ****         * Summary:
 841:./Generated_Source/PSoC5/UART.c ****         *  Enable TX interrupt generation
 842:./Generated_Source/PSoC5/UART.c ****         *
 843:./Generated_Source/PSoC5/UART.c ****         * Parameters:
 844:./Generated_Source/PSoC5/UART.c ****         *  None.
 845:./Generated_Source/PSoC5/UART.c ****         *
 846:./Generated_Source/PSoC5/UART.c ****         * Return:
 847:./Generated_Source/PSoC5/UART.c ****         *  None.
 848:./Generated_Source/PSoC5/UART.c ****         *
 849:./Generated_Source/PSoC5/UART.c ****         * Theory:
 850:./Generated_Source/PSoC5/UART.c ****         *  Enable the interrupt output -or- the interrupt component itself
 851:./Generated_Source/PSoC5/UART.c ****         *
 852:./Generated_Source/PSoC5/UART.c ****         *******************************************************************************/
 853:./Generated_Source/PSoC5/UART.c ****         void UART_EnableTxInt(void) 
 854:./Generated_Source/PSoC5/UART.c ****         {
 855:./Generated_Source/PSoC5/UART.c ****             CyIntEnable(UART_TX_VECT_NUM);
 856:./Generated_Source/PSoC5/UART.c ****         }
 857:./Generated_Source/PSoC5/UART.c **** 
 858:./Generated_Source/PSoC5/UART.c **** 
 859:./Generated_Source/PSoC5/UART.c ****         /*******************************************************************************
 860:./Generated_Source/PSoC5/UART.c ****         * Function Name: UART_DisableTxInt
 861:./Generated_Source/PSoC5/UART.c ****         ********************************************************************************
 862:./Generated_Source/PSoC5/UART.c ****         *
 863:./Generated_Source/PSoC5/UART.c ****         * Summary:
 864:./Generated_Source/PSoC5/UART.c ****         *  Disable TX interrupt generation
 865:./Generated_Source/PSoC5/UART.c ****         *
 866:./Generated_Source/PSoC5/UART.c ****         * Parameters:
 867:./Generated_Source/PSoC5/UART.c ****         *  None.
 868:./Generated_Source/PSoC5/UART.c ****         *
 869:./Generated_Source/PSoC5/UART.c ****         * Return:
 870:./Generated_Source/PSoC5/UART.c ****         *  None.
 871:./Generated_Source/PSoC5/UART.c ****         *
 872:./Generated_Source/PSoC5/UART.c ****         * Theory:
 873:./Generated_Source/PSoC5/UART.c ****         *  Disable the interrupt output -or- the interrupt component itself
 874:./Generated_Source/PSoC5/UART.c ****         *
 875:./Generated_Source/PSoC5/UART.c ****         *******************************************************************************/
 876:./Generated_Source/PSoC5/UART.c ****         void UART_DisableTxInt(void) 
 877:./Generated_Source/PSoC5/UART.c ****         {
 878:./Generated_Source/PSoC5/UART.c ****             CyIntDisable(UART_TX_VECT_NUM);
 879:./Generated_Source/PSoC5/UART.c ****         }
 880:./Generated_Source/PSoC5/UART.c **** 
 881:./Generated_Source/PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
 882:./Generated_Source/PSoC5/UART.c **** 
 883:./Generated_Source/PSoC5/UART.c **** 
 884:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
 885:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 886:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
 887:./Generated_Source/PSoC5/UART.c ****     *
 888:./Generated_Source/PSoC5/UART.c ****     * Summary:
 889:./Generated_Source/PSoC5/UART.c ****     *  Configure which status bits trigger an interrupt event
 890:./Generated_Source/PSoC5/UART.c ****     *
 891:./Generated_Source/PSoC5/UART.c ****     * Parameters:
 892:./Generated_Source/PSoC5/UART.c ****     *  intSrc: An or'd combination of the desired status bit masks (defined in
 893:./Generated_Source/PSoC5/UART.c ****     *          the header file)
 894:./Generated_Source/PSoC5/UART.c ****     *
 895:./Generated_Source/PSoC5/UART.c ****     * Return:
 896:./Generated_Source/PSoC5/UART.c ****     *  None.
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 22


 897:./Generated_Source/PSoC5/UART.c ****     *
 898:./Generated_Source/PSoC5/UART.c ****     * Theory:
 899:./Generated_Source/PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 900:./Generated_Source/PSoC5/UART.c ****     *
 901:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
 902:./Generated_Source/PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 903:./Generated_Source/PSoC5/UART.c ****     {
 298              		.loc 1 903 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 8
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303 0000 80B4     		push	{r7}
 304              	.LCFI15:
 305              		.cfi_def_cfa_offset 4
 306 0002 83B0     		sub	sp, sp, #12
 307              	.LCFI16:
 308              		.cfi_def_cfa_offset 16
 309 0004 00AF     		add	r7, sp, #0
 310              		.cfi_offset 7, -4
 311              	.LCFI17:
 312              		.cfi_def_cfa_register 7
 313 0006 0346     		mov	r3, r0
 314 0008 FB71     		strb	r3, [r7, #7]
 904:./Generated_Source/PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 315              		.loc 1 904 0
 316 000a 46F28443 		movw	r3, #:lower16:1073767556
 317 000e C4F20003 		movt	r3, #:upper16:1073767556
 318 0012 FA79     		ldrb	r2, [r7, #7]
 319 0014 1A70     		strb	r2, [r3, #0]
 905:./Generated_Source/PSoC5/UART.c ****     }
 320              		.loc 1 905 0
 321 0016 07F10C07 		add	r7, r7, #12
 322 001a BD46     		mov	sp, r7
 323 001c 80BC     		pop	{r7}
 324 001e 7047     		bx	lr
 325              		.cfi_endproc
 326              	.LFE6:
 327              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 328              		.section	.text.UART_WriteTxData,"ax",%progbits
 329              		.align	2
 330              		.global	UART_WriteTxData
 331              		.thumb
 332              		.thumb_func
 333              		.type	UART_WriteTxData, %function
 334              	UART_WriteTxData:
 335              	.LFB7:
 906:./Generated_Source/PSoC5/UART.c **** 
 907:./Generated_Source/PSoC5/UART.c **** 
 908:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
 909:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 910:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
 911:./Generated_Source/PSoC5/UART.c ****     *
 912:./Generated_Source/PSoC5/UART.c ****     * Summary:
 913:./Generated_Source/PSoC5/UART.c ****     *  Write a byte of data to the Transmit FIFO or TX buffer to be sent when the 
 914:./Generated_Source/PSoC5/UART.c ****     *  bus is available. WriteTxData sends a byte without checking for buffer room 
 915:./Generated_Source/PSoC5/UART.c ****     *  or status. It is up to the user to separately check status.    
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 23


 916:./Generated_Source/PSoC5/UART.c ****     *
 917:./Generated_Source/PSoC5/UART.c ****     * Parameters:
 918:./Generated_Source/PSoC5/UART.c ****     *  TXDataByte: byte of data to place in the transmit FIFO
 919:./Generated_Source/PSoC5/UART.c ****     *
 920:./Generated_Source/PSoC5/UART.c ****     * Return:
 921:./Generated_Source/PSoC5/UART.c ****     * void
 922:./Generated_Source/PSoC5/UART.c ****     *
 923:./Generated_Source/PSoC5/UART.c ****     * Global Variables:
 924:./Generated_Source/PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 925:./Generated_Source/PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer, 
 926:./Generated_Source/PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 927:./Generated_Source/PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer, 
 928:./Generated_Source/PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 929:./Generated_Source/PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been  
 930:./Generated_Source/PSoC5/UART.c ****     *    initialized.
 931:./Generated_Source/PSoC5/UART.c ****     *
 932:./Generated_Source/PSoC5/UART.c ****     * Reentrant:
 933:./Generated_Source/PSoC5/UART.c ****     *  No.
 934:./Generated_Source/PSoC5/UART.c ****     *
 935:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
 936:./Generated_Source/PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte)
 937:./Generated_Source/PSoC5/UART.c ****     {
 336              		.loc 1 937 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 8
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341 0000 80B4     		push	{r7}
 342              	.LCFI18:
 343              		.cfi_def_cfa_offset 4
 344 0002 83B0     		sub	sp, sp, #12
 345              	.LCFI19:
 346              		.cfi_def_cfa_offset 16
 347 0004 00AF     		add	r7, sp, #0
 348              		.cfi_offset 7, -4
 349              	.LCFI20:
 350              		.cfi_def_cfa_register 7
 351 0006 0346     		mov	r3, r0
 352 0008 FB71     		strb	r3, [r7, #7]
 938:./Generated_Source/PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 939:./Generated_Source/PSoC5/UART.c ****         if(UART_initVar != 0u)
 353              		.loc 1 939 0
 354 000a 40F20003 		movw	r3, #:lower16:UART_initVar
 355 000e C0F20003 		movt	r3, #:upper16:UART_initVar
 356 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 357 0014 002B     		cmp	r3, #0
 358 0016 05D0     		beq	.L18
 940:./Generated_Source/PSoC5/UART.c ****         {
 941:./Generated_Source/PSoC5/UART.c ****             #if(UART_TXBUFFERSIZE > UART_FIFO_LENGTH)
 942:./Generated_Source/PSoC5/UART.c **** 
 943:./Generated_Source/PSoC5/UART.c ****                 /* Disable Tx interrupt. */
 944:./Generated_Source/PSoC5/UART.c ****                 /* Protect variables that could change on interrupt. */
 945:./Generated_Source/PSoC5/UART.c ****                 #if(UART_TX_INTERRUPT_ENABLED)
 946:./Generated_Source/PSoC5/UART.c ****                     UART_DisableTxInt();
 947:./Generated_Source/PSoC5/UART.c ****                 #endif /* End UART_TX_INTERRUPT_ENABLED */
 948:./Generated_Source/PSoC5/UART.c **** 
 949:./Generated_Source/PSoC5/UART.c ****                 if( (UART_txBufferRead == UART_txBufferWrite) && \
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 24


 950:./Generated_Source/PSoC5/UART.c ****                    !(UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) )
 951:./Generated_Source/PSoC5/UART.c ****                 {
 952:./Generated_Source/PSoC5/UART.c ****                     /* Add directly to the FIFO. */
 953:./Generated_Source/PSoC5/UART.c ****                     UART_TXDATA_REG = txDataByte;
 954:./Generated_Source/PSoC5/UART.c ****                 }
 955:./Generated_Source/PSoC5/UART.c ****                 else
 956:./Generated_Source/PSoC5/UART.c ****                 {
 957:./Generated_Source/PSoC5/UART.c ****                     if(UART_txBufferWrite >= UART_TXBUFFERSIZE)
 958:./Generated_Source/PSoC5/UART.c ****                     {
 959:./Generated_Source/PSoC5/UART.c ****                         UART_txBufferWrite = 0;
 960:./Generated_Source/PSoC5/UART.c ****                     }
 961:./Generated_Source/PSoC5/UART.c **** 
 962:./Generated_Source/PSoC5/UART.c ****                     UART_txBuffer[UART_txBufferWrite] = txDataByte;
 963:./Generated_Source/PSoC5/UART.c **** 
 964:./Generated_Source/PSoC5/UART.c ****                     /* Add to the software buffer. */
 965:./Generated_Source/PSoC5/UART.c ****                     UART_txBufferWrite++;
 966:./Generated_Source/PSoC5/UART.c **** 
 967:./Generated_Source/PSoC5/UART.c ****                 }
 968:./Generated_Source/PSoC5/UART.c **** 
 969:./Generated_Source/PSoC5/UART.c ****                 /* Enable Tx interrupt. */
 970:./Generated_Source/PSoC5/UART.c ****                 #if(UART_TX_INTERRUPT_ENABLED)
 971:./Generated_Source/PSoC5/UART.c ****                     UART_EnableTxInt();
 972:./Generated_Source/PSoC5/UART.c ****                 #endif /* End UART_TX_INTERRUPT_ENABLED */
 973:./Generated_Source/PSoC5/UART.c **** 
 974:./Generated_Source/PSoC5/UART.c ****             #else /* UART_TXBUFFERSIZE > UART_FIFO_LENGTH */
 975:./Generated_Source/PSoC5/UART.c **** 
 976:./Generated_Source/PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 977:./Generated_Source/PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 359              		.loc 1 977 0
 360 0018 46F24443 		movw	r3, #:lower16:1073767492
 361 001c C4F20003 		movt	r3, #:upper16:1073767492
 362 0020 FA79     		ldrb	r2, [r7, #7]
 363 0022 1A70     		strb	r2, [r3, #0]
 364              	.L18:
 978:./Generated_Source/PSoC5/UART.c **** 
 979:./Generated_Source/PSoC5/UART.c ****             #endif /* End UART_TXBUFFERSIZE > UART_FIFO_LENGTH */
 980:./Generated_Source/PSoC5/UART.c ****         }
 981:./Generated_Source/PSoC5/UART.c ****     }
 365              		.loc 1 981 0
 366 0024 07F10C07 		add	r7, r7, #12
 367 0028 BD46     		mov	sp, r7
 368 002a 80BC     		pop	{r7}
 369 002c 7047     		bx	lr
 370              		.cfi_endproc
 371              	.LFE7:
 372              		.size	UART_WriteTxData, .-UART_WriteTxData
 373 002e 00BF     		.section	.text.UART_ReadTxStatus,"ax",%progbits
 374              		.align	2
 375              		.global	UART_ReadTxStatus
 376              		.thumb
 377              		.thumb_func
 378              		.type	UART_ReadTxStatus, %function
 379              	UART_ReadTxStatus:
 380              	.LFB8:
 982:./Generated_Source/PSoC5/UART.c **** 
 983:./Generated_Source/PSoC5/UART.c **** 
 984:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 25


 985:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 986:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
 987:./Generated_Source/PSoC5/UART.c ****     *
 988:./Generated_Source/PSoC5/UART.c ****     * Summary:
 989:./Generated_Source/PSoC5/UART.c ****     *  Read the status register for the component
 990:./Generated_Source/PSoC5/UART.c ****     *
 991:./Generated_Source/PSoC5/UART.c ****     * Parameters:
 992:./Generated_Source/PSoC5/UART.c ****     *  None.
 993:./Generated_Source/PSoC5/UART.c ****     *
 994:./Generated_Source/PSoC5/UART.c ****     * Return:
 995:./Generated_Source/PSoC5/UART.c ****     *  Contents of the status register
 996:./Generated_Source/PSoC5/UART.c ****     *
 997:./Generated_Source/PSoC5/UART.c ****     * Theory:
 998:./Generated_Source/PSoC5/UART.c ****     *  This function reads the status register which is clear on read. It is up to 
 999:./Generated_Source/PSoC5/UART.c ****     *  the user to handle all bits in this return value accordingly, even if the bit 
1000:./Generated_Source/PSoC5/UART.c ****     *  was not enabled as an interrupt source the event happened and must be handled
1001:./Generated_Source/PSoC5/UART.c ****     *  accordingly.    
1002:./Generated_Source/PSoC5/UART.c ****     *
1003:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
1004:./Generated_Source/PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1005:./Generated_Source/PSoC5/UART.c ****     {
 381              		.loc 1 1005 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 386 0000 80B4     		push	{r7}
 387              	.LCFI21:
 388              		.cfi_def_cfa_offset 4
 389 0002 00AF     		add	r7, sp, #0
 390              		.cfi_offset 7, -4
 391              	.LCFI22:
 392              		.cfi_def_cfa_register 7
1006:./Generated_Source/PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 393              		.loc 1 1006 0
 394 0004 46F26443 		movw	r3, #:lower16:1073767524
 395 0008 C4F20003 		movt	r3, #:upper16:1073767524
 396 000c 1B78     		ldrb	r3, [r3, #0]
 397 000e DBB2     		uxtb	r3, r3
1007:./Generated_Source/PSoC5/UART.c ****     }
 398              		.loc 1 1007 0
 399 0010 1846     		mov	r0, r3
 400 0012 BD46     		mov	sp, r7
 401 0014 80BC     		pop	{r7}
 402 0016 7047     		bx	lr
 403              		.cfi_endproc
 404              	.LFE8:
 405              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 406              		.section	.text.UART_PutChar,"ax",%progbits
 407              		.align	2
 408              		.global	UART_PutChar
 409              		.thumb
 410              		.thumb_func
 411              		.type	UART_PutChar, %function
 412              	UART_PutChar:
 413              	.LFB9:
1008:./Generated_Source/PSoC5/UART.c **** 
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 26


1009:./Generated_Source/PSoC5/UART.c **** 
1010:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
1011:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_PutChar
1012:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
1013:./Generated_Source/PSoC5/UART.c ****     *
1014:./Generated_Source/PSoC5/UART.c ****     * Summary:
1015:./Generated_Source/PSoC5/UART.c ****     *  Wait to send byte until TX register or buffer has room.
1016:./Generated_Source/PSoC5/UART.c ****     *
1017:./Generated_Source/PSoC5/UART.c ****     * Parameters:
1018:./Generated_Source/PSoC5/UART.c ****     *  txDataByte: The 8-bit data value to send across the UART.
1019:./Generated_Source/PSoC5/UART.c ****     *
1020:./Generated_Source/PSoC5/UART.c ****     * Return:
1021:./Generated_Source/PSoC5/UART.c ****     *  None.
1022:./Generated_Source/PSoC5/UART.c ****     *
1023:./Generated_Source/PSoC5/UART.c ****     * Global Variables:
1024:./Generated_Source/PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1025:./Generated_Source/PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer, 
1026:./Generated_Source/PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte 
1027:./Generated_Source/PSoC5/UART.c ****     *     saved to buffer.
1028:./Generated_Source/PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer, 
1029:./Generated_Source/PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1030:./Generated_Source/PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been  
1031:./Generated_Source/PSoC5/UART.c ****     *     initialized.
1032:./Generated_Source/PSoC5/UART.c ****     *
1033:./Generated_Source/PSoC5/UART.c ****     * Reentrant:
1034:./Generated_Source/PSoC5/UART.c ****     *  No.
1035:./Generated_Source/PSoC5/UART.c ****     *
1036:./Generated_Source/PSoC5/UART.c ****     * Theory:
1037:./Generated_Source/PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1038:./Generated_Source/PSoC5/UART.c ****     *
1039:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
1040:./Generated_Source/PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte)
1041:./Generated_Source/PSoC5/UART.c ****     {
 414              		.loc 1 1041 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 8
 417              		@ frame_needed = 1, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419 0000 80B4     		push	{r7}
 420              	.LCFI23:
 421              		.cfi_def_cfa_offset 4
 422 0002 83B0     		sub	sp, sp, #12
 423              	.LCFI24:
 424              		.cfi_def_cfa_offset 16
 425 0004 00AF     		add	r7, sp, #0
 426              		.cfi_offset 7, -4
 427              	.LCFI25:
 428              		.cfi_def_cfa_register 7
 429 0006 0346     		mov	r3, r0
 430 0008 FB71     		strb	r3, [r7, #7]
 431              	.L22:
1042:./Generated_Source/PSoC5/UART.c ****             #if(UART_TXBUFFERSIZE > UART_FIFO_LENGTH)
1043:./Generated_Source/PSoC5/UART.c **** 
1044:./Generated_Source/PSoC5/UART.c ****                 /* Block if buffer is full, so we dont overwrite. */
1045:./Generated_Source/PSoC5/UART.c ****                 while( UART_txBufferWrite == (UART_txBufferRead - 1u) || \
1046:./Generated_Source/PSoC5/UART.c ****                     (uint8)(UART_txBufferWrite - UART_txBufferRead) ==
1047:./Generated_Source/PSoC5/UART.c ****                     (uint8)(UART_TXBUFFERSIZE - 1u) )
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 27


1048:./Generated_Source/PSoC5/UART.c ****                 {
1049:./Generated_Source/PSoC5/UART.c ****                     /* Software buffer is full. */
1050:./Generated_Source/PSoC5/UART.c ****                 }
1051:./Generated_Source/PSoC5/UART.c ****                 /* Disable Tx interrupt. */
1052:./Generated_Source/PSoC5/UART.c ****                 /* Protect variables that could change on interrupt. */
1053:./Generated_Source/PSoC5/UART.c ****                 #if(UART_TX_INTERRUPT_ENABLED)
1054:./Generated_Source/PSoC5/UART.c ****                     UART_DisableTxInt();
1055:./Generated_Source/PSoC5/UART.c ****                 #endif /* End UART_TX_INTERRUPT_ENABLED */
1056:./Generated_Source/PSoC5/UART.c **** 
1057:./Generated_Source/PSoC5/UART.c ****                 if( (UART_txBufferRead == UART_txBufferWrite) && \
1058:./Generated_Source/PSoC5/UART.c ****                    !(UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) )
1059:./Generated_Source/PSoC5/UART.c ****                 {
1060:./Generated_Source/PSoC5/UART.c ****                     /* Add directly to the FIFO. */
1061:./Generated_Source/PSoC5/UART.c ****                     UART_TXDATA_REG = txDataByte;
1062:./Generated_Source/PSoC5/UART.c ****                 }
1063:./Generated_Source/PSoC5/UART.c ****                 else
1064:./Generated_Source/PSoC5/UART.c ****                 {
1065:./Generated_Source/PSoC5/UART.c ****                     if(UART_txBufferWrite >= UART_TXBUFFERSIZE)
1066:./Generated_Source/PSoC5/UART.c ****                     {
1067:./Generated_Source/PSoC5/UART.c ****                         UART_txBufferWrite = 0;
1068:./Generated_Source/PSoC5/UART.c ****                     }
1069:./Generated_Source/PSoC5/UART.c **** 
1070:./Generated_Source/PSoC5/UART.c ****                     UART_txBuffer[UART_txBufferWrite] = txDataByte;
1071:./Generated_Source/PSoC5/UART.c **** 
1072:./Generated_Source/PSoC5/UART.c ****                     /* Add to the software buffer. */
1073:./Generated_Source/PSoC5/UART.c ****                     UART_txBufferWrite++;
1074:./Generated_Source/PSoC5/UART.c **** 
1075:./Generated_Source/PSoC5/UART.c ****                 }
1076:./Generated_Source/PSoC5/UART.c **** 
1077:./Generated_Source/PSoC5/UART.c ****                 /* Enable Rx interrupt. */
1078:./Generated_Source/PSoC5/UART.c ****                 #if(UART_TX_INTERRUPT_ENABLED)
1079:./Generated_Source/PSoC5/UART.c ****                     UART_EnableTxInt();
1080:./Generated_Source/PSoC5/UART.c ****                 #endif /* End UART_TX_INTERRUPT_ENABLED */
1081:./Generated_Source/PSoC5/UART.c **** 
1082:./Generated_Source/PSoC5/UART.c ****             #else /* UART_TXBUFFERSIZE > UART_FIFO_LENGTH */
1083:./Generated_Source/PSoC5/UART.c **** 
1084:./Generated_Source/PSoC5/UART.c ****                 /* Block if there isnt room. */
1085:./Generated_Source/PSoC5/UART.c ****                 while(UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL);
 432              		.loc 1 1085 0
 433 000a 46F26443 		movw	r3, #:lower16:1073767524
 434 000e C4F20003 		movt	r3, #:upper16:1073767524
 435 0012 1B78     		ldrb	r3, [r3, #0]
 436 0014 DBB2     		uxtb	r3, r3
 437 0016 03F00403 		and	r3, r3, #4
 438 001a 002B     		cmp	r3, #0
 439 001c F5D1     		bne	.L22
1086:./Generated_Source/PSoC5/UART.c **** 
1087:./Generated_Source/PSoC5/UART.c ****                 /* Add directly to the FIFO. */
1088:./Generated_Source/PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 440              		.loc 1 1088 0
 441 001e 46F24443 		movw	r3, #:lower16:1073767492
 442 0022 C4F20003 		movt	r3, #:upper16:1073767492
 443 0026 FA79     		ldrb	r2, [r7, #7]
 444 0028 1A70     		strb	r2, [r3, #0]
1089:./Generated_Source/PSoC5/UART.c **** 
1090:./Generated_Source/PSoC5/UART.c ****             #endif /* End UART_TXBUFFERSIZE > UART_FIFO_LENGTH */
1091:./Generated_Source/PSoC5/UART.c ****     }
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 28


 445              		.loc 1 1091 0
 446 002a 07F10C07 		add	r7, r7, #12
 447 002e BD46     		mov	sp, r7
 448 0030 80BC     		pop	{r7}
 449 0032 7047     		bx	lr
 450              		.cfi_endproc
 451              	.LFE9:
 452              		.size	UART_PutChar, .-UART_PutChar
 453              		.section	.text.UART_PutString,"ax",%progbits
 454              		.align	2
 455              		.global	UART_PutString
 456              		.thumb
 457              		.thumb_func
 458              		.type	UART_PutString, %function
 459              	UART_PutString:
 460              	.LFB10:
1092:./Generated_Source/PSoC5/UART.c **** 
1093:./Generated_Source/PSoC5/UART.c **** 
1094:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
1095:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_PutString
1096:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
1097:./Generated_Source/PSoC5/UART.c ****     *
1098:./Generated_Source/PSoC5/UART.c ****     * Summary:
1099:./Generated_Source/PSoC5/UART.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1100:./Generated_Source/PSoC5/UART.c ****     *
1101:./Generated_Source/PSoC5/UART.c ****     * Parameters:
1102:./Generated_Source/PSoC5/UART.c ****     *  string: uint8 pointer to character string of Data to Send.
1103:./Generated_Source/PSoC5/UART.c ****     *
1104:./Generated_Source/PSoC5/UART.c ****     * Return:
1105:./Generated_Source/PSoC5/UART.c ****     *  None.
1106:./Generated_Source/PSoC5/UART.c ****     *
1107:./Generated_Source/PSoC5/UART.c ****     * Global Variables:
1108:./Generated_Source/PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been  
1109:./Generated_Source/PSoC5/UART.c ****     *     initialized.
1110:./Generated_Source/PSoC5/UART.c ****     *
1111:./Generated_Source/PSoC5/UART.c ****     * Reentrant:
1112:./Generated_Source/PSoC5/UART.c ****     *  No.
1113:./Generated_Source/PSoC5/UART.c ****     *
1114:./Generated_Source/PSoC5/UART.c ****     * Theory:
1115:./Generated_Source/PSoC5/UART.c ****     *  This function will block if there is not enough memory to place the whole 
1116:./Generated_Source/PSoC5/UART.c ****     *  string, it will block until the entire string has been written to the 
1117:./Generated_Source/PSoC5/UART.c ****     *  transmit buffer.
1118:./Generated_Source/PSoC5/UART.c ****     *
1119:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
1120:./Generated_Source/PSoC5/UART.c ****     void UART_PutString(uint8* string)
1121:./Generated_Source/PSoC5/UART.c ****     {
 461              		.loc 1 1121 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 8
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465 0000 80B5     		push	{r7, lr}
 466              	.LCFI26:
 467              		.cfi_def_cfa_offset 8
 468 0002 82B0     		sub	sp, sp, #8
 469              	.LCFI27:
 470              		.cfi_def_cfa_offset 16
 471 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 29


 472              		.cfi_offset 14, -4
 473              		.cfi_offset 7, -8
 474              	.LCFI28:
 475              		.cfi_def_cfa_register 7
 476 0006 7860     		str	r0, [r7, #4]
1122:./Generated_Source/PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1123:./Generated_Source/PSoC5/UART.c ****         if(UART_initVar != 0u)
 477              		.loc 1 1123 0
 478 0008 40F20003 		movw	r3, #:lower16:UART_initVar
 479 000c C0F20003 		movt	r3, #:upper16:UART_initVar
 480 0010 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 481 0012 002B     		cmp	r3, #0
 482 0014 0DD0     		beq	.L28
1124:./Generated_Source/PSoC5/UART.c ****         {
1125:./Generated_Source/PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent*/
1126:./Generated_Source/PSoC5/UART.c ****             while(*string != 0u)
 483              		.loc 1 1126 0
 484 0016 08E0     		b	.L26
 485              	.L27:
1127:./Generated_Source/PSoC5/UART.c ****             {
1128:./Generated_Source/PSoC5/UART.c ****                 UART_PutChar(*string++);
 486              		.loc 1 1128 0
 487 0018 7B68     		ldr	r3, [r7, #4]
 488 001a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 489 001c 7A68     		ldr	r2, [r7, #4]
 490 001e 02F10102 		add	r2, r2, #1
 491 0022 7A60     		str	r2, [r7, #4]
 492 0024 1846     		mov	r0, r3
 493 0026 FFF7FEFF 		bl	UART_PutChar
 494              	.L26:
 495              		.loc 1 1126 0
 496 002a 7B68     		ldr	r3, [r7, #4]
 497 002c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 498 002e 002B     		cmp	r3, #0
 499 0030 F2D1     		bne	.L27
 500              	.L28:
1129:./Generated_Source/PSoC5/UART.c ****             }
1130:./Generated_Source/PSoC5/UART.c ****         }
1131:./Generated_Source/PSoC5/UART.c ****     }
 501              		.loc 1 1131 0
 502 0032 07F10807 		add	r7, r7, #8
 503 0036 BD46     		mov	sp, r7
 504 0038 80BD     		pop	{r7, pc}
 505              		.cfi_endproc
 506              	.LFE10:
 507              		.size	UART_PutString, .-UART_PutString
 508 003a 00BF     		.section	.text.UART_PutArray,"ax",%progbits
 509              		.align	2
 510              		.global	UART_PutArray
 511              		.thumb
 512              		.thumb_func
 513              		.type	UART_PutArray, %function
 514              	UART_PutArray:
 515              	.LFB11:
1132:./Generated_Source/PSoC5/UART.c **** 
1133:./Generated_Source/PSoC5/UART.c **** 
1134:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 30


1135:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_PutArray
1136:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
1137:./Generated_Source/PSoC5/UART.c ****     *
1138:./Generated_Source/PSoC5/UART.c ****     * Summary:
1139:./Generated_Source/PSoC5/UART.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1140:./Generated_Source/PSoC5/UART.c ****     *
1141:./Generated_Source/PSoC5/UART.c ****     * Parameters:
1142:./Generated_Source/PSoC5/UART.c ****     *  string: Address of the memory array residing in RAM or ROM.
1143:./Generated_Source/PSoC5/UART.c ****     *  byteCount: Number of Bytes to be transmitted.
1144:./Generated_Source/PSoC5/UART.c ****     *
1145:./Generated_Source/PSoC5/UART.c ****     * Return:
1146:./Generated_Source/PSoC5/UART.c ****     *  None.
1147:./Generated_Source/PSoC5/UART.c ****     *
1148:./Generated_Source/PSoC5/UART.c ****     * Global Variables:
1149:./Generated_Source/PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been  
1150:./Generated_Source/PSoC5/UART.c ****     *     initialized.
1151:./Generated_Source/PSoC5/UART.c ****     *
1152:./Generated_Source/PSoC5/UART.c ****     * Reentrant:
1153:./Generated_Source/PSoC5/UART.c ****     *  No.
1154:./Generated_Source/PSoC5/UART.c ****     *
1155:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
1156:./Generated_Source/PSoC5/UART.c ****     void UART_PutArray(uint8* string, uint8 byteCount)
1157:./Generated_Source/PSoC5/UART.c ****     {
 516              		.loc 1 1157 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 8
 519              		@ frame_needed = 1, uses_anonymous_args = 0
 520 0000 80B5     		push	{r7, lr}
 521              	.LCFI29:
 522              		.cfi_def_cfa_offset 8
 523 0002 82B0     		sub	sp, sp, #8
 524              	.LCFI30:
 525              		.cfi_def_cfa_offset 16
 526 0004 00AF     		add	r7, sp, #0
 527              		.cfi_offset 14, -4
 528              		.cfi_offset 7, -8
 529              	.LCFI31:
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 532 0008 0B46     		mov	r3, r1
 533 000a FB70     		strb	r3, [r7, #3]
1158:./Generated_Source/PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1159:./Generated_Source/PSoC5/UART.c ****         if(UART_initVar != 0u)
 534              		.loc 1 1159 0
 535 000c 40F20003 		movw	r3, #:lower16:UART_initVar
 536 0010 C0F20003 		movt	r3, #:upper16:UART_initVar
 537 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 538 0016 002B     		cmp	r3, #0
 539 0018 10D0     		beq	.L33
1160:./Generated_Source/PSoC5/UART.c ****         {
1161:./Generated_Source/PSoC5/UART.c ****             while(byteCount > 0u)
 540              		.loc 1 1161 0
 541 001a 0CE0     		b	.L31
 542              	.L32:
1162:./Generated_Source/PSoC5/UART.c ****             {
1163:./Generated_Source/PSoC5/UART.c ****                 UART_PutChar(*string++);
 543              		.loc 1 1163 0
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 31


 544 001c 7B68     		ldr	r3, [r7, #4]
 545 001e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 546 0020 7A68     		ldr	r2, [r7, #4]
 547 0022 02F10102 		add	r2, r2, #1
 548 0026 7A60     		str	r2, [r7, #4]
 549 0028 1846     		mov	r0, r3
 550 002a FFF7FEFF 		bl	UART_PutChar
1164:./Generated_Source/PSoC5/UART.c ****                 byteCount--;
 551              		.loc 1 1164 0
 552 002e FB78     		ldrb	r3, [r7, #3]
 553 0030 03F1FF33 		add	r3, r3, #-1
 554 0034 FB70     		strb	r3, [r7, #3]
 555              	.L31:
 556              		.loc 1 1161 0
 557 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 558 0038 002B     		cmp	r3, #0
 559 003a EFD1     		bne	.L32
 560              	.L33:
1165:./Generated_Source/PSoC5/UART.c ****             }
1166:./Generated_Source/PSoC5/UART.c ****         }
1167:./Generated_Source/PSoC5/UART.c ****     }
 561              		.loc 1 1167 0
 562 003c 07F10807 		add	r7, r7, #8
 563 0040 BD46     		mov	sp, r7
 564 0042 80BD     		pop	{r7, pc}
 565              		.cfi_endproc
 566              	.LFE11:
 567              		.size	UART_PutArray, .-UART_PutArray
 568              		.section	.text.UART_PutCRLF,"ax",%progbits
 569              		.align	2
 570              		.global	UART_PutCRLF
 571              		.thumb
 572              		.thumb_func
 573              		.type	UART_PutCRLF, %function
 574              	UART_PutCRLF:
 575              	.LFB12:
1168:./Generated_Source/PSoC5/UART.c **** 
1169:./Generated_Source/PSoC5/UART.c **** 
1170:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
1171:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1172:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
1173:./Generated_Source/PSoC5/UART.c ****     *
1174:./Generated_Source/PSoC5/UART.c ****     * Summary:
1175:./Generated_Source/PSoC5/UART.c ****     *  Write a character and then carriage return and line feed.
1176:./Generated_Source/PSoC5/UART.c ****     *
1177:./Generated_Source/PSoC5/UART.c ****     * Parameters:
1178:./Generated_Source/PSoC5/UART.c ****     *  txDataByte: uint8 Character to send.
1179:./Generated_Source/PSoC5/UART.c ****     *
1180:./Generated_Source/PSoC5/UART.c ****     * Return:
1181:./Generated_Source/PSoC5/UART.c ****     *  None.
1182:./Generated_Source/PSoC5/UART.c ****     *
1183:./Generated_Source/PSoC5/UART.c ****     * Global Variables:
1184:./Generated_Source/PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been  
1185:./Generated_Source/PSoC5/UART.c ****     *     initialized.
1186:./Generated_Source/PSoC5/UART.c ****     *
1187:./Generated_Source/PSoC5/UART.c ****     * Reentrant:
1188:./Generated_Source/PSoC5/UART.c ****     *  No.
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 32


1189:./Generated_Source/PSoC5/UART.c ****     *
1190:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
1191:./Generated_Source/PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte)
1192:./Generated_Source/PSoC5/UART.c ****     {
 576              		.loc 1 1192 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 8
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580 0000 80B5     		push	{r7, lr}
 581              	.LCFI32:
 582              		.cfi_def_cfa_offset 8
 583 0002 82B0     		sub	sp, sp, #8
 584              	.LCFI33:
 585              		.cfi_def_cfa_offset 16
 586 0004 00AF     		add	r7, sp, #0
 587              		.cfi_offset 14, -4
 588              		.cfi_offset 7, -8
 589              	.LCFI34:
 590              		.cfi_def_cfa_register 7
 591 0006 0346     		mov	r3, r0
 592 0008 FB71     		strb	r3, [r7, #7]
1193:./Generated_Source/PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1194:./Generated_Source/PSoC5/UART.c ****         if(UART_initVar != 0u)
 593              		.loc 1 1194 0
 594 000a 40F20003 		movw	r3, #:lower16:UART_initVar
 595 000e C0F20003 		movt	r3, #:upper16:UART_initVar
 596 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 597 0014 002B     		cmp	r3, #0
 598 0016 0BD0     		beq	.L36
1195:./Generated_Source/PSoC5/UART.c ****         {
1196:./Generated_Source/PSoC5/UART.c ****             UART_PutChar(txDataByte);
 599              		.loc 1 1196 0
 600 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 601 001a 1846     		mov	r0, r3
 602 001c FFF7FEFF 		bl	UART_PutChar
1197:./Generated_Source/PSoC5/UART.c ****             UART_PutChar(0x0Du);
 603              		.loc 1 1197 0
 604 0020 4FF00D00 		mov	r0, #13
 605 0024 FFF7FEFF 		bl	UART_PutChar
1198:./Generated_Source/PSoC5/UART.c ****             UART_PutChar(0x0Au);
 606              		.loc 1 1198 0
 607 0028 4FF00A00 		mov	r0, #10
 608 002c FFF7FEFF 		bl	UART_PutChar
 609              	.L36:
1199:./Generated_Source/PSoC5/UART.c ****         }
1200:./Generated_Source/PSoC5/UART.c ****     }
 610              		.loc 1 1200 0
 611 0030 07F10807 		add	r7, r7, #8
 612 0034 BD46     		mov	sp, r7
 613 0036 80BD     		pop	{r7, pc}
 614              		.cfi_endproc
 615              	.LFE12:
 616              		.size	UART_PutCRLF, .-UART_PutCRLF
 617              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 618              		.align	2
 619              		.global	UART_GetTxBufferSize
 620              		.thumb
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 33


 621              		.thumb_func
 622              		.type	UART_GetTxBufferSize, %function
 623              	UART_GetTxBufferSize:
 624              	.LFB13:
1201:./Generated_Source/PSoC5/UART.c **** 
1202:./Generated_Source/PSoC5/UART.c **** 
1203:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
1204:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1205:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
1206:./Generated_Source/PSoC5/UART.c ****     *
1207:./Generated_Source/PSoC5/UART.c ****     * Summary:
1208:./Generated_Source/PSoC5/UART.c ****     *  Determine the amount of space left in the TX buffer and return the count in
1209:./Generated_Source/PSoC5/UART.c ****     *  bytes
1210:./Generated_Source/PSoC5/UART.c ****     *
1211:./Generated_Source/PSoC5/UART.c ****     * Parameters:
1212:./Generated_Source/PSoC5/UART.c ****     *  None.
1213:./Generated_Source/PSoC5/UART.c ****     *
1214:./Generated_Source/PSoC5/UART.c ****     * Return:
1215:./Generated_Source/PSoC5/UART.c ****     *  Integer count of the number of bytes left in the TX buffer
1216:./Generated_Source/PSoC5/UART.c ****     *
1217:./Generated_Source/PSoC5/UART.c ****     * Global Variables:
1218:./Generated_Source/PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space. 
1219:./Generated_Source/PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1220:./Generated_Source/PSoC5/UART.c ****     *
1221:./Generated_Source/PSoC5/UART.c ****     * Reentrant:
1222:./Generated_Source/PSoC5/UART.c ****     *  No.
1223:./Generated_Source/PSoC5/UART.c ****     *
1224:./Generated_Source/PSoC5/UART.c ****     * Theory:
1225:./Generated_Source/PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1226:./Generated_Source/PSoC5/UART.c ****     *
1227:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
1228:./Generated_Source/PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1229:./Generated_Source/PSoC5/UART.c ****     {
 625              		.loc 1 1229 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 8
 628              		@ frame_needed = 1, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630 0000 80B4     		push	{r7}
 631              	.LCFI35:
 632              		.cfi_def_cfa_offset 4
 633 0002 83B0     		sub	sp, sp, #12
 634              	.LCFI36:
 635              		.cfi_def_cfa_offset 16
 636 0004 00AF     		add	r7, sp, #0
 637              		.cfi_offset 7, -4
 638              	.LCFI37:
 639              		.cfi_def_cfa_register 7
1230:./Generated_Source/PSoC5/UART.c ****         uint8 size;
1231:./Generated_Source/PSoC5/UART.c **** 
1232:./Generated_Source/PSoC5/UART.c ****         #if(UART_TXBUFFERSIZE > UART_FIFO_LENGTH)
1233:./Generated_Source/PSoC5/UART.c **** 
1234:./Generated_Source/PSoC5/UART.c ****             /* Disable Tx interrupt. */
1235:./Generated_Source/PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
1236:./Generated_Source/PSoC5/UART.c ****             #if(UART_TX_INTERRUPT_ENABLED)
1237:./Generated_Source/PSoC5/UART.c ****                 UART_DisableTxInt();
1238:./Generated_Source/PSoC5/UART.c ****             #endif /* End UART_TX_INTERRUPT_ENABLED */
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 34


1239:./Generated_Source/PSoC5/UART.c **** 
1240:./Generated_Source/PSoC5/UART.c ****             if(UART_txBufferRead == UART_txBufferWrite)
1241:./Generated_Source/PSoC5/UART.c ****             {
1242:./Generated_Source/PSoC5/UART.c ****                 size = 0u;
1243:./Generated_Source/PSoC5/UART.c ****             }
1244:./Generated_Source/PSoC5/UART.c ****             else if(UART_txBufferRead < UART_txBufferWrite)
1245:./Generated_Source/PSoC5/UART.c ****             {
1246:./Generated_Source/PSoC5/UART.c ****                 size = (UART_txBufferWrite - UART_txBufferRead);
1247:./Generated_Source/PSoC5/UART.c ****             }
1248:./Generated_Source/PSoC5/UART.c ****             else
1249:./Generated_Source/PSoC5/UART.c ****             {
1250:./Generated_Source/PSoC5/UART.c ****                 size = (UART_TXBUFFERSIZE - UART_txBufferRead) + UART_txBufferWrite;
1251:./Generated_Source/PSoC5/UART.c ****             }
1252:./Generated_Source/PSoC5/UART.c **** 
1253:./Generated_Source/PSoC5/UART.c ****             /* Enable Tx interrupt. */
1254:./Generated_Source/PSoC5/UART.c ****             #if(UART_TX_INTERRUPT_ENABLED)
1255:./Generated_Source/PSoC5/UART.c ****                 UART_EnableTxInt();
1256:./Generated_Source/PSoC5/UART.c ****             #endif /* End UART_TX_INTERRUPT_ENABLED */
1257:./Generated_Source/PSoC5/UART.c **** 
1258:./Generated_Source/PSoC5/UART.c ****         #else /* UART_TXBUFFERSIZE > UART_FIFO_LENGTH */
1259:./Generated_Source/PSoC5/UART.c **** 
1260:./Generated_Source/PSoC5/UART.c ****             size = UART_TXSTATUS_REG;
 640              		.loc 1 1260 0
 641 0006 46F26443 		movw	r3, #:lower16:1073767524
 642 000a C4F20003 		movt	r3, #:upper16:1073767524
 643 000e 1B78     		ldrb	r3, [r3, #0]
 644 0010 FB71     		strb	r3, [r7, #7]
1261:./Generated_Source/PSoC5/UART.c **** 
1262:./Generated_Source/PSoC5/UART.c ****             /* Is the fifo is full. */
1263:./Generated_Source/PSoC5/UART.c ****             if(size & UART_TX_STS_FIFO_FULL)
 645              		.loc 1 1263 0
 646 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 647 0014 03F00403 		and	r3, r3, #4
 648 0018 002B     		cmp	r3, #0
 649 001a 03D0     		beq	.L38
1264:./Generated_Source/PSoC5/UART.c ****             {
1265:./Generated_Source/PSoC5/UART.c ****                 size = UART_FIFO_LENGTH;
 650              		.loc 1 1265 0
 651 001c 4FF00403 		mov	r3, #4
 652 0020 FB71     		strb	r3, [r7, #7]
 653 0022 0BE0     		b	.L39
 654              	.L38:
1266:./Generated_Source/PSoC5/UART.c ****             }
1267:./Generated_Source/PSoC5/UART.c ****             else if(size & UART_TX_STS_FIFO_EMPTY)
 655              		.loc 1 1267 0
 656 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 657 0026 03F00203 		and	r3, r3, #2
 658 002a 002B     		cmp	r3, #0
 659 002c 03D0     		beq	.L40
1268:./Generated_Source/PSoC5/UART.c ****             {
1269:./Generated_Source/PSoC5/UART.c ****                 size = 0u;
 660              		.loc 1 1269 0
 661 002e 4FF00003 		mov	r3, #0
 662 0032 FB71     		strb	r3, [r7, #7]
 663 0034 02E0     		b	.L39
 664              	.L40:
1270:./Generated_Source/PSoC5/UART.c ****             }
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 35


1271:./Generated_Source/PSoC5/UART.c ****             else
1272:./Generated_Source/PSoC5/UART.c ****             {
1273:./Generated_Source/PSoC5/UART.c ****                 /* We only know there is data in the fifo. */
1274:./Generated_Source/PSoC5/UART.c ****                 size = 1u;
 665              		.loc 1 1274 0
 666 0036 4FF00103 		mov	r3, #1
 667 003a FB71     		strb	r3, [r7, #7]
 668              	.L39:
1275:./Generated_Source/PSoC5/UART.c ****             }
1276:./Generated_Source/PSoC5/UART.c **** 
1277:./Generated_Source/PSoC5/UART.c ****         #endif /* End UART_TXBUFFERSIZE > UART_FIFO_LENGTH */
1278:./Generated_Source/PSoC5/UART.c **** 
1279:./Generated_Source/PSoC5/UART.c ****         return(size);
 669              		.loc 1 1279 0
 670 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1280:./Generated_Source/PSoC5/UART.c ****     }
 671              		.loc 1 1280 0
 672 003e 1846     		mov	r0, r3
 673 0040 07F10C07 		add	r7, r7, #12
 674 0044 BD46     		mov	sp, r7
 675 0046 80BC     		pop	{r7}
 676 0048 7047     		bx	lr
 677              		.cfi_endproc
 678              	.LFE13:
 679              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 680 004a 00BF     		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 681              		.align	2
 682              		.global	UART_ClearTxBuffer
 683              		.thumb
 684              		.thumb_func
 685              		.type	UART_ClearTxBuffer, %function
 686              	UART_ClearTxBuffer:
 687              	.LFB14:
1281:./Generated_Source/PSoC5/UART.c **** 
1282:./Generated_Source/PSoC5/UART.c **** 
1283:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
1284:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1285:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
1286:./Generated_Source/PSoC5/UART.c ****     *
1287:./Generated_Source/PSoC5/UART.c ****     * Summary:
1288:./Generated_Source/PSoC5/UART.c ****     *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
1289:./Generated_Source/PSoC5/UART.c ****     *
1290:./Generated_Source/PSoC5/UART.c ****     * Parameters:
1291:./Generated_Source/PSoC5/UART.c ****     *  None.
1292:./Generated_Source/PSoC5/UART.c ****     *
1293:./Generated_Source/PSoC5/UART.c ****     * Return:
1294:./Generated_Source/PSoC5/UART.c ****     *  None.
1295:./Generated_Source/PSoC5/UART.c ****     *
1296:./Generated_Source/PSoC5/UART.c ****     * Global Variables:
1297:./Generated_Source/PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero. 
1298:./Generated_Source/PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1299:./Generated_Source/PSoC5/UART.c ****     *
1300:./Generated_Source/PSoC5/UART.c ****     * Reentrant:
1301:./Generated_Source/PSoC5/UART.c ****     *  No.
1302:./Generated_Source/PSoC5/UART.c ****     *
1303:./Generated_Source/PSoC5/UART.c ****     * Theory:
1304:./Generated_Source/PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to 
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 36


1305:./Generated_Source/PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1306:./Generated_Source/PSoC5/UART.c ****     *  remained in the RAM.
1307:./Generated_Source/PSoC5/UART.c ****     *
1308:./Generated_Source/PSoC5/UART.c ****     * Side Effects:
1309:./Generated_Source/PSoC5/UART.c ****     *  Any received data not read from the RAM buffer will be lost when overwritten.
1310:./Generated_Source/PSoC5/UART.c ****     *
1311:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
1312:./Generated_Source/PSoC5/UART.c ****     void UART_ClearTxBuffer(void)
1313:./Generated_Source/PSoC5/UART.c ****     {
 688              		.loc 1 1313 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 693 0000 80B4     		push	{r7}
 694              	.LCFI38:
 695              		.cfi_def_cfa_offset 4
 696 0002 00AF     		add	r7, sp, #0
 697              		.cfi_offset 7, -4
 698              	.LCFI39:
 699              		.cfi_def_cfa_register 7
1314:./Generated_Source/PSoC5/UART.c ****         #if(UART_TXBUFFERSIZE > UART_FIFO_LENGTH)
1315:./Generated_Source/PSoC5/UART.c **** 
1316:./Generated_Source/PSoC5/UART.c ****             /* Disable Tx interrupt. */
1317:./Generated_Source/PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
1318:./Generated_Source/PSoC5/UART.c ****             #if(UART_TX_INTERRUPT_ENABLED)
1319:./Generated_Source/PSoC5/UART.c ****                 UART_DisableTxInt();
1320:./Generated_Source/PSoC5/UART.c ****             #endif /* End UART_TX_INTERRUPT_ENABLED */
1321:./Generated_Source/PSoC5/UART.c **** 
1322:./Generated_Source/PSoC5/UART.c ****             UART_txBufferRead = 0u;
1323:./Generated_Source/PSoC5/UART.c ****             UART_txBufferWrite = 0u;
1324:./Generated_Source/PSoC5/UART.c **** 
1325:./Generated_Source/PSoC5/UART.c ****             /* Enable Tx interrupt. */
1326:./Generated_Source/PSoC5/UART.c ****             #if(UART_TX_INTERRUPT_ENABLED)
1327:./Generated_Source/PSoC5/UART.c ****                 UART_EnableTxInt();
1328:./Generated_Source/PSoC5/UART.c ****             #endif /* End UART_TX_INTERRUPT_ENABLED */
1329:./Generated_Source/PSoC5/UART.c **** 
1330:./Generated_Source/PSoC5/UART.c ****         #endif /* End UART_TXBUFFERSIZE > UART_FIFO_LENGTH */
1331:./Generated_Source/PSoC5/UART.c ****     }
 700              		.loc 1 1331 0
 701 0004 BD46     		mov	sp, r7
 702 0006 80BC     		pop	{r7}
 703 0008 7047     		bx	lr
 704              		.cfi_endproc
 705              	.LFE14:
 706              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 707 000a 00BF     		.section	.text.UART_SendBreak,"ax",%progbits
 708              		.align	2
 709              		.global	UART_SendBreak
 710              		.thumb
 711              		.thumb_func
 712              		.type	UART_SendBreak, %function
 713              	UART_SendBreak:
 714              	.LFB15:
1332:./Generated_Source/PSoC5/UART.c **** 
1333:./Generated_Source/PSoC5/UART.c **** 
1334:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 37


1335:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_SendBreak
1336:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
1337:./Generated_Source/PSoC5/UART.c ****     *
1338:./Generated_Source/PSoC5/UART.c ****     * Summary:
1339:./Generated_Source/PSoC5/UART.c ****     *  Write a Break command to the UART
1340:./Generated_Source/PSoC5/UART.c ****     *
1341:./Generated_Source/PSoC5/UART.c ****     * Parameters:
1342:./Generated_Source/PSoC5/UART.c ****     *  uint8 retMode:  Wait mode,
1343:./Generated_Source/PSoC5/UART.c ****     *   0 - Initialize registers for Break, sends the Break signal and return 
1344:./Generated_Source/PSoC5/UART.c ****     *       imediately.
1345:./Generated_Source/PSoC5/UART.c ****     *   1 - Wait until Break sending is complete, reinitialize registers to normal
1346:./Generated_Source/PSoC5/UART.c ****     *       transmission mode then return.
1347:./Generated_Source/PSoC5/UART.c ****     *   2 - Reinitialize registers to normal transmission mode then return.
1348:./Generated_Source/PSoC5/UART.c ****     *   3 - both steps: 0 and 1
1349:./Generated_Source/PSoC5/UART.c ****     *       init registers for Break, send Break signal
1350:./Generated_Source/PSoC5/UART.c ****     *       wait until Break sending is complete, reinit registers to normal
1351:./Generated_Source/PSoC5/UART.c ****     *       transmission mode then return.
1352:./Generated_Source/PSoC5/UART.c ****     *
1353:./Generated_Source/PSoC5/UART.c ****     * Return:
1354:./Generated_Source/PSoC5/UART.c ****     *  None.
1355:./Generated_Source/PSoC5/UART.c ****     *
1356:./Generated_Source/PSoC5/UART.c ****     * Global Variables:
1357:./Generated_Source/PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been  
1358:./Generated_Source/PSoC5/UART.c ****     *     initialized.
1359:./Generated_Source/PSoC5/UART.c ****     *  tx_period - static variable, used for keeping TX period configuration.
1360:./Generated_Source/PSoC5/UART.c ****     *
1361:./Generated_Source/PSoC5/UART.c ****     * Reentrant:
1362:./Generated_Source/PSoC5/UART.c ****     *  No.
1363:./Generated_Source/PSoC5/UART.c ****     *
1364:./Generated_Source/PSoC5/UART.c ****     * Theory:
1365:./Generated_Source/PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1366:./Generated_Source/PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1367:./Generated_Source/PSoC5/UART.c ****     *  operation.
1368:./Generated_Source/PSoC5/UART.c ****     *  Trere are 3 variants for this API usage:
1369:./Generated_Source/PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1370:./Generated_Source/PSoC5/UART.c ****     *     configuration returning. Funcition will block CPU untill transmition 
1371:./Generated_Source/PSoC5/UART.c ****     *     complete.
1372:./Generated_Source/PSoC5/UART.c ****     *  2) User may want to use bloking time if UART configured to the low speed 
1373:./Generated_Source/PSoC5/UART.c ****     *     operation
1374:./Generated_Source/PSoC5/UART.c ****     *     Emample for this case:
1375:./Generated_Source/PSoC5/UART.c ****     *     SendBreak(0);     - init Break signal transmition
1376:./Generated_Source/PSoC5/UART.c ****     *         Add your code here to use CPU time
1377:./Generated_Source/PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1378:./Generated_Source/PSoC5/UART.c ****     *  3) Same to 2) but user may want to init and use the interrupt for complete 
1379:./Generated_Source/PSoC5/UART.c ****     *     break operation.
1380:./Generated_Source/PSoC5/UART.c ****     *     Example for this case:
1381:./Generated_Source/PSoC5/UART.c ****     *     Init TX interrupt whith "TX - On TX Complete" parameter
1382:./Generated_Source/PSoC5/UART.c ****     *     SendBreak(0);     - init Break signal transmition
1383:./Generated_Source/PSoC5/UART.c ****     *         Add your code here to use CPU time
1384:./Generated_Source/PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1385:./Generated_Source/PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1386:./Generated_Source/PSoC5/UART.c ****     *
1387:./Generated_Source/PSoC5/UART.c ****     * Side Effects:
1388:./Generated_Source/PSoC5/UART.c ****     *   Uses static variable to keep registers configuration.
1389:./Generated_Source/PSoC5/UART.c ****     *
1390:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
1391:./Generated_Source/PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode)
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 38


1392:./Generated_Source/PSoC5/UART.c ****     {
 715              		.loc 1 1392 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 16
 718              		@ frame_needed = 1, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720 0000 80B4     		push	{r7}
 721              	.LCFI40:
 722              		.cfi_def_cfa_offset 4
 723 0002 85B0     		sub	sp, sp, #20
 724              	.LCFI41:
 725              		.cfi_def_cfa_offset 24
 726 0004 00AF     		add	r7, sp, #0
 727              		.cfi_offset 7, -4
 728              	.LCFI42:
 729              		.cfi_def_cfa_register 7
 730 0006 0346     		mov	r3, r0
 731 0008 FB71     		strb	r3, [r7, #7]
1393:./Generated_Source/PSoC5/UART.c **** 
1394:./Generated_Source/PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1395:./Generated_Source/PSoC5/UART.c ****         if(UART_initVar != 0u)
 732              		.loc 1 1395 0
 733 000a 40F20003 		movw	r3, #:lower16:UART_initVar
 734 000e C0F20003 		movt	r3, #:upper16:UART_initVar
 735 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 736 0014 002B     		cmp	r3, #0
 737 0016 4ED0     		beq	.L52
 738              	.LBB2:
1396:./Generated_Source/PSoC5/UART.c ****         {
1397:./Generated_Source/PSoC5/UART.c ****             /*Set the Counter to 13-bits and transmit a 00 byte*/
1398:./Generated_Source/PSoC5/UART.c ****             /*When that is done then reset the counter value back*/
1399:./Generated_Source/PSoC5/UART.c ****             uint8 tmpStat;
1400:./Generated_Source/PSoC5/UART.c **** 
1401:./Generated_Source/PSoC5/UART.c ****             #if(UART_HD_ENABLED) /* Half Duplex mode*/
1402:./Generated_Source/PSoC5/UART.c **** 
1403:./Generated_Source/PSoC5/UART.c ****                 if( (retMode == UART_SEND_BREAK) ||
1404:./Generated_Source/PSoC5/UART.c ****                     (retMode == UART_SEND_WAIT_REINIT ) )
1405:./Generated_Source/PSoC5/UART.c ****                 {
1406:./Generated_Source/PSoC5/UART.c ****                     /* CTRL_HD_SEND_BREAK - sends break bits in HD mode*/
1407:./Generated_Source/PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() | \
1408:./Generated_Source/PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1409:./Generated_Source/PSoC5/UART.c ****                     /* Send zeros*/
1410:./Generated_Source/PSoC5/UART.c ****                     UART_TXDATA_REG = 0u;
1411:./Generated_Source/PSoC5/UART.c **** 
1412:./Generated_Source/PSoC5/UART.c ****                     do /*wait until transmit starts*/
1413:./Generated_Source/PSoC5/UART.c ****                     {
1414:./Generated_Source/PSoC5/UART.c ****                         tmpStat = UART_TXSTATUS_REG;
1415:./Generated_Source/PSoC5/UART.c ****                     }while(tmpStat & UART_TX_STS_FIFO_EMPTY);
1416:./Generated_Source/PSoC5/UART.c ****                 }
1417:./Generated_Source/PSoC5/UART.c **** 
1418:./Generated_Source/PSoC5/UART.c ****                 if( (retMode == UART_WAIT_FOR_COMLETE_REINIT) || \
1419:./Generated_Source/PSoC5/UART.c ****                     (retMode == UART_SEND_WAIT_REINIT) )
1420:./Generated_Source/PSoC5/UART.c ****                 {
1421:./Generated_Source/PSoC5/UART.c ****                     do /*wait until transmit complete*/
1422:./Generated_Source/PSoC5/UART.c ****                     {
1423:./Generated_Source/PSoC5/UART.c ****                         tmpStat = UART_TXSTATUS_REG;
1424:./Generated_Source/PSoC5/UART.c ****                     }while(~tmpStat & UART_TX_STS_COMPLETE);
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 39


1425:./Generated_Source/PSoC5/UART.c ****                 }
1426:./Generated_Source/PSoC5/UART.c **** 
1427:./Generated_Source/PSoC5/UART.c ****                 if( (retMode == UART_WAIT_FOR_COMLETE_REINIT) || \
1428:./Generated_Source/PSoC5/UART.c ****                     (retMode == UART_REINIT) || \
1429:./Generated_Source/PSoC5/UART.c ****                     (retMode == UART_SEND_WAIT_REINIT) )
1430:./Generated_Source/PSoC5/UART.c ****                 {
1431:./Generated_Source/PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() & \
1432:./Generated_Source/PSoC5/UART.c ****                                                          ~UART_CTRL_HD_SEND_BREAK);
1433:./Generated_Source/PSoC5/UART.c ****                 }
1434:./Generated_Source/PSoC5/UART.c **** 
1435:./Generated_Source/PSoC5/UART.c ****             #else /* UART_HD_ENABLED Full Duplex mode */
1436:./Generated_Source/PSoC5/UART.c **** 
1437:./Generated_Source/PSoC5/UART.c ****                 static uint8 tx_period; 
1438:./Generated_Source/PSoC5/UART.c ****                 
1439:./Generated_Source/PSoC5/UART.c ****                 if( (retMode == UART_SEND_BREAK) || \
 739              		.loc 1 1439 0
 740 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 741 001a 002B     		cmp	r3, #0
 742 001c 02D0     		beq	.L46
 743 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 744 0020 032B     		cmp	r3, #3
 745 0022 23D1     		bne	.L47
 746              	.L46:
1440:./Generated_Source/PSoC5/UART.c ****                     (retMode == UART_SEND_WAIT_REINIT) )
1441:./Generated_Source/PSoC5/UART.c ****                 {
1442:./Generated_Source/PSoC5/UART.c ****                     /* CTRL_HD_SEND_BREAK - skip to send parity bit @ Break signal in Full Duplex m
1443:./Generated_Source/PSoC5/UART.c ****                     if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1444:./Generated_Source/PSoC5/UART.c ****                          UART_PARITY_TYPE_SW )
1445:./Generated_Source/PSoC5/UART.c ****                     {
1446:./Generated_Source/PSoC5/UART.c ****                         UART_WriteControlRegister(UART_ReadControlRegister() | \
1447:./Generated_Source/PSoC5/UART.c ****                                                               UART_CTRL_HD_SEND_BREAK);
1448:./Generated_Source/PSoC5/UART.c ****                     }                                                          
1449:./Generated_Source/PSoC5/UART.c **** 
1450:./Generated_Source/PSoC5/UART.c ****                     #if(UART_TXCLKGEN_DP)
1451:./Generated_Source/PSoC5/UART.c ****                         tx_period = UART_TXBITCLKTX_COMPLETE_REG;
 747              		.loc 1 1451 0
 748 0024 46F23543 		movw	r3, #:lower16:1073767477
 749 0028 C4F20003 		movt	r3, #:upper16:1073767477
 750 002c 1B78     		ldrb	r3, [r3, #0]
 751 002e DAB2     		uxtb	r2, r3
 752 0030 40F20003 		movw	r3, #:lower16:tx_period.2085
 753 0034 C0F20003 		movt	r3, #:upper16:tx_period.2085
 754 0038 1A70     		strb	r2, [r3, #0]
1452:./Generated_Source/PSoC5/UART.c ****                         UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 755              		.loc 1 1452 0
 756 003a 46F23543 		movw	r3, #:lower16:1073767477
 757 003e C4F20003 		movt	r3, #:upper16:1073767477
 758 0042 4FF06702 		mov	r2, #103
 759 0046 1A70     		strb	r2, [r3, #0]
1453:./Generated_Source/PSoC5/UART.c ****                     #else
1454:./Generated_Source/PSoC5/UART.c ****                         tx_period = UART_TXBITCTR_PERIOD_REG;
1455:./Generated_Source/PSoC5/UART.c ****                         UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1456:./Generated_Source/PSoC5/UART.c ****                     #endif /* End UART_TXCLKGEN_DP */
1457:./Generated_Source/PSoC5/UART.c **** 
1458:./Generated_Source/PSoC5/UART.c ****                     /* Send zeros*/
1459:./Generated_Source/PSoC5/UART.c ****                     UART_TXDATA_REG = 0u;
 760              		.loc 1 1459 0
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 40


 761 0048 46F24443 		movw	r3, #:lower16:1073767492
 762 004c C4F20003 		movt	r3, #:upper16:1073767492
 763 0050 4FF00002 		mov	r2, #0
 764 0054 1A70     		strb	r2, [r3, #0]
 765              	.L48:
1460:./Generated_Source/PSoC5/UART.c **** 
1461:./Generated_Source/PSoC5/UART.c ****                     do /*wait until transmit starts*/
1462:./Generated_Source/PSoC5/UART.c ****                     {
1463:./Generated_Source/PSoC5/UART.c ****                         tmpStat = UART_TXSTATUS_REG;
 766              		.loc 1 1463 0
 767 0056 46F26443 		movw	r3, #:lower16:1073767524
 768 005a C4F20003 		movt	r3, #:upper16:1073767524
 769 005e 1B78     		ldrb	r3, [r3, #0]
 770 0060 FB73     		strb	r3, [r7, #15]
1464:./Generated_Source/PSoC5/UART.c ****                     }while(tmpStat & UART_TX_STS_FIFO_EMPTY);
 771              		.loc 1 1464 0
 772 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 773 0064 03F00203 		and	r3, r3, #2
 774 0068 002B     		cmp	r3, #0
 775 006a F4D1     		bne	.L48
 776              	.L47:
1465:./Generated_Source/PSoC5/UART.c ****                 }
1466:./Generated_Source/PSoC5/UART.c **** 
1467:./Generated_Source/PSoC5/UART.c ****                 if( (retMode == UART_WAIT_FOR_COMLETE_REINIT) || \
 777              		.loc 1 1467 0
 778 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 779 006e 012B     		cmp	r3, #1
 780 0070 02D0     		beq	.L49
 781 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 782 0074 032B     		cmp	r3, #3
 783 0076 0AD1     		bne	.L50
 784              	.L49:
1468:./Generated_Source/PSoC5/UART.c ****                     (retMode == UART_SEND_WAIT_REINIT) )
1469:./Generated_Source/PSoC5/UART.c ****                 {
1470:./Generated_Source/PSoC5/UART.c ****                     do /*wait until transmit complete*/
1471:./Generated_Source/PSoC5/UART.c ****                     {
1472:./Generated_Source/PSoC5/UART.c ****                         tmpStat = UART_TXSTATUS_REG;
 785              		.loc 1 1472 0
 786 0078 46F26443 		movw	r3, #:lower16:1073767524
 787 007c C4F20003 		movt	r3, #:upper16:1073767524
 788 0080 1B78     		ldrb	r3, [r3, #0]
 789 0082 FB73     		strb	r3, [r7, #15]
1473:./Generated_Source/PSoC5/UART.c ****                     }while(~tmpStat & UART_TX_STS_COMPLETE);
 790              		.loc 1 1473 0
 791 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 792 0086 03F00103 		and	r3, r3, #1
 793 008a 002B     		cmp	r3, #0
 794 008c F4D0     		beq	.L49
 795              	.L50:
1474:./Generated_Source/PSoC5/UART.c ****                 }
1475:./Generated_Source/PSoC5/UART.c **** 
1476:./Generated_Source/PSoC5/UART.c ****                 if( (retMode == UART_WAIT_FOR_COMLETE_REINIT) || \
 796              		.loc 1 1476 0
 797 008e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 798 0090 012B     		cmp	r3, #1
 799 0092 05D0     		beq	.L51
 800 0094 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 41


 801 0096 022B     		cmp	r3, #2
 802 0098 02D0     		beq	.L51
 803 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 804 009c 032B     		cmp	r3, #3
 805 009e 0AD1     		bne	.L52
 806              	.L51:
1477:./Generated_Source/PSoC5/UART.c ****                     (retMode == UART_REINIT) || \
1478:./Generated_Source/PSoC5/UART.c ****                     (retMode == UART_SEND_WAIT_REINIT) )
1479:./Generated_Source/PSoC5/UART.c ****                 {
1480:./Generated_Source/PSoC5/UART.c **** 
1481:./Generated_Source/PSoC5/UART.c ****                     #if(UART_TXCLKGEN_DP)
1482:./Generated_Source/PSoC5/UART.c ****                         UART_TXBITCLKTX_COMPLETE_REG = tx_period;
 807              		.loc 1 1482 0
 808 00a0 46F23543 		movw	r3, #:lower16:1073767477
 809 00a4 C4F20003 		movt	r3, #:upper16:1073767477
 810 00a8 40F20002 		movw	r2, #:lower16:tx_period.2085
 811 00ac C0F20002 		movt	r2, #:upper16:tx_period.2085
 812 00b0 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 813 00b2 1A70     		strb	r2, [r3, #0]
1483:./Generated_Source/PSoC5/UART.c ****                     #else
1484:./Generated_Source/PSoC5/UART.c ****                         UART_TXBITCTR_PERIOD_REG = tx_period;
1485:./Generated_Source/PSoC5/UART.c ****                     #endif /* End UART_TXCLKGEN_DP */
1486:./Generated_Source/PSoC5/UART.c **** 
1487:./Generated_Source/PSoC5/UART.c ****                     if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || 
 814              		.loc 1 1487 0
 815 00b4 00BF     		nop
 816              	.L52:
 817              	.LBE2:
1488:./Generated_Source/PSoC5/UART.c ****                          UART_PARITY_TYPE_SW )
1489:./Generated_Source/PSoC5/UART.c ****                     {
1490:./Generated_Source/PSoC5/UART.c ****                         UART_WriteControlRegister(UART_ReadControlRegister() & \
1491:./Generated_Source/PSoC5/UART.c ****                                                              ~UART_CTRL_HD_SEND_BREAK);
1492:./Generated_Source/PSoC5/UART.c ****                     }                                     
1493:./Generated_Source/PSoC5/UART.c ****                 }
1494:./Generated_Source/PSoC5/UART.c ****             #endif    /* End UART_HD_ENABLED */
1495:./Generated_Source/PSoC5/UART.c ****         }
1496:./Generated_Source/PSoC5/UART.c ****     }
 818              		.loc 1 1496 0
 819 00b6 07F11407 		add	r7, r7, #20
 820 00ba BD46     		mov	sp, r7
 821 00bc 80BC     		pop	{r7}
 822 00be 7047     		bx	lr
 823              		.cfi_endproc
 824              	.LFE15:
 825              		.size	UART_SendBreak, .-UART_SendBreak
 826              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 827              		.align	2
 828              		.global	UART_SetTxAddressMode
 829              		.thumb
 830              		.thumb_func
 831              		.type	UART_SetTxAddressMode, %function
 832              	UART_SetTxAddressMode:
 833              	.LFB16:
1497:./Generated_Source/PSoC5/UART.c **** 
1498:./Generated_Source/PSoC5/UART.c **** 
1499:./Generated_Source/PSoC5/UART.c ****     /*******************************************************************************
1500:./Generated_Source/PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 42


1501:./Generated_Source/PSoC5/UART.c ****     ********************************************************************************
1502:./Generated_Source/PSoC5/UART.c ****     *
1503:./Generated_Source/PSoC5/UART.c ****     * Summary:
1504:./Generated_Source/PSoC5/UART.c ****     *  Set the transmit addressing mode
1505:./Generated_Source/PSoC5/UART.c ****     *
1506:./Generated_Source/PSoC5/UART.c ****     * Parameters:
1507:./Generated_Source/PSoC5/UART.c ****     *  addressMode: 0 -> Space
1508:./Generated_Source/PSoC5/UART.c ****     *               1 -> Mark
1509:./Generated_Source/PSoC5/UART.c ****     *
1510:./Generated_Source/PSoC5/UART.c ****     * Return:
1511:./Generated_Source/PSoC5/UART.c ****     *  None.
1512:./Generated_Source/PSoC5/UART.c ****     *
1513:./Generated_Source/PSoC5/UART.c ****     *******************************************************************************/
1514:./Generated_Source/PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1515:./Generated_Source/PSoC5/UART.c ****     {
 834              		.loc 1 1515 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 8
 837              		@ frame_needed = 1, uses_anonymous_args = 0
 838 0000 80B5     		push	{r7, lr}
 839              	.LCFI43:
 840              		.cfi_def_cfa_offset 8
 841 0002 82B0     		sub	sp, sp, #8
 842              	.LCFI44:
 843              		.cfi_def_cfa_offset 16
 844 0004 00AF     		add	r7, sp, #0
 845              		.cfi_offset 14, -4
 846              		.cfi_offset 7, -8
 847              	.LCFI45:
 848              		.cfi_def_cfa_register 7
 849 0006 0346     		mov	r3, r0
 850 0008 FB71     		strb	r3, [r7, #7]
1516:./Generated_Source/PSoC5/UART.c ****         /* Mark/Space sending enable*/
1517:./Generated_Source/PSoC5/UART.c ****         if(addressMode != 0)
 851              		.loc 1 1517 0
 852 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 853 000c 002B     		cmp	r3, #0
 854 000e 09D0     		beq	.L54
1518:./Generated_Source/PSoC5/UART.c ****         {
1519:./Generated_Source/PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() | UART_CTRL_MARK);
 855              		.loc 1 1519 0
 856 0010 FFF7FEFF 		bl	UART_ReadControlRegister
 857 0014 0346     		mov	r3, r0
 858 0016 43F00403 		orr	r3, r3, #4
 859 001a DBB2     		uxtb	r3, r3
 860 001c 1846     		mov	r0, r3
 861 001e FFF7FEFF 		bl	UART_WriteControlRegister
 862 0022 07E0     		b	.L56
 863              	.L54:
1520:./Generated_Source/PSoC5/UART.c ****         }
1521:./Generated_Source/PSoC5/UART.c ****         else
1522:./Generated_Source/PSoC5/UART.c ****         {
1523:./Generated_Source/PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() & ~UART_CTRL_MARK);
 864              		.loc 1 1523 0
 865 0024 FFF7FEFF 		bl	UART_ReadControlRegister
 866 0028 0346     		mov	r3, r0
 867 002a 03F0FB03 		and	r3, r3, #251
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 43


 868 002e 1846     		mov	r0, r3
 869 0030 FFF7FEFF 		bl	UART_WriteControlRegister
 870              	.L56:
1524:./Generated_Source/PSoC5/UART.c ****         }
1525:./Generated_Source/PSoC5/UART.c ****     }
 871              		.loc 1 1525 0
 872 0034 07F10807 		add	r7, r7, #8
 873 0038 BD46     		mov	sp, r7
 874 003a 80BD     		pop	{r7, pc}
 875              		.cfi_endproc
 876              	.LFE16:
 877              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 878              		.bss
 879              	tx_period.2085:
 880 0001 00       		.space	1
 881              		.text
 882              	.Letext0:
 883              		.section	.debug_loc,"",%progbits
 884              	.Ldebug_loc0:
 885              	.LLST0:
 886 0000 00000000 		.4byte	.LFB0
 887 0004 02000000 		.4byte	.LCFI0
 888 0008 0100     		.2byte	0x1
 889 000a 5D       		.byte	0x5d
 890 000b 02000000 		.4byte	.LCFI0
 891 000f 04000000 		.4byte	.LCFI1
 892 0013 0200     		.2byte	0x2
 893 0015 7D       		.byte	0x7d
 894 0016 08       		.sleb128 8
 895 0017 04000000 		.4byte	.LCFI1
 896 001b 2A000000 		.4byte	.LFE0
 897 001f 0200     		.2byte	0x2
 898 0021 77       		.byte	0x77
 899 0022 08       		.sleb128 8
 900 0023 00000000 		.4byte	0x0
 901 0027 00000000 		.4byte	0x0
 902              	.LLST1:
 903 002b 00000000 		.4byte	.LFB1
 904 002f 02000000 		.4byte	.LCFI2
 905 0033 0100     		.2byte	0x1
 906 0035 5D       		.byte	0x5d
 907 0036 02000000 		.4byte	.LCFI2
 908 003a 04000000 		.4byte	.LCFI3
 909 003e 0200     		.2byte	0x2
 910 0040 7D       		.byte	0x7d
 911 0041 04       		.sleb128 4
 912 0042 04000000 		.4byte	.LCFI3
 913 0046 34000000 		.4byte	.LFE1
 914 004a 0200     		.2byte	0x2
 915 004c 77       		.byte	0x77
 916 004d 04       		.sleb128 4
 917 004e 00000000 		.4byte	0x0
 918 0052 00000000 		.4byte	0x0
 919              	.LLST2:
 920 0056 00000000 		.4byte	.LFB2
 921 005a 02000000 		.4byte	.LCFI4
 922 005e 0100     		.2byte	0x1
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 44


 923 0060 5D       		.byte	0x5d
 924 0061 02000000 		.4byte	.LCFI4
 925 0065 04000000 		.4byte	.LCFI5
 926 0069 0200     		.2byte	0x2
 927 006b 7D       		.byte	0x7d
 928 006c 08       		.sleb128 8
 929 006d 04000000 		.4byte	.LCFI5
 930 0071 06000000 		.4byte	.LCFI6
 931 0075 0200     		.2byte	0x2
 932 0077 7D       		.byte	0x7d
 933 0078 10       		.sleb128 16
 934 0079 06000000 		.4byte	.LCFI6
 935 007d 56000000 		.4byte	.LFE2
 936 0081 0200     		.2byte	0x2
 937 0083 77       		.byte	0x77
 938 0084 10       		.sleb128 16
 939 0085 00000000 		.4byte	0x0
 940 0089 00000000 		.4byte	0x0
 941              	.LLST3:
 942 008d 00000000 		.4byte	.LFB3
 943 0091 02000000 		.4byte	.LCFI7
 944 0095 0100     		.2byte	0x1
 945 0097 5D       		.byte	0x5d
 946 0098 02000000 		.4byte	.LCFI7
 947 009c 04000000 		.4byte	.LCFI8
 948 00a0 0200     		.2byte	0x2
 949 00a2 7D       		.byte	0x7d
 950 00a3 08       		.sleb128 8
 951 00a4 04000000 		.4byte	.LCFI8
 952 00a8 06000000 		.4byte	.LCFI9
 953 00ac 0200     		.2byte	0x2
 954 00ae 7D       		.byte	0x7d
 955 00af 10       		.sleb128 16
 956 00b0 06000000 		.4byte	.LCFI9
 957 00b4 52000000 		.4byte	.LFE3
 958 00b8 0200     		.2byte	0x2
 959 00ba 77       		.byte	0x77
 960 00bb 10       		.sleb128 16
 961 00bc 00000000 		.4byte	0x0
 962 00c0 00000000 		.4byte	0x0
 963              	.LLST4:
 964 00c4 00000000 		.4byte	.LFB4
 965 00c8 02000000 		.4byte	.LCFI10
 966 00cc 0100     		.2byte	0x1
 967 00ce 5D       		.byte	0x5d
 968 00cf 02000000 		.4byte	.LCFI10
 969 00d3 04000000 		.4byte	.LCFI11
 970 00d7 0200     		.2byte	0x2
 971 00d9 7D       		.byte	0x7d
 972 00da 04       		.sleb128 4
 973 00db 04000000 		.4byte	.LCFI11
 974 00df 10000000 		.4byte	.LFE4
 975 00e3 0200     		.2byte	0x2
 976 00e5 77       		.byte	0x77
 977 00e6 04       		.sleb128 4
 978 00e7 00000000 		.4byte	0x0
 979 00eb 00000000 		.4byte	0x0
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 45


 980              	.LLST5:
 981 00ef 00000000 		.4byte	.LFB5
 982 00f3 02000000 		.4byte	.LCFI12
 983 00f7 0100     		.2byte	0x1
 984 00f9 5D       		.byte	0x5d
 985 00fa 02000000 		.4byte	.LCFI12
 986 00fe 04000000 		.4byte	.LCFI13
 987 0102 0200     		.2byte	0x2
 988 0104 7D       		.byte	0x7d
 989 0105 04       		.sleb128 4
 990 0106 04000000 		.4byte	.LCFI13
 991 010a 06000000 		.4byte	.LCFI14
 992 010e 0200     		.2byte	0x2
 993 0110 7D       		.byte	0x7d
 994 0111 10       		.sleb128 16
 995 0112 06000000 		.4byte	.LCFI14
 996 0116 14000000 		.4byte	.LFE5
 997 011a 0200     		.2byte	0x2
 998 011c 77       		.byte	0x77
 999 011d 10       		.sleb128 16
 1000 011e 00000000 		.4byte	0x0
 1001 0122 00000000 		.4byte	0x0
 1002              	.LLST6:
 1003 0126 00000000 		.4byte	.LFB6
 1004 012a 02000000 		.4byte	.LCFI15
 1005 012e 0100     		.2byte	0x1
 1006 0130 5D       		.byte	0x5d
 1007 0131 02000000 		.4byte	.LCFI15
 1008 0135 04000000 		.4byte	.LCFI16
 1009 0139 0200     		.2byte	0x2
 1010 013b 7D       		.byte	0x7d
 1011 013c 04       		.sleb128 4
 1012 013d 04000000 		.4byte	.LCFI16
 1013 0141 06000000 		.4byte	.LCFI17
 1014 0145 0200     		.2byte	0x2
 1015 0147 7D       		.byte	0x7d
 1016 0148 10       		.sleb128 16
 1017 0149 06000000 		.4byte	.LCFI17
 1018 014d 20000000 		.4byte	.LFE6
 1019 0151 0200     		.2byte	0x2
 1020 0153 77       		.byte	0x77
 1021 0154 10       		.sleb128 16
 1022 0155 00000000 		.4byte	0x0
 1023 0159 00000000 		.4byte	0x0
 1024              	.LLST7:
 1025 015d 00000000 		.4byte	.LFB7
 1026 0161 02000000 		.4byte	.LCFI18
 1027 0165 0100     		.2byte	0x1
 1028 0167 5D       		.byte	0x5d
 1029 0168 02000000 		.4byte	.LCFI18
 1030 016c 04000000 		.4byte	.LCFI19
 1031 0170 0200     		.2byte	0x2
 1032 0172 7D       		.byte	0x7d
 1033 0173 04       		.sleb128 4
 1034 0174 04000000 		.4byte	.LCFI19
 1035 0178 06000000 		.4byte	.LCFI20
 1036 017c 0200     		.2byte	0x2
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 46


 1037 017e 7D       		.byte	0x7d
 1038 017f 10       		.sleb128 16
 1039 0180 06000000 		.4byte	.LCFI20
 1040 0184 2E000000 		.4byte	.LFE7
 1041 0188 0200     		.2byte	0x2
 1042 018a 77       		.byte	0x77
 1043 018b 10       		.sleb128 16
 1044 018c 00000000 		.4byte	0x0
 1045 0190 00000000 		.4byte	0x0
 1046              	.LLST8:
 1047 0194 00000000 		.4byte	.LFB8
 1048 0198 02000000 		.4byte	.LCFI21
 1049 019c 0100     		.2byte	0x1
 1050 019e 5D       		.byte	0x5d
 1051 019f 02000000 		.4byte	.LCFI21
 1052 01a3 04000000 		.4byte	.LCFI22
 1053 01a7 0200     		.2byte	0x2
 1054 01a9 7D       		.byte	0x7d
 1055 01aa 04       		.sleb128 4
 1056 01ab 04000000 		.4byte	.LCFI22
 1057 01af 18000000 		.4byte	.LFE8
 1058 01b3 0200     		.2byte	0x2
 1059 01b5 77       		.byte	0x77
 1060 01b6 04       		.sleb128 4
 1061 01b7 00000000 		.4byte	0x0
 1062 01bb 00000000 		.4byte	0x0
 1063              	.LLST9:
 1064 01bf 00000000 		.4byte	.LFB9
 1065 01c3 02000000 		.4byte	.LCFI23
 1066 01c7 0100     		.2byte	0x1
 1067 01c9 5D       		.byte	0x5d
 1068 01ca 02000000 		.4byte	.LCFI23
 1069 01ce 04000000 		.4byte	.LCFI24
 1070 01d2 0200     		.2byte	0x2
 1071 01d4 7D       		.byte	0x7d
 1072 01d5 04       		.sleb128 4
 1073 01d6 04000000 		.4byte	.LCFI24
 1074 01da 06000000 		.4byte	.LCFI25
 1075 01de 0200     		.2byte	0x2
 1076 01e0 7D       		.byte	0x7d
 1077 01e1 10       		.sleb128 16
 1078 01e2 06000000 		.4byte	.LCFI25
 1079 01e6 34000000 		.4byte	.LFE9
 1080 01ea 0200     		.2byte	0x2
 1081 01ec 77       		.byte	0x77
 1082 01ed 10       		.sleb128 16
 1083 01ee 00000000 		.4byte	0x0
 1084 01f2 00000000 		.4byte	0x0
 1085              	.LLST10:
 1086 01f6 00000000 		.4byte	.LFB10
 1087 01fa 02000000 		.4byte	.LCFI26
 1088 01fe 0100     		.2byte	0x1
 1089 0200 5D       		.byte	0x5d
 1090 0201 02000000 		.4byte	.LCFI26
 1091 0205 04000000 		.4byte	.LCFI27
 1092 0209 0200     		.2byte	0x2
 1093 020b 7D       		.byte	0x7d
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 47


 1094 020c 08       		.sleb128 8
 1095 020d 04000000 		.4byte	.LCFI27
 1096 0211 06000000 		.4byte	.LCFI28
 1097 0215 0200     		.2byte	0x2
 1098 0217 7D       		.byte	0x7d
 1099 0218 10       		.sleb128 16
 1100 0219 06000000 		.4byte	.LCFI28
 1101 021d 3A000000 		.4byte	.LFE10
 1102 0221 0200     		.2byte	0x2
 1103 0223 77       		.byte	0x77
 1104 0224 10       		.sleb128 16
 1105 0225 00000000 		.4byte	0x0
 1106 0229 00000000 		.4byte	0x0
 1107              	.LLST11:
 1108 022d 00000000 		.4byte	.LFB11
 1109 0231 02000000 		.4byte	.LCFI29
 1110 0235 0100     		.2byte	0x1
 1111 0237 5D       		.byte	0x5d
 1112 0238 02000000 		.4byte	.LCFI29
 1113 023c 04000000 		.4byte	.LCFI30
 1114 0240 0200     		.2byte	0x2
 1115 0242 7D       		.byte	0x7d
 1116 0243 08       		.sleb128 8
 1117 0244 04000000 		.4byte	.LCFI30
 1118 0248 06000000 		.4byte	.LCFI31
 1119 024c 0200     		.2byte	0x2
 1120 024e 7D       		.byte	0x7d
 1121 024f 10       		.sleb128 16
 1122 0250 06000000 		.4byte	.LCFI31
 1123 0254 44000000 		.4byte	.LFE11
 1124 0258 0200     		.2byte	0x2
 1125 025a 77       		.byte	0x77
 1126 025b 10       		.sleb128 16
 1127 025c 00000000 		.4byte	0x0
 1128 0260 00000000 		.4byte	0x0
 1129              	.LLST12:
 1130 0264 00000000 		.4byte	.LFB12
 1131 0268 02000000 		.4byte	.LCFI32
 1132 026c 0100     		.2byte	0x1
 1133 026e 5D       		.byte	0x5d
 1134 026f 02000000 		.4byte	.LCFI32
 1135 0273 04000000 		.4byte	.LCFI33
 1136 0277 0200     		.2byte	0x2
 1137 0279 7D       		.byte	0x7d
 1138 027a 08       		.sleb128 8
 1139 027b 04000000 		.4byte	.LCFI33
 1140 027f 06000000 		.4byte	.LCFI34
 1141 0283 0200     		.2byte	0x2
 1142 0285 7D       		.byte	0x7d
 1143 0286 10       		.sleb128 16
 1144 0287 06000000 		.4byte	.LCFI34
 1145 028b 38000000 		.4byte	.LFE12
 1146 028f 0200     		.2byte	0x2
 1147 0291 77       		.byte	0x77
 1148 0292 10       		.sleb128 16
 1149 0293 00000000 		.4byte	0x0
 1150 0297 00000000 		.4byte	0x0
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 48


 1151              	.LLST13:
 1152 029b 00000000 		.4byte	.LFB13
 1153 029f 02000000 		.4byte	.LCFI35
 1154 02a3 0100     		.2byte	0x1
 1155 02a5 5D       		.byte	0x5d
 1156 02a6 02000000 		.4byte	.LCFI35
 1157 02aa 04000000 		.4byte	.LCFI36
 1158 02ae 0200     		.2byte	0x2
 1159 02b0 7D       		.byte	0x7d
 1160 02b1 04       		.sleb128 4
 1161 02b2 04000000 		.4byte	.LCFI36
 1162 02b6 06000000 		.4byte	.LCFI37
 1163 02ba 0200     		.2byte	0x2
 1164 02bc 7D       		.byte	0x7d
 1165 02bd 10       		.sleb128 16
 1166 02be 06000000 		.4byte	.LCFI37
 1167 02c2 4A000000 		.4byte	.LFE13
 1168 02c6 0200     		.2byte	0x2
 1169 02c8 77       		.byte	0x77
 1170 02c9 10       		.sleb128 16
 1171 02ca 00000000 		.4byte	0x0
 1172 02ce 00000000 		.4byte	0x0
 1173              	.LLST14:
 1174 02d2 00000000 		.4byte	.LFB14
 1175 02d6 02000000 		.4byte	.LCFI38
 1176 02da 0100     		.2byte	0x1
 1177 02dc 5D       		.byte	0x5d
 1178 02dd 02000000 		.4byte	.LCFI38
 1179 02e1 04000000 		.4byte	.LCFI39
 1180 02e5 0200     		.2byte	0x2
 1181 02e7 7D       		.byte	0x7d
 1182 02e8 04       		.sleb128 4
 1183 02e9 04000000 		.4byte	.LCFI39
 1184 02ed 0A000000 		.4byte	.LFE14
 1185 02f1 0200     		.2byte	0x2
 1186 02f3 77       		.byte	0x77
 1187 02f4 04       		.sleb128 4
 1188 02f5 00000000 		.4byte	0x0
 1189 02f9 00000000 		.4byte	0x0
 1190              	.LLST15:
 1191 02fd 00000000 		.4byte	.LFB15
 1192 0301 02000000 		.4byte	.LCFI40
 1193 0305 0100     		.2byte	0x1
 1194 0307 5D       		.byte	0x5d
 1195 0308 02000000 		.4byte	.LCFI40
 1196 030c 04000000 		.4byte	.LCFI41
 1197 0310 0200     		.2byte	0x2
 1198 0312 7D       		.byte	0x7d
 1199 0313 04       		.sleb128 4
 1200 0314 04000000 		.4byte	.LCFI41
 1201 0318 06000000 		.4byte	.LCFI42
 1202 031c 0200     		.2byte	0x2
 1203 031e 7D       		.byte	0x7d
 1204 031f 18       		.sleb128 24
 1205 0320 06000000 		.4byte	.LCFI42
 1206 0324 C0000000 		.4byte	.LFE15
 1207 0328 0200     		.2byte	0x2
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 49


 1208 032a 77       		.byte	0x77
 1209 032b 18       		.sleb128 24
 1210 032c 00000000 		.4byte	0x0
 1211 0330 00000000 		.4byte	0x0
 1212              	.LLST16:
 1213 0334 00000000 		.4byte	.LFB16
 1214 0338 02000000 		.4byte	.LCFI43
 1215 033c 0100     		.2byte	0x1
 1216 033e 5D       		.byte	0x5d
 1217 033f 02000000 		.4byte	.LCFI43
 1218 0343 04000000 		.4byte	.LCFI44
 1219 0347 0200     		.2byte	0x2
 1220 0349 7D       		.byte	0x7d
 1221 034a 08       		.sleb128 8
 1222 034b 04000000 		.4byte	.LCFI44
 1223 034f 06000000 		.4byte	.LCFI45
 1224 0353 0200     		.2byte	0x2
 1225 0355 7D       		.byte	0x7d
 1226 0356 10       		.sleb128 16
 1227 0357 06000000 		.4byte	.LCFI45
 1228 035b 3C000000 		.4byte	.LFE16
 1229 035f 0200     		.2byte	0x2
 1230 0361 77       		.byte	0x77
 1231 0362 10       		.sleb128 16
 1232 0363 00000000 		.4byte	0x0
 1233 0367 00000000 		.4byte	0x0
 1234              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 1235              		.section	.debug_info
 1236 0000 3F030000 		.4byte	0x33f
 1237 0004 0200     		.2byte	0x2
 1238 0006 00000000 		.4byte	.Ldebug_abbrev0
 1239 000a 04       		.byte	0x4
 1240 000b 01       		.uleb128 0x1
 1241 000c 64000000 		.4byte	.LASF37
 1242 0010 01       		.byte	0x1
 1243 0011 66020000 		.4byte	.LASF38
 1244 0015 A4000000 		.4byte	.LASF39
 1245 0019 00000000 		.4byte	0x0
 1246 001d 00000000 		.4byte	0x0
 1247 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 1248 0025 00000000 		.4byte	.Ldebug_line0
 1249 0029 02       		.uleb128 0x2
 1250 002a 01       		.byte	0x1
 1251 002b 06       		.byte	0x6
 1252 002c 46020000 		.4byte	.LASF0
 1253 0030 02       		.uleb128 0x2
 1254 0031 01       		.byte	0x1
 1255 0032 08       		.byte	0x8
 1256 0033 18010000 		.4byte	.LASF1
 1257 0037 02       		.uleb128 0x2
 1258 0038 02       		.byte	0x2
 1259 0039 05       		.byte	0x5
 1260 003a 18020000 		.4byte	.LASF2
 1261 003e 02       		.uleb128 0x2
 1262 003f 02       		.byte	0x2
 1263 0040 07       		.byte	0x7
 1264 0041 3D000000 		.4byte	.LASF3
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 50


 1265 0045 02       		.uleb128 0x2
 1266 0046 04       		.byte	0x4
 1267 0047 05       		.byte	0x5
 1268 0048 3D020000 		.4byte	.LASF4
 1269 004c 02       		.uleb128 0x2
 1270 004d 04       		.byte	0x4
 1271 004e 07       		.byte	0x7
 1272 004f 92000000 		.4byte	.LASF5
 1273 0053 02       		.uleb128 0x2
 1274 0054 08       		.byte	0x8
 1275 0055 05       		.byte	0x5
 1276 0056 00000000 		.4byte	.LASF6
 1277 005a 02       		.uleb128 0x2
 1278 005b 08       		.byte	0x8
 1279 005c 07       		.byte	0x7
 1280 005d 75010000 		.4byte	.LASF7
 1281 0061 03       		.uleb128 0x3
 1282 0062 04       		.byte	0x4
 1283 0063 05       		.byte	0x5
 1284 0064 696E7400 		.ascii	"int\000"
 1285 0068 02       		.uleb128 0x2
 1286 0069 04       		.byte	0x4
 1287 006a 07       		.byte	0x7
 1288 006b 3C010000 		.4byte	.LASF8
 1289 006f 02       		.uleb128 0x2
 1290 0070 01       		.byte	0x1
 1291 0071 08       		.byte	0x8
 1292 0072 0B020000 		.4byte	.LASF9
 1293 0076 04       		.uleb128 0x4
 1294 0077 DE000000 		.4byte	.LASF40
 1295 007b 02       		.byte	0x2
 1296 007c 2A       		.byte	0x2a
 1297 007d 30000000 		.4byte	0x30
 1298 0081 05       		.uleb128 0x5
 1299 0082 04       		.byte	0x4
 1300 0083 07       		.byte	0x7
 1301 0084 06       		.uleb128 0x6
 1302 0085 01       		.byte	0x1
 1303 0086 E4000000 		.4byte	.LASF10
 1304 008a 01       		.byte	0x1
 1305 008b 49       		.byte	0x49
 1306 008c 01       		.byte	0x1
 1307 008d 00000000 		.4byte	.LFB0
 1308 0091 2A000000 		.4byte	.LFE0
 1309 0095 00000000 		.4byte	.LLST0
 1310 0099 06       		.uleb128 0x6
 1311 009a 01       		.byte	0x1
 1312 009b 88000000 		.4byte	.LASF11
 1313 009f 01       		.byte	0x1
 1314 00a0 65       		.byte	0x65
 1315 00a1 01       		.byte	0x1
 1316 00a2 00000000 		.4byte	.LFB1
 1317 00a6 34000000 		.4byte	.LFE1
 1318 00aa 2B000000 		.4byte	.LLST1
 1319 00ae 07       		.uleb128 0x7
 1320 00af 01       		.byte	0x1
 1321 00b0 70000000 		.4byte	.LASF12
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 51


 1322 00b4 01       		.byte	0x1
 1323 00b5 AB       		.byte	0xab
 1324 00b6 01       		.byte	0x1
 1325 00b7 00000000 		.4byte	.LFB2
 1326 00bb 56000000 		.4byte	.LFE2
 1327 00bf 56000000 		.4byte	.LLST2
 1328 00c3 D6000000 		.4byte	0xd6
 1329 00c7 08       		.uleb128 0x8
 1330 00c8 07010000 		.4byte	.LASF14
 1331 00cc 01       		.byte	0x1
 1332 00cd AD       		.byte	0xad
 1333 00ce 76000000 		.4byte	0x76
 1334 00d2 02       		.byte	0x2
 1335 00d3 91       		.byte	0x91
 1336 00d4 77       		.sleb128 -9
 1337 00d5 00       		.byte	0x0
 1338 00d6 07       		.uleb128 0x7
 1339 00d7 01       		.byte	0x1
 1340 00d8 B2010000 		.4byte	.LASF13
 1341 00dc 01       		.byte	0x1
 1342 00dd DD       		.byte	0xdd
 1343 00de 01       		.byte	0x1
 1344 00df 00000000 		.4byte	.LFB3
 1345 00e3 52000000 		.4byte	.LFE3
 1346 00e7 8D000000 		.4byte	.LLST3
 1347 00eb FE000000 		.4byte	0xfe
 1348 00ef 08       		.uleb128 0x8
 1349 00f0 07010000 		.4byte	.LASF14
 1350 00f4 01       		.byte	0x1
 1351 00f5 DF       		.byte	0xdf
 1352 00f6 76000000 		.4byte	0x76
 1353 00fa 02       		.byte	0x2
 1354 00fb 91       		.byte	0x91
 1355 00fc 77       		.sleb128 -9
 1356 00fd 00       		.byte	0x0
 1357 00fe 09       		.uleb128 0x9
 1358 00ff 01       		.byte	0x1
 1359 0100 8C010000 		.4byte	.LASF21
 1360 0104 01       		.byte	0x1
 1361 0105 1301     		.2byte	0x113
 1362 0107 01       		.byte	0x1
 1363 0108 76000000 		.4byte	0x76
 1364 010c 00000000 		.4byte	.LFB4
 1365 0110 10000000 		.4byte	.LFE4
 1366 0114 C4000000 		.4byte	.LLST4
 1367 0118 0A       		.uleb128 0xa
 1368 0119 01       		.byte	0x1
 1369 011a 49010000 		.4byte	.LASF15
 1370 011e 01       		.byte	0x1
 1371 011f 2B01     		.2byte	0x12b
 1372 0121 01       		.byte	0x1
 1373 0122 00000000 		.4byte	.LFB5
 1374 0126 14000000 		.4byte	.LFE5
 1375 012a EF000000 		.4byte	.LLST5
 1376 012e 42010000 		.4byte	0x142
 1377 0132 0B       		.uleb128 0xb
 1378 0133 35020000 		.4byte	.LASF17
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 52


 1379 0137 01       		.byte	0x1
 1380 0138 2B01     		.2byte	0x12b
 1381 013a 76000000 		.4byte	0x76
 1382 013e 02       		.byte	0x2
 1383 013f 91       		.byte	0x91
 1384 0140 77       		.sleb128 -9
 1385 0141 00       		.byte	0x0
 1386 0142 0A       		.uleb128 0xa
 1387 0143 01       		.byte	0x1
 1388 0144 BC010000 		.4byte	.LASF16
 1389 0148 01       		.byte	0x1
 1390 0149 8603     		.2byte	0x386
 1391 014b 01       		.byte	0x1
 1392 014c 00000000 		.4byte	.LFB6
 1393 0150 20000000 		.4byte	.LFE6
 1394 0154 26010000 		.4byte	.LLST6
 1395 0158 6C010000 		.4byte	0x16c
 1396 015c 0B       		.uleb128 0xb
 1397 015d 26010000 		.4byte	.LASF18
 1398 0161 01       		.byte	0x1
 1399 0162 8603     		.2byte	0x386
 1400 0164 76000000 		.4byte	0x76
 1401 0168 02       		.byte	0x2
 1402 0169 91       		.byte	0x91
 1403 016a 77       		.sleb128 -9
 1404 016b 00       		.byte	0x0
 1405 016c 0A       		.uleb128 0xa
 1406 016d 01       		.byte	0x1
 1407 016e 0E000000 		.4byte	.LASF19
 1408 0172 01       		.byte	0x1
 1409 0173 A803     		.2byte	0x3a8
 1410 0175 01       		.byte	0x1
 1411 0176 00000000 		.4byte	.LFB7
 1412 017a 2E000000 		.4byte	.LFE7
 1413 017e 5D010000 		.4byte	.LLST7
 1414 0182 96010000 		.4byte	0x196
 1415 0186 0B       		.uleb128 0xb
 1416 0187 F6010000 		.4byte	.LASF20
 1417 018b 01       		.byte	0x1
 1418 018c A803     		.2byte	0x3a8
 1419 018e 76000000 		.4byte	0x76
 1420 0192 02       		.byte	0x2
 1421 0193 91       		.byte	0x91
 1422 0194 77       		.sleb128 -9
 1423 0195 00       		.byte	0x0
 1424 0196 09       		.uleb128 0x9
 1425 0197 01       		.byte	0x1
 1426 0198 63010000 		.4byte	.LASF22
 1427 019c 01       		.byte	0x1
 1428 019d EC03     		.2byte	0x3ec
 1429 019f 01       		.byte	0x1
 1430 01a0 76000000 		.4byte	0x76
 1431 01a4 00000000 		.4byte	.LFB8
 1432 01a8 18000000 		.4byte	.LFE8
 1433 01ac 94010000 		.4byte	.LLST8
 1434 01b0 0A       		.uleb128 0xa
 1435 01b1 01       		.byte	0x1
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 53


 1436 01b2 D4010000 		.4byte	.LASF23
 1437 01b6 01       		.byte	0x1
 1438 01b7 1004     		.2byte	0x410
 1439 01b9 01       		.byte	0x1
 1440 01ba 00000000 		.4byte	.LFB9
 1441 01be 34000000 		.4byte	.LFE9
 1442 01c2 BF010000 		.4byte	.LLST9
 1443 01c6 DA010000 		.4byte	0x1da
 1444 01ca 0B       		.uleb128 0xb
 1445 01cb F6010000 		.4byte	.LASF20
 1446 01cf 01       		.byte	0x1
 1447 01d0 1004     		.2byte	0x410
 1448 01d2 76000000 		.4byte	0x76
 1449 01d6 02       		.byte	0x2
 1450 01d7 91       		.byte	0x91
 1451 01d8 77       		.sleb128 -9
 1452 01d9 00       		.byte	0x0
 1453 01da 0A       		.uleb128 0xa
 1454 01db 01       		.byte	0x1
 1455 01dc 52020000 		.4byte	.LASF24
 1456 01e0 01       		.byte	0x1
 1457 01e1 6004     		.2byte	0x460
 1458 01e3 01       		.byte	0x1
 1459 01e4 00000000 		.4byte	.LFB10
 1460 01e8 3A000000 		.4byte	.LFE10
 1461 01ec F6010000 		.4byte	.LLST10
 1462 01f0 04020000 		.4byte	0x204
 1463 01f4 0B       		.uleb128 0xb
 1464 01f5 5D000000 		.4byte	.LASF25
 1465 01f9 01       		.byte	0x1
 1466 01fa 6004     		.2byte	0x460
 1467 01fc 04020000 		.4byte	0x204
 1468 0200 02       		.byte	0x2
 1469 0201 91       		.byte	0x91
 1470 0202 74       		.sleb128 -12
 1471 0203 00       		.byte	0x0
 1472 0204 0C       		.uleb128 0xc
 1473 0205 04       		.byte	0x4
 1474 0206 76000000 		.4byte	0x76
 1475 020a 0A       		.uleb128 0xa
 1476 020b 01       		.byte	0x1
 1477 020c EF000000 		.4byte	.LASF26
 1478 0210 01       		.byte	0x1
 1479 0211 8404     		.2byte	0x484
 1480 0213 01       		.byte	0x1
 1481 0214 00000000 		.4byte	.LFB11
 1482 0218 44000000 		.4byte	.LFE11
 1483 021c 2D020000 		.4byte	.LLST11
 1484 0220 43020000 		.4byte	0x243
 1485 0224 0B       		.uleb128 0xb
 1486 0225 5D000000 		.4byte	.LASF25
 1487 0229 01       		.byte	0x1
 1488 022a 8404     		.2byte	0x484
 1489 022c 04020000 		.4byte	0x204
 1490 0230 02       		.byte	0x2
 1491 0231 91       		.byte	0x91
 1492 0232 74       		.sleb128 -12
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 54


 1493 0233 0B       		.uleb128 0xb
 1494 0234 FD000000 		.4byte	.LASF27
 1495 0238 01       		.byte	0x1
 1496 0239 8404     		.2byte	0x484
 1497 023b 76000000 		.4byte	0x76
 1498 023f 02       		.byte	0x2
 1499 0240 91       		.byte	0x91
 1500 0241 73       		.sleb128 -13
 1501 0242 00       		.byte	0x0
 1502 0243 0A       		.uleb128 0xa
 1503 0244 01       		.byte	0x1
 1504 0245 A5010000 		.4byte	.LASF28
 1505 0249 01       		.byte	0x1
 1506 024a A704     		.2byte	0x4a7
 1507 024c 01       		.byte	0x1
 1508 024d 00000000 		.4byte	.LFB12
 1509 0251 38000000 		.4byte	.LFE12
 1510 0255 64020000 		.4byte	.LLST12
 1511 0259 6D020000 		.4byte	0x26d
 1512 025d 0B       		.uleb128 0xb
 1513 025e F6010000 		.4byte	.LASF20
 1514 0262 01       		.byte	0x1
 1515 0263 A704     		.2byte	0x4a7
 1516 0265 76000000 		.4byte	0x76
 1517 0269 02       		.byte	0x2
 1518 026a 91       		.byte	0x91
 1519 026b 77       		.sleb128 -9
 1520 026c 00       		.byte	0x0
 1521 026d 0D       		.uleb128 0xd
 1522 026e 01       		.byte	0x1
 1523 026f E1010000 		.4byte	.LASF41
 1524 0273 01       		.byte	0x1
 1525 0274 CC04     		.2byte	0x4cc
 1526 0276 01       		.byte	0x1
 1527 0277 76000000 		.4byte	0x76
 1528 027b 00000000 		.4byte	.LFB13
 1529 027f 4A000000 		.4byte	.LFE13
 1530 0283 9B020000 		.4byte	.LLST13
 1531 0287 9B020000 		.4byte	0x29b
 1532 028b 0E       		.uleb128 0xe
 1533 028c 61020000 		.4byte	.LASF29
 1534 0290 01       		.byte	0x1
 1535 0291 CE04     		.2byte	0x4ce
 1536 0293 76000000 		.4byte	0x76
 1537 0297 02       		.byte	0x2
 1538 0298 91       		.byte	0x91
 1539 0299 77       		.sleb128 -9
 1540 029a 00       		.byte	0x0
 1541 029b 0F       		.uleb128 0xf
 1542 029c 01       		.byte	0x1
 1543 029d 22020000 		.4byte	.LASF30
 1544 02a1 01       		.byte	0x1
 1545 02a2 2005     		.2byte	0x520
 1546 02a4 01       		.byte	0x1
 1547 02a5 00000000 		.4byte	.LFB14
 1548 02a9 0A000000 		.4byte	.LFE14
 1549 02ad D2020000 		.4byte	.LLST14
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 55


 1550 02b1 0A       		.uleb128 0xa
 1551 02b2 01       		.byte	0x1
 1552 02b3 2D010000 		.4byte	.LASF31
 1553 02b7 01       		.byte	0x1
 1554 02b8 6F05     		.2byte	0x56f
 1555 02ba 01       		.byte	0x1
 1556 02bb 00000000 		.4byte	.LFB15
 1557 02bf C0000000 		.4byte	.LFE15
 1558 02c3 FD020000 		.4byte	.LLST15
 1559 02c7 06030000 		.4byte	0x306
 1560 02cb 0B       		.uleb128 0xb
 1561 02cc 10020000 		.4byte	.LASF32
 1562 02d0 01       		.byte	0x1
 1563 02d1 6F05     		.2byte	0x56f
 1564 02d3 76000000 		.4byte	0x76
 1565 02d7 02       		.byte	0x2
 1566 02d8 91       		.byte	0x91
 1567 02d9 6F       		.sleb128 -17
 1568 02da 10       		.uleb128 0x10
 1569 02db 18000000 		.4byte	.LBB2
 1570 02df B6000000 		.4byte	.LBE2
 1571 02e3 0E       		.uleb128 0xe
 1572 02e4 1F000000 		.4byte	.LASF33
 1573 02e8 01       		.byte	0x1
 1574 02e9 7705     		.2byte	0x577
 1575 02eb 76000000 		.4byte	0x76
 1576 02ef 02       		.byte	0x2
 1577 02f0 91       		.byte	0x91
 1578 02f1 77       		.sleb128 -9
 1579 02f2 0E       		.uleb128 0xe
 1580 02f3 01020000 		.4byte	.LASF34
 1581 02f7 01       		.byte	0x1
 1582 02f8 9D05     		.2byte	0x59d
 1583 02fa 76000000 		.4byte	0x76
 1584 02fe 05       		.byte	0x5
 1585 02ff 03       		.byte	0x3
 1586 0300 01000000 		.4byte	tx_period.2085
 1587 0304 00       		.byte	0x0
 1588 0305 00       		.byte	0x0
 1589 0306 0A       		.uleb128 0xa
 1590 0307 01       		.byte	0x1
 1591 0308 27000000 		.4byte	.LASF35
 1592 030c 01       		.byte	0x1
 1593 030d EA05     		.2byte	0x5ea
 1594 030f 01       		.byte	0x1
 1595 0310 00000000 		.4byte	.LFB16
 1596 0314 3C000000 		.4byte	.LFE16
 1597 0318 34030000 		.4byte	.LLST16
 1598 031c 30030000 		.4byte	0x330
 1599 0320 0B       		.uleb128 0xb
 1600 0321 7C000000 		.4byte	.LASF36
 1601 0325 01       		.byte	0x1
 1602 0326 EA05     		.2byte	0x5ea
 1603 0328 76000000 		.4byte	0x76
 1604 032c 02       		.byte	0x2
 1605 032d 91       		.byte	0x91
 1606 032e 77       		.sleb128 -9
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 56


 1607 032f 00       		.byte	0x0
 1608 0330 11       		.uleb128 0x11
 1609 0331 50000000 		.4byte	.LASF42
 1610 0335 01       		.byte	0x1
 1611 0336 2D       		.byte	0x2d
 1612 0337 76000000 		.4byte	0x76
 1613 033b 01       		.byte	0x1
 1614 033c 05       		.byte	0x5
 1615 033d 03       		.byte	0x3
 1616 033e 00000000 		.4byte	UART_initVar
 1617 0342 00       		.byte	0x0
 1618              		.section	.debug_abbrev
 1619 0000 01       		.uleb128 0x1
 1620 0001 11       		.uleb128 0x11
 1621 0002 01       		.byte	0x1
 1622 0003 25       		.uleb128 0x25
 1623 0004 0E       		.uleb128 0xe
 1624 0005 13       		.uleb128 0x13
 1625 0006 0B       		.uleb128 0xb
 1626 0007 03       		.uleb128 0x3
 1627 0008 0E       		.uleb128 0xe
 1628 0009 1B       		.uleb128 0x1b
 1629 000a 0E       		.uleb128 0xe
 1630 000b 11       		.uleb128 0x11
 1631 000c 01       		.uleb128 0x1
 1632 000d 52       		.uleb128 0x52
 1633 000e 01       		.uleb128 0x1
 1634 000f 55       		.uleb128 0x55
 1635 0010 06       		.uleb128 0x6
 1636 0011 10       		.uleb128 0x10
 1637 0012 06       		.uleb128 0x6
 1638 0013 00       		.byte	0x0
 1639 0014 00       		.byte	0x0
 1640 0015 02       		.uleb128 0x2
 1641 0016 24       		.uleb128 0x24
 1642 0017 00       		.byte	0x0
 1643 0018 0B       		.uleb128 0xb
 1644 0019 0B       		.uleb128 0xb
 1645 001a 3E       		.uleb128 0x3e
 1646 001b 0B       		.uleb128 0xb
 1647 001c 03       		.uleb128 0x3
 1648 001d 0E       		.uleb128 0xe
 1649 001e 00       		.byte	0x0
 1650 001f 00       		.byte	0x0
 1651 0020 03       		.uleb128 0x3
 1652 0021 24       		.uleb128 0x24
 1653 0022 00       		.byte	0x0
 1654 0023 0B       		.uleb128 0xb
 1655 0024 0B       		.uleb128 0xb
 1656 0025 3E       		.uleb128 0x3e
 1657 0026 0B       		.uleb128 0xb
 1658 0027 03       		.uleb128 0x3
 1659 0028 08       		.uleb128 0x8
 1660 0029 00       		.byte	0x0
 1661 002a 00       		.byte	0x0
 1662 002b 04       		.uleb128 0x4
 1663 002c 16       		.uleb128 0x16
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 57


 1664 002d 00       		.byte	0x0
 1665 002e 03       		.uleb128 0x3
 1666 002f 0E       		.uleb128 0xe
 1667 0030 3A       		.uleb128 0x3a
 1668 0031 0B       		.uleb128 0xb
 1669 0032 3B       		.uleb128 0x3b
 1670 0033 0B       		.uleb128 0xb
 1671 0034 49       		.uleb128 0x49
 1672 0035 13       		.uleb128 0x13
 1673 0036 00       		.byte	0x0
 1674 0037 00       		.byte	0x0
 1675 0038 05       		.uleb128 0x5
 1676 0039 24       		.uleb128 0x24
 1677 003a 00       		.byte	0x0
 1678 003b 0B       		.uleb128 0xb
 1679 003c 0B       		.uleb128 0xb
 1680 003d 3E       		.uleb128 0x3e
 1681 003e 0B       		.uleb128 0xb
 1682 003f 00       		.byte	0x0
 1683 0040 00       		.byte	0x0
 1684 0041 06       		.uleb128 0x6
 1685 0042 2E       		.uleb128 0x2e
 1686 0043 00       		.byte	0x0
 1687 0044 3F       		.uleb128 0x3f
 1688 0045 0C       		.uleb128 0xc
 1689 0046 03       		.uleb128 0x3
 1690 0047 0E       		.uleb128 0xe
 1691 0048 3A       		.uleb128 0x3a
 1692 0049 0B       		.uleb128 0xb
 1693 004a 3B       		.uleb128 0x3b
 1694 004b 0B       		.uleb128 0xb
 1695 004c 27       		.uleb128 0x27
 1696 004d 0C       		.uleb128 0xc
 1697 004e 11       		.uleb128 0x11
 1698 004f 01       		.uleb128 0x1
 1699 0050 12       		.uleb128 0x12
 1700 0051 01       		.uleb128 0x1
 1701 0052 40       		.uleb128 0x40
 1702 0053 06       		.uleb128 0x6
 1703 0054 00       		.byte	0x0
 1704 0055 00       		.byte	0x0
 1705 0056 07       		.uleb128 0x7
 1706 0057 2E       		.uleb128 0x2e
 1707 0058 01       		.byte	0x1
 1708 0059 3F       		.uleb128 0x3f
 1709 005a 0C       		.uleb128 0xc
 1710 005b 03       		.uleb128 0x3
 1711 005c 0E       		.uleb128 0xe
 1712 005d 3A       		.uleb128 0x3a
 1713 005e 0B       		.uleb128 0xb
 1714 005f 3B       		.uleb128 0x3b
 1715 0060 0B       		.uleb128 0xb
 1716 0061 27       		.uleb128 0x27
 1717 0062 0C       		.uleb128 0xc
 1718 0063 11       		.uleb128 0x11
 1719 0064 01       		.uleb128 0x1
 1720 0065 12       		.uleb128 0x12
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 58


 1721 0066 01       		.uleb128 0x1
 1722 0067 40       		.uleb128 0x40
 1723 0068 06       		.uleb128 0x6
 1724 0069 01       		.uleb128 0x1
 1725 006a 13       		.uleb128 0x13
 1726 006b 00       		.byte	0x0
 1727 006c 00       		.byte	0x0
 1728 006d 08       		.uleb128 0x8
 1729 006e 34       		.uleb128 0x34
 1730 006f 00       		.byte	0x0
 1731 0070 03       		.uleb128 0x3
 1732 0071 0E       		.uleb128 0xe
 1733 0072 3A       		.uleb128 0x3a
 1734 0073 0B       		.uleb128 0xb
 1735 0074 3B       		.uleb128 0x3b
 1736 0075 0B       		.uleb128 0xb
 1737 0076 49       		.uleb128 0x49
 1738 0077 13       		.uleb128 0x13
 1739 0078 02       		.uleb128 0x2
 1740 0079 0A       		.uleb128 0xa
 1741 007a 00       		.byte	0x0
 1742 007b 00       		.byte	0x0
 1743 007c 09       		.uleb128 0x9
 1744 007d 2E       		.uleb128 0x2e
 1745 007e 00       		.byte	0x0
 1746 007f 3F       		.uleb128 0x3f
 1747 0080 0C       		.uleb128 0xc
 1748 0081 03       		.uleb128 0x3
 1749 0082 0E       		.uleb128 0xe
 1750 0083 3A       		.uleb128 0x3a
 1751 0084 0B       		.uleb128 0xb
 1752 0085 3B       		.uleb128 0x3b
 1753 0086 05       		.uleb128 0x5
 1754 0087 27       		.uleb128 0x27
 1755 0088 0C       		.uleb128 0xc
 1756 0089 49       		.uleb128 0x49
 1757 008a 13       		.uleb128 0x13
 1758 008b 11       		.uleb128 0x11
 1759 008c 01       		.uleb128 0x1
 1760 008d 12       		.uleb128 0x12
 1761 008e 01       		.uleb128 0x1
 1762 008f 40       		.uleb128 0x40
 1763 0090 06       		.uleb128 0x6
 1764 0091 00       		.byte	0x0
 1765 0092 00       		.byte	0x0
 1766 0093 0A       		.uleb128 0xa
 1767 0094 2E       		.uleb128 0x2e
 1768 0095 01       		.byte	0x1
 1769 0096 3F       		.uleb128 0x3f
 1770 0097 0C       		.uleb128 0xc
 1771 0098 03       		.uleb128 0x3
 1772 0099 0E       		.uleb128 0xe
 1773 009a 3A       		.uleb128 0x3a
 1774 009b 0B       		.uleb128 0xb
 1775 009c 3B       		.uleb128 0x3b
 1776 009d 05       		.uleb128 0x5
 1777 009e 27       		.uleb128 0x27
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 59


 1778 009f 0C       		.uleb128 0xc
 1779 00a0 11       		.uleb128 0x11
 1780 00a1 01       		.uleb128 0x1
 1781 00a2 12       		.uleb128 0x12
 1782 00a3 01       		.uleb128 0x1
 1783 00a4 40       		.uleb128 0x40
 1784 00a5 06       		.uleb128 0x6
 1785 00a6 01       		.uleb128 0x1
 1786 00a7 13       		.uleb128 0x13
 1787 00a8 00       		.byte	0x0
 1788 00a9 00       		.byte	0x0
 1789 00aa 0B       		.uleb128 0xb
 1790 00ab 05       		.uleb128 0x5
 1791 00ac 00       		.byte	0x0
 1792 00ad 03       		.uleb128 0x3
 1793 00ae 0E       		.uleb128 0xe
 1794 00af 3A       		.uleb128 0x3a
 1795 00b0 0B       		.uleb128 0xb
 1796 00b1 3B       		.uleb128 0x3b
 1797 00b2 05       		.uleb128 0x5
 1798 00b3 49       		.uleb128 0x49
 1799 00b4 13       		.uleb128 0x13
 1800 00b5 02       		.uleb128 0x2
 1801 00b6 0A       		.uleb128 0xa
 1802 00b7 00       		.byte	0x0
 1803 00b8 00       		.byte	0x0
 1804 00b9 0C       		.uleb128 0xc
 1805 00ba 0F       		.uleb128 0xf
 1806 00bb 00       		.byte	0x0
 1807 00bc 0B       		.uleb128 0xb
 1808 00bd 0B       		.uleb128 0xb
 1809 00be 49       		.uleb128 0x49
 1810 00bf 13       		.uleb128 0x13
 1811 00c0 00       		.byte	0x0
 1812 00c1 00       		.byte	0x0
 1813 00c2 0D       		.uleb128 0xd
 1814 00c3 2E       		.uleb128 0x2e
 1815 00c4 01       		.byte	0x1
 1816 00c5 3F       		.uleb128 0x3f
 1817 00c6 0C       		.uleb128 0xc
 1818 00c7 03       		.uleb128 0x3
 1819 00c8 0E       		.uleb128 0xe
 1820 00c9 3A       		.uleb128 0x3a
 1821 00ca 0B       		.uleb128 0xb
 1822 00cb 3B       		.uleb128 0x3b
 1823 00cc 05       		.uleb128 0x5
 1824 00cd 27       		.uleb128 0x27
 1825 00ce 0C       		.uleb128 0xc
 1826 00cf 49       		.uleb128 0x49
 1827 00d0 13       		.uleb128 0x13
 1828 00d1 11       		.uleb128 0x11
 1829 00d2 01       		.uleb128 0x1
 1830 00d3 12       		.uleb128 0x12
 1831 00d4 01       		.uleb128 0x1
 1832 00d5 40       		.uleb128 0x40
 1833 00d6 06       		.uleb128 0x6
 1834 00d7 01       		.uleb128 0x1
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 60


 1835 00d8 13       		.uleb128 0x13
 1836 00d9 00       		.byte	0x0
 1837 00da 00       		.byte	0x0
 1838 00db 0E       		.uleb128 0xe
 1839 00dc 34       		.uleb128 0x34
 1840 00dd 00       		.byte	0x0
 1841 00de 03       		.uleb128 0x3
 1842 00df 0E       		.uleb128 0xe
 1843 00e0 3A       		.uleb128 0x3a
 1844 00e1 0B       		.uleb128 0xb
 1845 00e2 3B       		.uleb128 0x3b
 1846 00e3 05       		.uleb128 0x5
 1847 00e4 49       		.uleb128 0x49
 1848 00e5 13       		.uleb128 0x13
 1849 00e6 02       		.uleb128 0x2
 1850 00e7 0A       		.uleb128 0xa
 1851 00e8 00       		.byte	0x0
 1852 00e9 00       		.byte	0x0
 1853 00ea 0F       		.uleb128 0xf
 1854 00eb 2E       		.uleb128 0x2e
 1855 00ec 00       		.byte	0x0
 1856 00ed 3F       		.uleb128 0x3f
 1857 00ee 0C       		.uleb128 0xc
 1858 00ef 03       		.uleb128 0x3
 1859 00f0 0E       		.uleb128 0xe
 1860 00f1 3A       		.uleb128 0x3a
 1861 00f2 0B       		.uleb128 0xb
 1862 00f3 3B       		.uleb128 0x3b
 1863 00f4 05       		.uleb128 0x5
 1864 00f5 27       		.uleb128 0x27
 1865 00f6 0C       		.uleb128 0xc
 1866 00f7 11       		.uleb128 0x11
 1867 00f8 01       		.uleb128 0x1
 1868 00f9 12       		.uleb128 0x12
 1869 00fa 01       		.uleb128 0x1
 1870 00fb 40       		.uleb128 0x40
 1871 00fc 06       		.uleb128 0x6
 1872 00fd 00       		.byte	0x0
 1873 00fe 00       		.byte	0x0
 1874 00ff 10       		.uleb128 0x10
 1875 0100 0B       		.uleb128 0xb
 1876 0101 01       		.byte	0x1
 1877 0102 11       		.uleb128 0x11
 1878 0103 01       		.uleb128 0x1
 1879 0104 12       		.uleb128 0x12
 1880 0105 01       		.uleb128 0x1
 1881 0106 00       		.byte	0x0
 1882 0107 00       		.byte	0x0
 1883 0108 11       		.uleb128 0x11
 1884 0109 34       		.uleb128 0x34
 1885 010a 00       		.byte	0x0
 1886 010b 03       		.uleb128 0x3
 1887 010c 0E       		.uleb128 0xe
 1888 010d 3A       		.uleb128 0x3a
 1889 010e 0B       		.uleb128 0xb
 1890 010f 3B       		.uleb128 0x3b
 1891 0110 0B       		.uleb128 0xb
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 61


 1892 0111 49       		.uleb128 0x49
 1893 0112 13       		.uleb128 0x13
 1894 0113 3F       		.uleb128 0x3f
 1895 0114 0C       		.uleb128 0xc
 1896 0115 02       		.uleb128 0x2
 1897 0116 0A       		.uleb128 0xa
 1898 0117 00       		.byte	0x0
 1899 0118 00       		.byte	0x0
 1900 0119 00       		.byte	0x0
 1901              		.section	.debug_pubnames,"",%progbits
 1902 0000 80010000 		.4byte	0x180
 1903 0004 0200     		.2byte	0x2
 1904 0006 00000000 		.4byte	.Ldebug_info0
 1905 000a 43030000 		.4byte	0x343
 1906 000e 84000000 		.4byte	0x84
 1907 0012 55415254 		.ascii	"UART_Start\000"
 1907      5F537461 
 1907      727400
 1908 001d 99000000 		.4byte	0x99
 1909 0021 55415254 		.ascii	"UART_Init\000"
 1909      5F496E69 
 1909      7400
 1910 002b AE000000 		.4byte	0xae
 1911 002f 55415254 		.ascii	"UART_Enable\000"
 1911      5F456E61 
 1911      626C6500 
 1912 003b D6000000 		.4byte	0xd6
 1913 003f 55415254 		.ascii	"UART_Stop\000"
 1913      5F53746F 
 1913      7000
 1914 0049 FE000000 		.4byte	0xfe
 1915 004d 55415254 		.ascii	"UART_ReadControlRegister\000"
 1915      5F526561 
 1915      64436F6E 
 1915      74726F6C 
 1915      52656769 
 1916 0066 18010000 		.4byte	0x118
 1917 006a 55415254 		.ascii	"UART_WriteControlRegister\000"
 1917      5F577269 
 1917      7465436F 
 1917      6E74726F 
 1917      6C526567 
 1918 0084 42010000 		.4byte	0x142
 1919 0088 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 1919      5F536574 
 1919      5478496E 
 1919      74657272 
 1919      7570744D 
 1920 00a0 6C010000 		.4byte	0x16c
 1921 00a4 55415254 		.ascii	"UART_WriteTxData\000"
 1921      5F577269 
 1921      74655478 
 1921      44617461 
 1921      00
 1922 00b5 96010000 		.4byte	0x196
 1923 00b9 55415254 		.ascii	"UART_ReadTxStatus\000"
 1923      5F526561 
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 62


 1923      64547853 
 1923      74617475 
 1923      7300
 1924 00cb B0010000 		.4byte	0x1b0
 1925 00cf 55415254 		.ascii	"UART_PutChar\000"
 1925      5F507574 
 1925      43686172 
 1925      00
 1926 00dc DA010000 		.4byte	0x1da
 1927 00e0 55415254 		.ascii	"UART_PutString\000"
 1927      5F507574 
 1927      53747269 
 1927      6E6700
 1928 00ef 0A020000 		.4byte	0x20a
 1929 00f3 55415254 		.ascii	"UART_PutArray\000"
 1929      5F507574 
 1929      41727261 
 1929      7900
 1930 0101 43020000 		.4byte	0x243
 1931 0105 55415254 		.ascii	"UART_PutCRLF\000"
 1931      5F507574 
 1931      43524C46 
 1931      00
 1932 0112 6D020000 		.4byte	0x26d
 1933 0116 55415254 		.ascii	"UART_GetTxBufferSize\000"
 1933      5F476574 
 1933      54784275 
 1933      66666572 
 1933      53697A65 
 1934 012b 9B020000 		.4byte	0x29b
 1935 012f 55415254 		.ascii	"UART_ClearTxBuffer\000"
 1935      5F436C65 
 1935      61725478 
 1935      42756666 
 1935      657200
 1936 0142 B1020000 		.4byte	0x2b1
 1937 0146 55415254 		.ascii	"UART_SendBreak\000"
 1937      5F53656E 
 1937      64427265 
 1937      616B00
 1938 0155 06030000 		.4byte	0x306
 1939 0159 55415254 		.ascii	"UART_SetTxAddressMode\000"
 1939      5F536574 
 1939      54784164 
 1939      64726573 
 1939      734D6F64 
 1940 016f 30030000 		.4byte	0x330
 1941 0173 55415254 		.ascii	"UART_initVar\000"
 1941      5F696E69 
 1941      74566172 
 1941      00
 1942 0180 00000000 		.4byte	0x0
 1943              		.section	.debug_aranges,"",%progbits
 1944 0000 9C000000 		.4byte	0x9c
 1945 0004 0200     		.2byte	0x2
 1946 0006 00000000 		.4byte	.Ldebug_info0
 1947 000a 04       		.byte	0x4
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 63


 1948 000b 00       		.byte	0x0
 1949 000c 0000     		.2byte	0x0
 1950 000e 0000     		.2byte	0x0
 1951 0010 00000000 		.4byte	.LFB0
 1952 0014 2A000000 		.4byte	.LFE0-.LFB0
 1953 0018 00000000 		.4byte	.LFB1
 1954 001c 34000000 		.4byte	.LFE1-.LFB1
 1955 0020 00000000 		.4byte	.LFB2
 1956 0024 56000000 		.4byte	.LFE2-.LFB2
 1957 0028 00000000 		.4byte	.LFB3
 1958 002c 52000000 		.4byte	.LFE3-.LFB3
 1959 0030 00000000 		.4byte	.LFB4
 1960 0034 10000000 		.4byte	.LFE4-.LFB4
 1961 0038 00000000 		.4byte	.LFB5
 1962 003c 14000000 		.4byte	.LFE5-.LFB5
 1963 0040 00000000 		.4byte	.LFB6
 1964 0044 20000000 		.4byte	.LFE6-.LFB6
 1965 0048 00000000 		.4byte	.LFB7
 1966 004c 2E000000 		.4byte	.LFE7-.LFB7
 1967 0050 00000000 		.4byte	.LFB8
 1968 0054 18000000 		.4byte	.LFE8-.LFB8
 1969 0058 00000000 		.4byte	.LFB9
 1970 005c 34000000 		.4byte	.LFE9-.LFB9
 1971 0060 00000000 		.4byte	.LFB10
 1972 0064 3A000000 		.4byte	.LFE10-.LFB10
 1973 0068 00000000 		.4byte	.LFB11
 1974 006c 44000000 		.4byte	.LFE11-.LFB11
 1975 0070 00000000 		.4byte	.LFB12
 1976 0074 38000000 		.4byte	.LFE12-.LFB12
 1977 0078 00000000 		.4byte	.LFB13
 1978 007c 4A000000 		.4byte	.LFE13-.LFB13
 1979 0080 00000000 		.4byte	.LFB14
 1980 0084 0A000000 		.4byte	.LFE14-.LFB14
 1981 0088 00000000 		.4byte	.LFB15
 1982 008c C0000000 		.4byte	.LFE15-.LFB15
 1983 0090 00000000 		.4byte	.LFB16
 1984 0094 3C000000 		.4byte	.LFE16-.LFB16
 1985 0098 00000000 		.4byte	0x0
 1986 009c 00000000 		.4byte	0x0
 1987              		.section	.debug_ranges,"",%progbits
 1988              	.Ldebug_ranges0:
 1989 0000 00000000 		.4byte	.Ltext0
 1990 0004 00000000 		.4byte	.Letext0
 1991 0008 00000000 		.4byte	.LFB0
 1992 000c 2A000000 		.4byte	.LFE0
 1993 0010 00000000 		.4byte	.LFB1
 1994 0014 34000000 		.4byte	.LFE1
 1995 0018 00000000 		.4byte	.LFB2
 1996 001c 56000000 		.4byte	.LFE2
 1997 0020 00000000 		.4byte	.LFB3
 1998 0024 52000000 		.4byte	.LFE3
 1999 0028 00000000 		.4byte	.LFB4
 2000 002c 10000000 		.4byte	.LFE4
 2001 0030 00000000 		.4byte	.LFB5
 2002 0034 14000000 		.4byte	.LFE5
 2003 0038 00000000 		.4byte	.LFB6
 2004 003c 20000000 		.4byte	.LFE6
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 64


 2005 0040 00000000 		.4byte	.LFB7
 2006 0044 2E000000 		.4byte	.LFE7
 2007 0048 00000000 		.4byte	.LFB8
 2008 004c 18000000 		.4byte	.LFE8
 2009 0050 00000000 		.4byte	.LFB9
 2010 0054 34000000 		.4byte	.LFE9
 2011 0058 00000000 		.4byte	.LFB10
 2012 005c 3A000000 		.4byte	.LFE10
 2013 0060 00000000 		.4byte	.LFB11
 2014 0064 44000000 		.4byte	.LFE11
 2015 0068 00000000 		.4byte	.LFB12
 2016 006c 38000000 		.4byte	.LFE12
 2017 0070 00000000 		.4byte	.LFB13
 2018 0074 4A000000 		.4byte	.LFE13
 2019 0078 00000000 		.4byte	.LFB14
 2020 007c 0A000000 		.4byte	.LFE14
 2021 0080 00000000 		.4byte	.LFB15
 2022 0084 C0000000 		.4byte	.LFE15
 2023 0088 00000000 		.4byte	.LFB16
 2024 008c 3C000000 		.4byte	.LFE16
 2025 0090 00000000 		.4byte	0x0
 2026 0094 00000000 		.4byte	0x0
 2027              		.section	.debug_str,"MS",%progbits,1
 2028              	.LASF6:
 2029 0000 6C6F6E67 		.ascii	"long long int\000"
 2029      206C6F6E 
 2029      6720696E 
 2029      7400
 2030              	.LASF19:
 2031 000e 55415254 		.ascii	"UART_WriteTxData\000"
 2031      5F577269 
 2031      74655478 
 2031      44617461 
 2031      00
 2032              	.LASF33:
 2033 001f 746D7053 		.ascii	"tmpStat\000"
 2033      74617400 
 2034              	.LASF35:
 2035 0027 55415254 		.ascii	"UART_SetTxAddressMode\000"
 2035      5F536574 
 2035      54784164 
 2035      64726573 
 2035      734D6F64 
 2036              	.LASF3:
 2037 003d 73686F72 		.ascii	"short unsigned int\000"
 2037      7420756E 
 2037      7369676E 
 2037      65642069 
 2037      6E7400
 2038              	.LASF42:
 2039 0050 55415254 		.ascii	"UART_initVar\000"
 2039      5F696E69 
 2039      74566172 
 2039      00
 2040              	.LASF25:
 2041 005d 73747269 		.ascii	"string\000"
 2041      6E6700
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 65


 2042              	.LASF37:
 2043 0064 474E5520 		.ascii	"GNU C 4.4.1\000"
 2043      4320342E 
 2043      342E3100 
 2044              	.LASF12:
 2045 0070 55415254 		.ascii	"UART_Enable\000"
 2045      5F456E61 
 2045      626C6500 
 2046              	.LASF36:
 2047 007c 61646472 		.ascii	"addressMode\000"
 2047      6573734D 
 2047      6F646500 
 2048              	.LASF11:
 2049 0088 55415254 		.ascii	"UART_Init\000"
 2049      5F496E69 
 2049      7400
 2050              	.LASF5:
 2051 0092 6C6F6E67 		.ascii	"long unsigned int\000"
 2051      20756E73 
 2051      69676E65 
 2051      6420696E 
 2051      7400
 2052              	.LASF39:
 2053 00a4 453A5C43 		.ascii	"E:\\ControllerKinect\\capController\\Receiver\\Rece"
 2053      6F6E7472 
 2053      6F6C6C65 
 2053      724B696E 
 2053      6563745C 
 2054 00d3 69766572 		.ascii	"iver.cydsn\000"
 2054      2E637964 
 2054      736E00
 2055              	.LASF40:
 2056 00de 75696E74 		.ascii	"uint8\000"
 2056      3800
 2057              	.LASF10:
 2058 00e4 55415254 		.ascii	"UART_Start\000"
 2058      5F537461 
 2058      727400
 2059              	.LASF26:
 2060 00ef 55415254 		.ascii	"UART_PutArray\000"
 2060      5F507574 
 2060      41727261 
 2060      7900
 2061              	.LASF27:
 2062 00fd 62797465 		.ascii	"byteCount\000"
 2062      436F756E 
 2062      7400
 2063              	.LASF14:
 2064 0107 656E6162 		.ascii	"enableInterrupts\000"
 2064      6C65496E 
 2064      74657272 
 2064      75707473 
 2064      00
 2065              	.LASF1:
 2066 0118 756E7369 		.ascii	"unsigned char\000"
 2066      676E6564 
 2066      20636861 
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 66


 2066      7200
 2067              	.LASF18:
 2068 0126 696E7453 		.ascii	"intSrc\000"
 2068      726300
 2069              	.LASF31:
 2070 012d 55415254 		.ascii	"UART_SendBreak\000"
 2070      5F53656E 
 2070      64427265 
 2070      616B00
 2071              	.LASF8:
 2072 013c 756E7369 		.ascii	"unsigned int\000"
 2072      676E6564 
 2072      20696E74 
 2072      00
 2073              	.LASF15:
 2074 0149 55415254 		.ascii	"UART_WriteControlRegister\000"
 2074      5F577269 
 2074      7465436F 
 2074      6E74726F 
 2074      6C526567 
 2075              	.LASF22:
 2076 0163 55415254 		.ascii	"UART_ReadTxStatus\000"
 2076      5F526561 
 2076      64547853 
 2076      74617475 
 2076      7300
 2077              	.LASF7:
 2078 0175 6C6F6E67 		.ascii	"long long unsigned int\000"
 2078      206C6F6E 
 2078      6720756E 
 2078      7369676E 
 2078      65642069 
 2079              	.LASF21:
 2080 018c 55415254 		.ascii	"UART_ReadControlRegister\000"
 2080      5F526561 
 2080      64436F6E 
 2080      74726F6C 
 2080      52656769 
 2081              	.LASF28:
 2082 01a5 55415254 		.ascii	"UART_PutCRLF\000"
 2082      5F507574 
 2082      43524C46 
 2082      00
 2083              	.LASF13:
 2084 01b2 55415254 		.ascii	"UART_Stop\000"
 2084      5F53746F 
 2084      7000
 2085              	.LASF16:
 2086 01bc 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 2086      5F536574 
 2086      5478496E 
 2086      74657272 
 2086      7570744D 
 2087              	.LASF23:
 2088 01d4 55415254 		.ascii	"UART_PutChar\000"
 2088      5F507574 
 2088      43686172 
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 67


 2088      00
 2089              	.LASF41:
 2090 01e1 55415254 		.ascii	"UART_GetTxBufferSize\000"
 2090      5F476574 
 2090      54784275 
 2090      66666572 
 2090      53697A65 
 2091              	.LASF20:
 2092 01f6 74784461 		.ascii	"txDataByte\000"
 2092      74614279 
 2092      746500
 2093              	.LASF34:
 2094 0201 74785F70 		.ascii	"tx_period\000"
 2094      6572696F 
 2094      6400
 2095              	.LASF9:
 2096 020b 63686172 		.ascii	"char\000"
 2096      00
 2097              	.LASF32:
 2098 0210 7265744D 		.ascii	"retMode\000"
 2098      6F646500 
 2099              	.LASF2:
 2100 0218 73686F72 		.ascii	"short int\000"
 2100      7420696E 
 2100      7400
 2101              	.LASF30:
 2102 0222 55415254 		.ascii	"UART_ClearTxBuffer\000"
 2102      5F436C65 
 2102      61725478 
 2102      42756666 
 2102      657200
 2103              	.LASF17:
 2104 0235 636F6E74 		.ascii	"control\000"
 2104      726F6C00 
 2105              	.LASF4:
 2106 023d 6C6F6E67 		.ascii	"long int\000"
 2106      20696E74 
 2106      00
 2107              	.LASF0:
 2108 0246 7369676E 		.ascii	"signed char\000"
 2108      65642063 
 2108      68617200 
 2109              	.LASF24:
 2110 0252 55415254 		.ascii	"UART_PutString\000"
 2110      5F507574 
 2110      53747269 
 2110      6E6700
 2111              	.LASF29:
 2112 0261 73697A65 		.ascii	"size\000"
 2112      00
 2113              	.LASF38:
 2114 0266 2E2F4765 		.ascii	"./Generated_Source/PSoC5/UART.c\000"
 2114      6E657261 
 2114      7465645F 
 2114      536F7572 
 2114      63652F50 
 2115              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
ARM GAS  C:\Users\CHARLI~1\AppData\Local\Temp\ccl7kX1M.s 			page 68


