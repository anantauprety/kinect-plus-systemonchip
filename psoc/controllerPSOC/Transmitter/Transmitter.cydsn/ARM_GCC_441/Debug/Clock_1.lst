ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"Clock_1.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 54010000 		.text
  20      02005F00 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.Clock_1_Start,"ax",%progbits
  24              		.align	2
  25              		.global	Clock_1_Start
  26              		.thumb
  27              		.thumb_func
  28              		.type	Clock_1_Start, %function
  29              	Clock_1_Start:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC5\\Clock_1.c"
   1:.\Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Clock_1.c **** * File Name: Clock_1.c
   3:.\Generated_Source\PSoC5/Clock_1.c **** * Version 1.50
   4:.\Generated_Source\PSoC5/Clock_1.c **** *
   5:.\Generated_Source\PSoC5/Clock_1.c **** *  Description:
   6:.\Generated_Source\PSoC5/Clock_1.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/Clock_1.c **** *
   8:.\Generated_Source\PSoC5/Clock_1.c **** *  Note:
   9:.\Generated_Source\PSoC5/Clock_1.c **** *
  10:.\Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/Clock_1.c **** * Copyright 2008-2010, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/Clock_1.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/Clock_1.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/Clock_1.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************/
  16:.\Generated_Source\PSoC5/Clock_1.c **** 
  17:.\Generated_Source\PSoC5/Clock_1.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/Clock_1.c **** #include "Clock_1.h"
  19:.\Generated_Source\PSoC5/Clock_1.c **** 
  20:.\Generated_Source\PSoC5/Clock_1.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 2


  23:.\Generated_Source\PSoC5/Clock_1.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/Clock_1.c **** 
  27:.\Generated_Source\PSoC5/Clock_1.c **** #define HAS_CLKDIST_LD_DISABLE   ((CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC3 &&\
  28:.\Generated_Source\PSoC5/Clock_1.c ****                                    CYDEV_CHIP_REVISION_USED >= CYDEV_CHIP_REVISION_3A_ES3) ||\
  29:.\Generated_Source\PSoC5/Clock_1.c ****                                   (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC5 &&\
  30:.\Generated_Source\PSoC5/Clock_1.c ****                                    CYDEV_CHIP_REVISION_USED >= CYDEV_CHIP_REVISION_5A_ES1))
  31:.\Generated_Source\PSoC5/Clock_1.c **** 
  32:.\Generated_Source\PSoC5/Clock_1.c **** 
  33:.\Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
  34:.\Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_Start
  35:.\Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  36:.\Generated_Source\PSoC5/Clock_1.c **** * Summary:
  37:.\Generated_Source\PSoC5/Clock_1.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  38:.\Generated_Source\PSoC5/Clock_1.c **** *  "Start on Reset" option is enabled in the DWR.
  39:.\Generated_Source\PSoC5/Clock_1.c **** *
  40:.\Generated_Source\PSoC5/Clock_1.c **** * Parameters:
  41:.\Generated_Source\PSoC5/Clock_1.c **** *  void
  42:.\Generated_Source\PSoC5/Clock_1.c **** *
  43:.\Generated_Source\PSoC5/Clock_1.c **** * Returns:
  44:.\Generated_Source\PSoC5/Clock_1.c **** *  void
  45:.\Generated_Source\PSoC5/Clock_1.c **** *
  46:.\Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
  47:.\Generated_Source\PSoC5/Clock_1.c **** void Clock_1_Start(void) 
  48:.\Generated_Source\PSoC5/Clock_1.c **** {
  32              		.loc 1 48 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 4
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_offset 7, -4
  42              	.LCFI1:
  43              		.cfi_def_cfa_register 7
  49:.\Generated_Source\PSoC5/Clock_1.c ****     /* Set the bit to enable the clock. */
  50:.\Generated_Source\PSoC5/Clock_1.c ****     Clock_1_CLKEN |= Clock_1_CLKEN_MASK;
  44              		.loc 1 50 0
  45 0004 44F2A233 		movw	r3, #:lower16:1073759138
  46 0008 C4F20003 		movt	r3, #:upper16:1073759138
  47 000c 44F2A232 		movw	r2, #:lower16:1073759138
  48 0010 C4F20002 		movt	r2, #:upper16:1073759138
  49 0014 1278     		ldrb	r2, [r2, #0]
  50 0016 D2B2     		uxtb	r2, r2
  51 0018 42F00202 		orr	r2, r2, #2
  52 001c D2B2     		uxtb	r2, r2
  53 001e 1A70     		strb	r2, [r3, #0]
  51:.\Generated_Source\PSoC5/Clock_1.c **** }
  54              		.loc 1 51 0
  55 0020 BD46     		mov	sp, r7
  56 0022 80BC     		pop	{r7}
  57 0024 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE0:
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 3


  60              		.size	Clock_1_Start, .-Clock_1_Start
  61 0026 00BF     		.section	.text.Clock_1_Stop,"ax",%progbits
  62              		.align	2
  63              		.global	Clock_1_Stop
  64              		.thumb
  65              		.thumb_func
  66              		.type	Clock_1_Stop, %function
  67              	Clock_1_Stop:
  68              	.LFB1:
  52:.\Generated_Source\PSoC5/Clock_1.c **** 
  53:.\Generated_Source\PSoC5/Clock_1.c **** 
  54:.\Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
  55:.\Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_Stop
  56:.\Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  57:.\Generated_Source\PSoC5/Clock_1.c **** * Summary:
  58:.\Generated_Source\PSoC5/Clock_1.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/Clock_1.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/Clock_1.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/Clock_1.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/Clock_1.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/Clock_1.c **** *
  64:.\Generated_Source\PSoC5/Clock_1.c **** * Parameters:
  65:.\Generated_Source\PSoC5/Clock_1.c **** *  void
  66:.\Generated_Source\PSoC5/Clock_1.c **** *
  67:.\Generated_Source\PSoC5/Clock_1.c **** * Returns:
  68:.\Generated_Source\PSoC5/Clock_1.c **** *  void
  69:.\Generated_Source\PSoC5/Clock_1.c **** *
  70:.\Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/Clock_1.c **** void Clock_1_Stop(void) 
  72:.\Generated_Source\PSoC5/Clock_1.c **** {
  69              		.loc 1 72 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74 0000 80B4     		push	{r7}
  75              	.LCFI2:
  76              		.cfi_def_cfa_offset 4
  77 0002 00AF     		add	r7, sp, #0
  78              		.cfi_offset 7, -4
  79              	.LCFI3:
  80              		.cfi_def_cfa_register 7
  73:.\Generated_Source\PSoC5/Clock_1.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/Clock_1.c ****     Clock_1_CLKEN &= ~Clock_1_CLKEN_MASK;
  81              		.loc 1 74 0
  82 0004 44F2A233 		movw	r3, #:lower16:1073759138
  83 0008 C4F20003 		movt	r3, #:upper16:1073759138
  84 000c 44F2A232 		movw	r2, #:lower16:1073759138
  85 0010 C4F20002 		movt	r2, #:upper16:1073759138
  86 0014 1278     		ldrb	r2, [r2, #0]
  87 0016 D2B2     		uxtb	r2, r2
  88 0018 02F0FD02 		and	r2, r2, #253
  89 001c 1A70     		strb	r2, [r3, #0]
  75:.\Generated_Source\PSoC5/Clock_1.c **** }
  90              		.loc 1 75 0
  91 001e BD46     		mov	sp, r7
  92 0020 80BC     		pop	{r7}
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 4


  93 0022 7047     		bx	lr
  94              		.cfi_endproc
  95              	.LFE1:
  96              		.size	Clock_1_Stop, .-Clock_1_Stop
  97              		.section	.text.Clock_1_StandbyPower,"ax",%progbits
  98              		.align	2
  99              		.global	Clock_1_StandbyPower
 100              		.thumb
 101              		.thumb_func
 102              		.type	Clock_1_StandbyPower, %function
 103              	Clock_1_StandbyPower:
 104              	.LFB2:
  76:.\Generated_Source\PSoC5/Clock_1.c **** 
  77:.\Generated_Source\PSoC5/Clock_1.c **** 
  78:.\Generated_Source\PSoC5/Clock_1.c **** #if(!(CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC3 && \
  79:.\Generated_Source\PSoC5/Clock_1.c ****     CYDEV_CHIP_REVISION_USED == CYDEV_CHIP_REVISION_3A_ES2) && \
  80:.\Generated_Source\PSoC5/Clock_1.c **** 	!(CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC5 && \
  81:.\Generated_Source\PSoC5/Clock_1.c **** 	CYDEV_CHIP_REVISION_USED == CYDEV_CHIP_REVISION_5A_ES1))
  82:.\Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_StopBlock
  84:.\Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/Clock_1.c **** * Summary:
  86:.\Generated_Source\PSoC5/Clock_1.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  87:.\Generated_Source\PSoC5/Clock_1.c **** *  returning. This ensures that the clock is never truncated (high part of the
  88:.\Generated_Source\PSoC5/Clock_1.c **** *  cycle will terminate before the clock is disabled and the API returns).
  89:.\Generated_Source\PSoC5/Clock_1.c **** *  Note that the source clock must be running or this API will never return as
  90:.\Generated_Source\PSoC5/Clock_1.c **** *  a stopped clock cannot be disabled.
  91:.\Generated_Source\PSoC5/Clock_1.c **** *
  92:.\Generated_Source\PSoC5/Clock_1.c **** * Parameters:
  93:.\Generated_Source\PSoC5/Clock_1.c **** *  void
  94:.\Generated_Source\PSoC5/Clock_1.c **** *
  95:.\Generated_Source\PSoC5/Clock_1.c **** * Returns:
  96:.\Generated_Source\PSoC5/Clock_1.c **** *  void
  97:.\Generated_Source\PSoC5/Clock_1.c **** *
  98:.\Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
  99:.\Generated_Source\PSoC5/Clock_1.c **** void Clock_1_StopBlock(void) 
 100:.\Generated_Source\PSoC5/Clock_1.c **** {
 101:.\Generated_Source\PSoC5/Clock_1.c ****     if (Clock_1_CLKEN & Clock_1_CLKEN_MASK)
 102:.\Generated_Source\PSoC5/Clock_1.c ****     {
 103:.\Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
 104:.\Generated_Source\PSoC5/Clock_1.c ****         uint16 oldDivider;
 105:.\Generated_Source\PSoC5/Clock_1.c **** 
 106:.\Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_LD = 0;
 107:.\Generated_Source\PSoC5/Clock_1.c **** 
 108:.\Generated_Source\PSoC5/Clock_1.c ****         /* Clear all the mask bits except ours. */
 109:.\Generated_Source\PSoC5/Clock_1.c **** #if defined(Clock_1__CFG3)
 110:.\Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_AMASK = Clock_1_CLKEN_MASK;
 111:.\Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_DMASK = 0x00u;
 112:.\Generated_Source\PSoC5/Clock_1.c **** #else
 113:.\Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_DMASK = Clock_1_CLKEN_MASK;
 114:.\Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_AMASK = 0x00u;
 115:.\Generated_Source\PSoC5/Clock_1.c **** #endif
 116:.\Generated_Source\PSoC5/Clock_1.c **** 
 117:.\Generated_Source\PSoC5/Clock_1.c ****         /* Clear mask of bus clock. */
 118:.\Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_BCFG2 &= ~BCFG2_MASK;
 119:.\Generated_Source\PSoC5/Clock_1.c **** 
 120:.\Generated_Source\PSoC5/Clock_1.c ****         oldDivider = CY_GET_REG16(Clock_1_DIV_PTR);
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 5


 121:.\Generated_Source\PSoC5/Clock_1.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, 0x0000u);
 122:.\Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 123:.\Generated_Source\PSoC5/Clock_1.c **** 
 124:.\Generated_Source\PSoC5/Clock_1.c ****         /* Wait for clock to be disabled */
 125:.\Generated_Source\PSoC5/Clock_1.c ****         while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 126:.\Generated_Source\PSoC5/Clock_1.c **** #endif
 127:.\Generated_Source\PSoC5/Clock_1.c **** 
 128:.\Generated_Source\PSoC5/Clock_1.c ****         /* Clear the bit to disable the clock. */
 129:.\Generated_Source\PSoC5/Clock_1.c ****         Clock_1_CLKEN &= ~Clock_1_CLKEN_MASK;
 130:.\Generated_Source\PSoC5/Clock_1.c **** 
 131:.\Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
 132:.\Generated_Source\PSoC5/Clock_1.c ****         /* Clear the disable bit */
 133:.\Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_LD = 0x00u;
 134:.\Generated_Source\PSoC5/Clock_1.c ****         CY_SET_REG16(Clock_1_DIV_PTR, oldDivider);
 135:.\Generated_Source\PSoC5/Clock_1.c **** #endif
 136:.\Generated_Source\PSoC5/Clock_1.c ****     }
 137:.\Generated_Source\PSoC5/Clock_1.c **** }
 138:.\Generated_Source\PSoC5/Clock_1.c **** #endif
 139:.\Generated_Source\PSoC5/Clock_1.c **** 
 140:.\Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 141:.\Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_StandbyPower
 142:.\Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 143:.\Generated_Source\PSoC5/Clock_1.c **** * Summary:
 144:.\Generated_Source\PSoC5/Clock_1.c **** *  Sets whether the clock is active in standby mode.
 145:.\Generated_Source\PSoC5/Clock_1.c **** *
 146:.\Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 147:.\Generated_Source\PSoC5/Clock_1.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 148:.\Generated_Source\PSoC5/Clock_1.c **** *
 149:.\Generated_Source\PSoC5/Clock_1.c **** * Returns:
 150:.\Generated_Source\PSoC5/Clock_1.c **** *  void
 151:.\Generated_Source\PSoC5/Clock_1.c **** *
 152:.\Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 153:.\Generated_Source\PSoC5/Clock_1.c **** void Clock_1_StandbyPower(uint8 state) 
 154:.\Generated_Source\PSoC5/Clock_1.c **** {
 105              		.loc 1 154 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 8
 108              		@ frame_needed = 1, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110 0000 80B4     		push	{r7}
 111              	.LCFI4:
 112              		.cfi_def_cfa_offset 4
 113 0002 83B0     		sub	sp, sp, #12
 114              	.LCFI5:
 115              		.cfi_def_cfa_offset 16
 116 0004 00AF     		add	r7, sp, #0
 117              		.cfi_offset 7, -4
 118              	.LCFI6:
 119              		.cfi_def_cfa_register 7
 120 0006 0346     		mov	r3, r0
 121 0008 FB71     		strb	r3, [r7, #7]
 155:.\Generated_Source\PSoC5/Clock_1.c ****     if(state == 0)
 122              		.loc 1 155 0
 123 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 124 000c 002B     		cmp	r3, #0
 125 000e 0DD1     		bne	.L6
 156:.\Generated_Source\PSoC5/Clock_1.c ****     {
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 6


 157:.\Generated_Source\PSoC5/Clock_1.c ****         Clock_1_CLKSTBY &= ~Clock_1_CLKSTBY_MASK;
 126              		.loc 1 157 0
 127 0010 44F2B233 		movw	r3, #:lower16:1073759154
 128 0014 C4F20003 		movt	r3, #:upper16:1073759154
 129 0018 44F2B232 		movw	r2, #:lower16:1073759154
 130 001c C4F20002 		movt	r2, #:upper16:1073759154
 131 0020 1278     		ldrb	r2, [r2, #0]
 132 0022 D2B2     		uxtb	r2, r2
 133 0024 02F0FD02 		and	r2, r2, #253
 134 0028 1A70     		strb	r2, [r3, #0]
 135 002a 0DE0     		b	.L8
 136              	.L6:
 158:.\Generated_Source\PSoC5/Clock_1.c ****     }
 159:.\Generated_Source\PSoC5/Clock_1.c ****     else
 160:.\Generated_Source\PSoC5/Clock_1.c ****     {
 161:.\Generated_Source\PSoC5/Clock_1.c ****         Clock_1_CLKSTBY |= Clock_1_CLKSTBY_MASK;
 137              		.loc 1 161 0
 138 002c 44F2B233 		movw	r3, #:lower16:1073759154
 139 0030 C4F20003 		movt	r3, #:upper16:1073759154
 140 0034 44F2B232 		movw	r2, #:lower16:1073759154
 141 0038 C4F20002 		movt	r2, #:upper16:1073759154
 142 003c 1278     		ldrb	r2, [r2, #0]
 143 003e D2B2     		uxtb	r2, r2
 144 0040 42F00202 		orr	r2, r2, #2
 145 0044 D2B2     		uxtb	r2, r2
 146 0046 1A70     		strb	r2, [r3, #0]
 147              	.L8:
 162:.\Generated_Source\PSoC5/Clock_1.c ****     }
 163:.\Generated_Source\PSoC5/Clock_1.c **** }
 148              		.loc 1 163 0
 149 0048 07F10C07 		add	r7, r7, #12
 150 004c BD46     		mov	sp, r7
 151 004e 80BC     		pop	{r7}
 152 0050 7047     		bx	lr
 153              		.cfi_endproc
 154              	.LFE2:
 155              		.size	Clock_1_StandbyPower, .-Clock_1_StandbyPower
 156 0052 00BF     		.section	.text.Clock_1_SetDividerRegister,"ax",%progbits
 157              		.align	2
 158              		.global	Clock_1_SetDividerRegister
 159              		.thumb
 160              		.thumb_func
 161              		.type	Clock_1_SetDividerRegister, %function
 162              	Clock_1_SetDividerRegister:
 163              	.LFB3:
 164:.\Generated_Source\PSoC5/Clock_1.c **** 
 165:.\Generated_Source\PSoC5/Clock_1.c **** 
 166:.\Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_SetDividerRegister
 168:.\Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 169:.\Generated_Source\PSoC5/Clock_1.c **** * Summary:
 170:.\Generated_Source\PSoC5/Clock_1.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 171:.\Generated_Source\PSoC5/Clock_1.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 172:.\Generated_Source\PSoC5/Clock_1.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 173:.\Generated_Source\PSoC5/Clock_1.c **** *  SetDividerRegister is called, then the source clock must be running.
 174:.\Generated_Source\PSoC5/Clock_1.c **** *
 175:.\Generated_Source\PSoC5/Clock_1.c **** * Parameters:
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 7


 176:.\Generated_Source\PSoC5/Clock_1.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 177:.\Generated_Source\PSoC5/Clock_1.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 178:.\Generated_Source\PSoC5/Clock_1.c **** *    to divide the clock by 2, this parameter should be set to 1.
 179:.\Generated_Source\PSoC5/Clock_1.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 180:.\Generated_Source\PSoC5/Clock_1.c **** *   will be truncated and the new divide value will take effect immediately. If
 181:.\Generated_Source\PSoC5/Clock_1.c **** *   zero, the new divide value will take effect at the end of the current clock
 182:.\Generated_Source\PSoC5/Clock_1.c **** *   cycle.
 183:.\Generated_Source\PSoC5/Clock_1.c **** *
 184:.\Generated_Source\PSoC5/Clock_1.c **** * Returns:
 185:.\Generated_Source\PSoC5/Clock_1.c **** *  void
 186:.\Generated_Source\PSoC5/Clock_1.c **** *
 187:.\Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 188:.\Generated_Source\PSoC5/Clock_1.c **** void Clock_1_SetDividerRegister(uint16 clkDivider, uint8 restart) 
 189:.\Generated_Source\PSoC5/Clock_1.c **** {
 164              		.loc 1 189 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 16
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168 0000 80B5     		push	{r7, lr}
 169              	.LCFI7:
 170              		.cfi_def_cfa_offset 8
 171 0002 84B0     		sub	sp, sp, #16
 172              	.LCFI8:
 173              		.cfi_def_cfa_offset 24
 174 0004 00AF     		add	r7, sp, #0
 175              		.cfi_offset 14, -4
 176              		.cfi_offset 7, -8
 177              	.LCFI9:
 178              		.cfi_def_cfa_register 7
 179 0006 0246     		mov	r2, r0
 180 0008 0B46     		mov	r3, r1
 181 000a FA80     		strh	r2, [r7, #6]	@ movhi
 182 000c 7B71     		strb	r3, [r7, #5]
 190:.\Generated_Source\PSoC5/Clock_1.c ****     uint8 enabled;
 191:.\Generated_Source\PSoC5/Clock_1.c **** 
 192:.\Generated_Source\PSoC5/Clock_1.c ****     uint8 currSrc = Clock_1_GetSourceRegister();
 183              		.loc 1 192 0
 184 000e FFF7FEFF 		bl	Clock_1_GetSourceRegister
 185 0012 0346     		mov	r3, r0
 186 0014 7B73     		strb	r3, [r7, #13]
 193:.\Generated_Source\PSoC5/Clock_1.c ****     uint16 oldDivider = Clock_1_GetDividerRegister();
 187              		.loc 1 193 0
 188 0016 FFF7FEFF 		bl	Clock_1_GetDividerRegister
 189 001a 0346     		mov	r3, r0
 190 001c FB81     		strh	r3, [r7, #14]	@ movhi
 194:.\Generated_Source\PSoC5/Clock_1.c **** 
 195:.\Generated_Source\PSoC5/Clock_1.c ****     if (clkDivider != oldDivider)
 191              		.loc 1 195 0
 192 001e FA88     		ldrh	r2, [r7, #6]
 193 0020 FB89     		ldrh	r3, [r7, #14]
 194 0022 9A42     		cmp	r2, r3
 195 0024 00F0D280 		beq	.L22
 196:.\Generated_Source\PSoC5/Clock_1.c ****     {
 197:.\Generated_Source\PSoC5/Clock_1.c ****         enabled = Clock_1_CLKEN & Clock_1_CLKEN_MASK;
 196              		.loc 1 197 0
 197 0028 44F2A233 		movw	r3, #:lower16:1073759138
 198 002c C4F20003 		movt	r3, #:upper16:1073759138
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 8


 199 0030 1B78     		ldrb	r3, [r3, #0]
 200 0032 DBB2     		uxtb	r3, r3
 201 0034 03F00203 		and	r3, r3, #2
 202 0038 3B73     		strb	r3, [r7, #12]
 198:.\Generated_Source\PSoC5/Clock_1.c **** 
 199:.\Generated_Source\PSoC5/Clock_1.c ****         if (currSrc == CYCLK_SRC_SEL_CLK_SYNC_D && (oldDivider == 0 || clkDivider == 0))
 203              		.loc 1 199 0
 204 003a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 205 003c 002B     		cmp	r3, #0
 206 003e 35D1     		bne	.L11
 207 0040 FB89     		ldrh	r3, [r7, #14]
 208 0042 002B     		cmp	r3, #0
 209 0044 02D0     		beq	.L12
 210 0046 FB88     		ldrh	r3, [r7, #6]
 211 0048 002B     		cmp	r3, #0
 212 004a 2FD1     		bne	.L11
 213              	.L12:
 200:.\Generated_Source\PSoC5/Clock_1.c ****         {
 201:.\Generated_Source\PSoC5/Clock_1.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 202:.\Generated_Source\PSoC5/Clock_1.c ****             if (oldDivider == 0 && clkDivider != 0)
 214              		.loc 1 202 0
 215 004c FB89     		ldrh	r3, [r7, #14]
 216 004e 002B     		cmp	r3, #0
 217 0050 17D1     		bne	.L13
 218 0052 FB88     		ldrh	r3, [r7, #6]
 219 0054 002B     		cmp	r3, #0
 220 0056 14D0     		beq	.L13
 203:.\Generated_Source\PSoC5/Clock_1.c ****             {
 204:.\Generated_Source\PSoC5/Clock_1.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 205:.\Generated_Source\PSoC5/Clock_1.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 206:.\Generated_Source\PSoC5/Clock_1.c ****                 /* divider is ignored while SSS is set.                                     */
 207:.\Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(Clock_1_DIV_PTR, clkDivider);
 221              		.loc 1 207 0
 222 0058 44F28403 		movw	r3, #:lower16:1073758340
 223 005c C4F20003 		movt	r3, #:upper16:1073758340
 224 0060 FA88     		ldrh	r2, [r7, #6]	@ movhi
 225 0062 1A80     		strh	r2, [r3, #0]	@ movhi
 208:.\Generated_Source\PSoC5/Clock_1.c ****                 Clock_1_MOD_SRC &= ~CYCLK_SSS;
 226              		.loc 1 208 0
 227 0064 44F28603 		movw	r3, #:lower16:1073758342
 228 0068 C4F20003 		movt	r3, #:upper16:1073758342
 229 006c 44F28602 		movw	r2, #:lower16:1073758342
 230 0070 C4F20002 		movt	r2, #:upper16:1073758342
 231 0074 1278     		ldrb	r2, [r2, #0]
 232 0076 D2B2     		uxtb	r2, r2
 233 0078 02F0BF02 		and	r2, r2, #191
 234 007c 1A70     		strb	r2, [r3, #0]
 235              		.loc 1 202 0
 236 007e 00BF     		nop
 237              		.loc 1 199 0
 238 0080 A4E0     		b	.L22
 239              	.L13:
 209:.\Generated_Source\PSoC5/Clock_1.c ****             }
 210:.\Generated_Source\PSoC5/Clock_1.c ****             else
 211:.\Generated_Source\PSoC5/Clock_1.c ****             {
 212:.\Generated_Source\PSoC5/Clock_1.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 213:.\Generated_Source\PSoC5/Clock_1.c ****                 /* it without bothering with the shadow load.                               */
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 9


 214:.\Generated_Source\PSoC5/Clock_1.c ****                 Clock_1_MOD_SRC |= CYCLK_SSS;
 240              		.loc 1 214 0
 241 0082 44F28603 		movw	r3, #:lower16:1073758342
 242 0086 C4F20003 		movt	r3, #:upper16:1073758342
 243 008a 44F28602 		movw	r2, #:lower16:1073758342
 244 008e C4F20002 		movt	r2, #:upper16:1073758342
 245 0092 1278     		ldrb	r2, [r2, #0]
 246 0094 D2B2     		uxtb	r2, r2
 247 0096 42F04002 		orr	r2, r2, #64
 248 009a D2B2     		uxtb	r2, r2
 249 009c 1A70     		strb	r2, [r3, #0]
 215:.\Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(Clock_1_DIV_PTR, clkDivider);
 250              		.loc 1 215 0
 251 009e 44F28403 		movw	r3, #:lower16:1073758340
 252 00a2 C4F20003 		movt	r3, #:upper16:1073758340
 253 00a6 FA88     		ldrh	r2, [r7, #6]	@ movhi
 254 00a8 1A80     		strh	r2, [r3, #0]	@ movhi
 255              		.loc 1 199 0
 256 00aa 8FE0     		b	.L22
 257              	.L11:
 216:.\Generated_Source\PSoC5/Clock_1.c ****             }
 217:.\Generated_Source\PSoC5/Clock_1.c ****         }
 218:.\Generated_Source\PSoC5/Clock_1.c ****         else
 219:.\Generated_Source\PSoC5/Clock_1.c ****         {
 220:.\Generated_Source\PSoC5/Clock_1.c ****             if (enabled)
 258              		.loc 1 220 0
 259 00ac 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 260 00ae 002B     		cmp	r3, #0
 261 00b0 4ED0     		beq	.L15
 221:.\Generated_Source\PSoC5/Clock_1.c ****             {
 222:.\Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_LD = 0x00u;
 262              		.loc 1 222 0
 263 00b2 44F20103 		movw	r3, #:lower16:1073758209
 264 00b6 C4F20003 		movt	r3, #:upper16:1073758209
 265 00ba 4FF00002 		mov	r2, #0
 266 00be 1A70     		strb	r2, [r3, #0]
 223:.\Generated_Source\PSoC5/Clock_1.c **** 
 224:.\Generated_Source\PSoC5/Clock_1.c ****                 /* Clear all the mask bits except ours. */
 225:.\Generated_Source\PSoC5/Clock_1.c **** #if defined(Clock_1__CFG3)
 226:.\Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_AMASK = Clock_1_CLKEN_MASK;
 227:.\Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_DMASK = 0x00u;
 228:.\Generated_Source\PSoC5/Clock_1.c **** #else
 229:.\Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_DMASK = Clock_1_CLKEN_MASK;
 267              		.loc 1 229 0
 268 00c0 44F21003 		movw	r3, #:lower16:1073758224
 269 00c4 C4F20003 		movt	r3, #:upper16:1073758224
 270 00c8 4FF00202 		mov	r2, #2
 271 00cc 1A70     		strb	r2, [r3, #0]
 230:.\Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_AMASK = 0x00u;
 272              		.loc 1 230 0
 273 00ce 44F21403 		movw	r3, #:lower16:1073758228
 274 00d2 C4F20003 		movt	r3, #:upper16:1073758228
 275 00d6 4FF00002 		mov	r2, #0
 276 00da 1A70     		strb	r2, [r3, #0]
 231:.\Generated_Source\PSoC5/Clock_1.c **** #endif
 232:.\Generated_Source\PSoC5/Clock_1.c ****                 /* Clear mask of bus clock. */
 233:.\Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_BCFG2 &= ~BCFG2_MASK;
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 10


 277              		.loc 1 233 0
 278 00dc 44F20803 		movw	r3, #:lower16:1073758216
 279 00e0 C4F20003 		movt	r3, #:upper16:1073758216
 280 00e4 44F20802 		movw	r2, #:lower16:1073758216
 281 00e8 C4F20002 		movt	r2, #:upper16:1073758216
 282 00ec 1278     		ldrb	r2, [r2, #0]
 283 00ee D2B2     		uxtb	r2, r2
 284 00f0 02F07F02 		and	r2, r2, #127
 285 00f4 1A70     		strb	r2, [r3, #0]
 234:.\Generated_Source\PSoC5/Clock_1.c **** 
 235:.\Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
 236:.\Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, 0x0000u);
 286              		.loc 1 236 0
 287 00f6 44F20203 		movw	r3, #:lower16:1073758210
 288 00fa C4F20003 		movt	r3, #:upper16:1073758210
 289 00fe 4FF00002 		mov	r2, #0
 290 0102 1A80     		strh	r2, [r3, #0]	@ movhi
 237:.\Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 291              		.loc 1 237 0
 292 0104 44F20103 		movw	r3, #:lower16:1073758209
 293 0108 C4F20003 		movt	r3, #:upper16:1073758209
 294 010c 4FF00702 		mov	r2, #7
 295 0110 1A70     		strb	r2, [r3, #0]
 296              	.L16:
 238:.\Generated_Source\PSoC5/Clock_1.c **** 
 239:.\Generated_Source\PSoC5/Clock_1.c ****                 /* Wait for clock to be disabled */
 240:.\Generated_Source\PSoC5/Clock_1.c ****                 while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 297              		.loc 1 240 0
 298 0112 44F20103 		movw	r3, #:lower16:1073758209
 299 0116 C4F20003 		movt	r3, #:upper16:1073758209
 300 011a 1B78     		ldrb	r3, [r3, #0]
 301 011c DBB2     		uxtb	r3, r3
 302 011e 03F00103 		and	r3, r3, #1
 303 0122 DBB2     		uxtb	r3, r3
 304 0124 002B     		cmp	r3, #0
 305 0126 F4D1     		bne	.L16
 241:.\Generated_Source\PSoC5/Clock_1.c **** #endif
 242:.\Generated_Source\PSoC5/Clock_1.c **** 
 243:.\Generated_Source\PSoC5/Clock_1.c ****                 Clock_1_CLKEN &= ~Clock_1_CLKEN_MASK;
 306              		.loc 1 243 0
 307 0128 44F2A233 		movw	r3, #:lower16:1073759138
 308 012c C4F20003 		movt	r3, #:upper16:1073759138
 309 0130 44F2A232 		movw	r2, #:lower16:1073759138
 310 0134 C4F20002 		movt	r2, #:upper16:1073759138
 311 0138 1278     		ldrb	r2, [r2, #0]
 312 013a D2B2     		uxtb	r2, r2
 313 013c 02F0FD02 		and	r2, r2, #253
 314 0140 1A70     		strb	r2, [r3, #0]
 244:.\Generated_Source\PSoC5/Clock_1.c **** 
 245:.\Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/Clock_1.c ****                 /* Clear the disable bit */
 247:.\Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_LD = 0x00u;
 315              		.loc 1 247 0
 316 0142 44F20103 		movw	r3, #:lower16:1073758209
 317 0146 C4F20003 		movt	r3, #:upper16:1073758209
 318 014a 4FF00002 		mov	r2, #0
 319 014e 1A70     		strb	r2, [r3, #0]
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 11


 320              	.L15:
 248:.\Generated_Source\PSoC5/Clock_1.c **** #endif
 249:.\Generated_Source\PSoC5/Clock_1.c ****             }
 250:.\Generated_Source\PSoC5/Clock_1.c **** 
 251:.\Generated_Source\PSoC5/Clock_1.c ****             /* Load divide value. */
 252:.\Generated_Source\PSoC5/Clock_1.c ****             if (Clock_1_CLKEN & Clock_1_CLKEN_MASK)
 321              		.loc 1 252 0
 322 0150 44F2A233 		movw	r3, #:lower16:1073759138
 323 0154 C4F20003 		movt	r3, #:upper16:1073759138
 324 0158 1B78     		ldrb	r3, [r3, #0]
 325 015a DBB2     		uxtb	r3, r3
 326 015c 03F00203 		and	r3, r3, #2
 327 0160 002B     		cmp	r3, #0
 328 0162 1ED0     		beq	.L17
 253:.\Generated_Source\PSoC5/Clock_1.c ****             {
 254:.\Generated_Source\PSoC5/Clock_1.c ****                 /* If the clock is still enabled, use the shadow registers */
 255:.\Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 329              		.loc 1 255 0
 330 0164 44F20203 		movw	r3, #:lower16:1073758210
 331 0168 C4F20003 		movt	r3, #:upper16:1073758210
 332 016c FA88     		ldrh	r2, [r7, #6]	@ movhi
 333 016e 1A80     		strh	r2, [r3, #0]	@ movhi
 256:.\Generated_Source\PSoC5/Clock_1.c **** 
 257:.\Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | (restart ? CYCLK_LD_SYNC_EN : 0x00u));
 334              		.loc 1 257 0
 335 0170 44F20103 		movw	r3, #:lower16:1073758209
 336 0174 C4F20003 		movt	r3, #:upper16:1073758209
 337 0178 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 338 017a 002A     		cmp	r2, #0
 339 017c 02D0     		beq	.L18
 340 017e 4FF00302 		mov	r2, #3
 341 0182 01E0     		b	.L19
 342              	.L18:
 343 0184 4FF00102 		mov	r2, #1
 344              	.L19:
 345 0188 1A70     		strb	r2, [r3, #0]
 346              	.L20:
 258:.\Generated_Source\PSoC5/Clock_1.c ****                 while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 347              		.loc 1 258 0
 348 018a 44F20103 		movw	r3, #:lower16:1073758209
 349 018e C4F20003 		movt	r3, #:upper16:1073758209
 350 0192 1B78     		ldrb	r3, [r3, #0]
 351 0194 DBB2     		uxtb	r3, r3
 352 0196 03F00103 		and	r3, r3, #1
 353 019a DBB2     		uxtb	r3, r3
 354 019c 002B     		cmp	r3, #0
 355 019e F4D1     		bne	.L20
 356 01a0 05E0     		b	.L21
 357              	.L17:
 259:.\Generated_Source\PSoC5/Clock_1.c ****             }
 260:.\Generated_Source\PSoC5/Clock_1.c ****             else
 261:.\Generated_Source\PSoC5/Clock_1.c ****             {
 262:.\Generated_Source\PSoC5/Clock_1.c ****                 /* If the clock is disabled, set the divider directly */
 263:.\Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(Clock_1_DIV_PTR, clkDivider);
 358              		.loc 1 263 0
 359 01a2 44F28403 		movw	r3, #:lower16:1073758340
 360 01a6 C4F20003 		movt	r3, #:upper16:1073758340
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 12


 361 01aa FA88     		ldrh	r2, [r7, #6]	@ movhi
 362 01ac 1A80     		strh	r2, [r3, #0]	@ movhi
 363              	.L21:
 264:.\Generated_Source\PSoC5/Clock_1.c ****             }
 265:.\Generated_Source\PSoC5/Clock_1.c **** 
 266:.\Generated_Source\PSoC5/Clock_1.c ****             Clock_1_CLKEN |= enabled;
 364              		.loc 1 266 0
 365 01ae 44F2A233 		movw	r3, #:lower16:1073759138
 366 01b2 C4F20003 		movt	r3, #:upper16:1073759138
 367 01b6 44F2A232 		movw	r2, #:lower16:1073759138
 368 01ba C4F20002 		movt	r2, #:upper16:1073759138
 369 01be 1278     		ldrb	r2, [r2, #0]
 370 01c0 D1B2     		uxtb	r1, r2
 371 01c2 3A7B     		ldrb	r2, [r7, #12]
 372 01c4 41EA0202 		orr	r2, r1, r2
 373 01c8 D2B2     		uxtb	r2, r2
 374 01ca 1A70     		strb	r2, [r3, #0]
 375              	.L22:
 267:.\Generated_Source\PSoC5/Clock_1.c ****         }
 268:.\Generated_Source\PSoC5/Clock_1.c ****     }
 269:.\Generated_Source\PSoC5/Clock_1.c **** }
 376              		.loc 1 269 0
 377 01cc 07F11007 		add	r7, r7, #16
 378 01d0 BD46     		mov	sp, r7
 379 01d2 80BD     		pop	{r7, pc}
 380              		.cfi_endproc
 381              	.LFE3:
 382              		.size	Clock_1_SetDividerRegister, .-Clock_1_SetDividerRegister
 383              		.section	.text.Clock_1_GetDividerRegister,"ax",%progbits
 384              		.align	2
 385              		.global	Clock_1_GetDividerRegister
 386              		.thumb
 387              		.thumb_func
 388              		.type	Clock_1_GetDividerRegister, %function
 389              	Clock_1_GetDividerRegister:
 390              	.LFB4:
 270:.\Generated_Source\PSoC5/Clock_1.c **** 
 271:.\Generated_Source\PSoC5/Clock_1.c **** 
 272:.\Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 273:.\Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_GetDividerRegister
 274:.\Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 275:.\Generated_Source\PSoC5/Clock_1.c **** * Summary:
 276:.\Generated_Source\PSoC5/Clock_1.c **** *  Gets the clock divider register value.
 277:.\Generated_Source\PSoC5/Clock_1.c **** *
 278:.\Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 279:.\Generated_Source\PSoC5/Clock_1.c **** *  void
 280:.\Generated_Source\PSoC5/Clock_1.c **** *
 281:.\Generated_Source\PSoC5/Clock_1.c **** * Returns:
 282:.\Generated_Source\PSoC5/Clock_1.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 283:.\Generated_Source\PSoC5/Clock_1.c **** *  divide by 2, the return value will be 1.
 284:.\Generated_Source\PSoC5/Clock_1.c **** *
 285:.\Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 286:.\Generated_Source\PSoC5/Clock_1.c **** uint16 Clock_1_GetDividerRegister(void) 
 287:.\Generated_Source\PSoC5/Clock_1.c **** {
 391              		.loc 1 287 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 13


 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396 0000 80B4     		push	{r7}
 397              	.LCFI10:
 398              		.cfi_def_cfa_offset 4
 399 0002 00AF     		add	r7, sp, #0
 400              		.cfi_offset 7, -4
 401              	.LCFI11:
 402              		.cfi_def_cfa_register 7
 288:.\Generated_Source\PSoC5/Clock_1.c ****     return CY_GET_REG16(Clock_1_DIV_PTR);
 403              		.loc 1 288 0
 404 0004 44F28403 		movw	r3, #:lower16:1073758340
 405 0008 C4F20003 		movt	r3, #:upper16:1073758340
 406 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 407 000e 9BB2     		uxth	r3, r3
 289:.\Generated_Source\PSoC5/Clock_1.c **** }
 408              		.loc 1 289 0
 409 0010 1846     		mov	r0, r3
 410 0012 BD46     		mov	sp, r7
 411 0014 80BC     		pop	{r7}
 412 0016 7047     		bx	lr
 413              		.cfi_endproc
 414              	.LFE4:
 415              		.size	Clock_1_GetDividerRegister, .-Clock_1_GetDividerRegister
 416              		.section	.text.Clock_1_SetModeRegister,"ax",%progbits
 417              		.align	2
 418              		.global	Clock_1_SetModeRegister
 419              		.thumb
 420              		.thumb_func
 421              		.type	Clock_1_SetModeRegister, %function
 422              	Clock_1_SetModeRegister:
 423              	.LFB5:
 290:.\Generated_Source\PSoC5/Clock_1.c **** 
 291:.\Generated_Source\PSoC5/Clock_1.c **** 
 292:.\Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 293:.\Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_SetModeRegister
 294:.\Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 295:.\Generated_Source\PSoC5/Clock_1.c **** * Summary:
 296:.\Generated_Source\PSoC5/Clock_1.c **** *  Sets flags that control the operating mode of the clock. This function only
 297:.\Generated_Source\PSoC5/Clock_1.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 298:.\Generated_Source\PSoC5/Clock_1.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 299:.\Generated_Source\PSoC5/Clock_1.c **** *  disabled before changing the mode.
 300:.\Generated_Source\PSoC5/Clock_1.c **** *
 301:.\Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 302:.\Generated_Source\PSoC5/Clock_1.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 303:.\Generated_Source\PSoC5/Clock_1.c **** *   clkMode should be a set of the following optional bits or'ed together.
 304:.\Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 305:.\Generated_Source\PSoC5/Clock_1.c **** *                 occur when the divider count reaches half of the divide
 306:.\Generated_Source\PSoC5/Clock_1.c **** *                 value.
 307:.\Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 308:.\Generated_Source\PSoC5/Clock_1.c **** *                 is asserted for approximately half of its period. When
 309:.\Generated_Source\PSoC5/Clock_1.c **** *                 disabled, the output clock is asserted for one period of the
 310:.\Generated_Source\PSoC5/Clock_1.c **** *                 source clock.
 311:.\Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 312:.\Generated_Source\PSoC5/Clock_1.c **** *                 be enabled for all synchronous clocks.
 313:.\Generated_Source\PSoC5/Clock_1.c **** *   See the Technical Reference Manual for details about setting the mode of
 314:.\Generated_Source\PSoC5/Clock_1.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 14


 315:.\Generated_Source\PSoC5/Clock_1.c **** *
 316:.\Generated_Source\PSoC5/Clock_1.c **** * Returns:
 317:.\Generated_Source\PSoC5/Clock_1.c **** *  void
 318:.\Generated_Source\PSoC5/Clock_1.c **** *
 319:.\Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC5/Clock_1.c **** void Clock_1_SetModeRegister(uint8 clkMode) 
 321:.\Generated_Source\PSoC5/Clock_1.c **** {
 424              		.loc 1 321 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 8
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428              		@ link register save eliminated.
 429 0000 80B4     		push	{r7}
 430              	.LCFI12:
 431              		.cfi_def_cfa_offset 4
 432 0002 83B0     		sub	sp, sp, #12
 433              	.LCFI13:
 434              		.cfi_def_cfa_offset 16
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_offset 7, -4
 437              	.LCFI14:
 438              		.cfi_def_cfa_register 7
 439 0006 0346     		mov	r3, r0
 440 0008 FB71     		strb	r3, [r7, #7]
 322:.\Generated_Source\PSoC5/Clock_1.c ****     Clock_1_MOD_SRC |= clkMode & Clock_1_MODE_MASK;
 441              		.loc 1 322 0
 442 000a 44F28603 		movw	r3, #:lower16:1073758342
 443 000e C4F20003 		movt	r3, #:upper16:1073758342
 444 0012 44F28602 		movw	r2, #:lower16:1073758342
 445 0016 C4F20002 		movt	r2, #:upper16:1073758342
 446 001a 1278     		ldrb	r2, [r2, #0]
 447 001c D1B2     		uxtb	r1, r2
 448 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 449 0020 02F0F802 		and	r2, r2, #248
 450 0024 41EA0202 		orr	r2, r1, r2
 451 0028 D2B2     		uxtb	r2, r2
 452 002a 1A70     		strb	r2, [r3, #0]
 323:.\Generated_Source\PSoC5/Clock_1.c **** }
 453              		.loc 1 323 0
 454 002c 07F10C07 		add	r7, r7, #12
 455 0030 BD46     		mov	sp, r7
 456 0032 80BC     		pop	{r7}
 457 0034 7047     		bx	lr
 458              		.cfi_endproc
 459              	.LFE5:
 460              		.size	Clock_1_SetModeRegister, .-Clock_1_SetModeRegister
 461 0036 00BF     		.section	.text.Clock_1_ClearModeRegister,"ax",%progbits
 462              		.align	2
 463              		.global	Clock_1_ClearModeRegister
 464              		.thumb
 465              		.thumb_func
 466              		.type	Clock_1_ClearModeRegister, %function
 467              	Clock_1_ClearModeRegister:
 468              	.LFB6:
 324:.\Generated_Source\PSoC5/Clock_1.c **** 
 325:.\Generated_Source\PSoC5/Clock_1.c **** 
 326:.\Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 15


 327:.\Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_ClearModeRegister
 328:.\Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 329:.\Generated_Source\PSoC5/Clock_1.c **** * Summary:
 330:.\Generated_Source\PSoC5/Clock_1.c **** *  Clears flags that control the operating mode of the clock. This function
 331:.\Generated_Source\PSoC5/Clock_1.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 332:.\Generated_Source\PSoC5/Clock_1.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 333:.\Generated_Source\PSoC5/Clock_1.c **** *  disabled before changing the mode.
 334:.\Generated_Source\PSoC5/Clock_1.c **** *
 335:.\Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 336:.\Generated_Source\PSoC5/Clock_1.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 337:.\Generated_Source\PSoC5/Clock_1.c **** *   clkMode should be a set of the following optional bits or'ed together.
 338:.\Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 339:.\Generated_Source\PSoC5/Clock_1.c **** *                 occur when the divider count reaches half of the divide
 340:.\Generated_Source\PSoC5/Clock_1.c **** *                 value.
 341:.\Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 342:.\Generated_Source\PSoC5/Clock_1.c **** *                 is asserted for approximately half of its period. When
 343:.\Generated_Source\PSoC5/Clock_1.c **** *                 disabled, the output clock is asserted for one period of the
 344:.\Generated_Source\PSoC5/Clock_1.c **** *                 source clock.
 345:.\Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 346:.\Generated_Source\PSoC5/Clock_1.c **** *                 be enabled for all synchronous clocks.
 347:.\Generated_Source\PSoC5/Clock_1.c **** *   See the Technical Reference Manual for details about setting the mode of
 348:.\Generated_Source\PSoC5/Clock_1.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 349:.\Generated_Source\PSoC5/Clock_1.c **** *
 350:.\Generated_Source\PSoC5/Clock_1.c **** * Returns:
 351:.\Generated_Source\PSoC5/Clock_1.c **** *  void
 352:.\Generated_Source\PSoC5/Clock_1.c **** *
 353:.\Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 354:.\Generated_Source\PSoC5/Clock_1.c **** void Clock_1_ClearModeRegister(uint8 clkMode) 
 355:.\Generated_Source\PSoC5/Clock_1.c **** {
 469              		.loc 1 355 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 8
 472              		@ frame_needed = 1, uses_anonymous_args = 0
 473              		@ link register save eliminated.
 474 0000 80B4     		push	{r7}
 475              	.LCFI15:
 476              		.cfi_def_cfa_offset 4
 477 0002 83B0     		sub	sp, sp, #12
 478              	.LCFI16:
 479              		.cfi_def_cfa_offset 16
 480 0004 00AF     		add	r7, sp, #0
 481              		.cfi_offset 7, -4
 482              	.LCFI17:
 483              		.cfi_def_cfa_register 7
 484 0006 0346     		mov	r3, r0
 485 0008 FB71     		strb	r3, [r7, #7]
 356:.\Generated_Source\PSoC5/Clock_1.c ****     Clock_1_MOD_SRC &= ~clkMode | ~Clock_1_MODE_MASK;
 486              		.loc 1 356 0
 487 000a 44F28603 		movw	r3, #:lower16:1073758342
 488 000e C4F20003 		movt	r3, #:upper16:1073758342
 489 0012 44F28602 		movw	r2, #:lower16:1073758342
 490 0016 C4F20002 		movt	r2, #:upper16:1073758342
 491 001a 1278     		ldrb	r2, [r2, #0]
 492 001c D1B2     		uxtb	r1, r2
 493 001e FA79     		ldrb	r2, [r7, #7]
 494 0020 6FEA0202 		mvn	r2, r2
 495 0024 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 16


 496 0026 42F00702 		orr	r2, r2, #7
 497 002a D2B2     		uxtb	r2, r2
 498 002c 01EA0202 		and	r2, r1, r2
 499 0030 D2B2     		uxtb	r2, r2
 500 0032 1A70     		strb	r2, [r3, #0]
 357:.\Generated_Source\PSoC5/Clock_1.c **** }
 501              		.loc 1 357 0
 502 0034 07F10C07 		add	r7, r7, #12
 503 0038 BD46     		mov	sp, r7
 504 003a 80BC     		pop	{r7}
 505 003c 7047     		bx	lr
 506              		.cfi_endproc
 507              	.LFE6:
 508              		.size	Clock_1_ClearModeRegister, .-Clock_1_ClearModeRegister
 509 003e 00BF     		.section	.text.Clock_1_GetModeRegister,"ax",%progbits
 510              		.align	2
 511              		.global	Clock_1_GetModeRegister
 512              		.thumb
 513              		.thumb_func
 514              		.type	Clock_1_GetModeRegister, %function
 515              	Clock_1_GetModeRegister:
 516              	.LFB7:
 358:.\Generated_Source\PSoC5/Clock_1.c **** 
 359:.\Generated_Source\PSoC5/Clock_1.c **** 
 360:.\Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 361:.\Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_GetModeRegister
 362:.\Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 363:.\Generated_Source\PSoC5/Clock_1.c **** * Summary:
 364:.\Generated_Source\PSoC5/Clock_1.c **** *  Gets the clock mode register value.
 365:.\Generated_Source\PSoC5/Clock_1.c **** *
 366:.\Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 367:.\Generated_Source\PSoC5/Clock_1.c **** *  void
 368:.\Generated_Source\PSoC5/Clock_1.c **** *
 369:.\Generated_Source\PSoC5/Clock_1.c **** * Returns:
 370:.\Generated_Source\PSoC5/Clock_1.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 371:.\Generated_Source\PSoC5/Clock_1.c **** *  ClearModeRegister descriptions for details about the mode bits.
 372:.\Generated_Source\PSoC5/Clock_1.c **** *
 373:.\Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 374:.\Generated_Source\PSoC5/Clock_1.c **** uint8 Clock_1_GetModeRegister(void) 
 375:.\Generated_Source\PSoC5/Clock_1.c **** {
 517              		.loc 1 375 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 522 0000 80B4     		push	{r7}
 523              	.LCFI18:
 524              		.cfi_def_cfa_offset 4
 525 0002 00AF     		add	r7, sp, #0
 526              		.cfi_offset 7, -4
 527              	.LCFI19:
 528              		.cfi_def_cfa_register 7
 376:.\Generated_Source\PSoC5/Clock_1.c ****     return Clock_1_MOD_SRC & Clock_1_MODE_MASK;
 529              		.loc 1 376 0
 530 0004 44F28603 		movw	r3, #:lower16:1073758342
 531 0008 C4F20003 		movt	r3, #:upper16:1073758342
 532 000c 1B78     		ldrb	r3, [r3, #0]
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 17


 533 000e DBB2     		uxtb	r3, r3
 534 0010 03F0F803 		and	r3, r3, #248
 377:.\Generated_Source\PSoC5/Clock_1.c **** }
 535              		.loc 1 377 0
 536 0014 1846     		mov	r0, r3
 537 0016 BD46     		mov	sp, r7
 538 0018 80BC     		pop	{r7}
 539 001a 7047     		bx	lr
 540              		.cfi_endproc
 541              	.LFE7:
 542              		.size	Clock_1_GetModeRegister, .-Clock_1_GetModeRegister
 543              		.section	.text.Clock_1_SetSourceRegister,"ax",%progbits
 544              		.align	2
 545              		.global	Clock_1_SetSourceRegister
 546              		.thumb
 547              		.thumb_func
 548              		.type	Clock_1_SetSourceRegister, %function
 549              	Clock_1_SetSourceRegister:
 550              	.LFB8:
 378:.\Generated_Source\PSoC5/Clock_1.c **** 
 379:.\Generated_Source\PSoC5/Clock_1.c **** 
 380:.\Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 381:.\Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_SetSourceRegister
 382:.\Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 383:.\Generated_Source\PSoC5/Clock_1.c **** * Summary:
 384:.\Generated_Source\PSoC5/Clock_1.c **** *  Sets the input source of the clock. The clock must be disabled before
 385:.\Generated_Source\PSoC5/Clock_1.c **** *  changing the source. The old and new clock sources must be running.
 386:.\Generated_Source\PSoC5/Clock_1.c **** *
 387:.\Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 388:.\Generated_Source\PSoC5/Clock_1.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 389:.\Generated_Source\PSoC5/Clock_1.c **** *   following input sources:
 390:.\Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 391:.\Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_IMO
 392:.\Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_XTALM
 393:.\Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_ILO
 394:.\Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_PLL
 395:.\Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_XTALK
 396:.\Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_DSI_G
 397:.\Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 398:.\Generated_Source\PSoC5/Clock_1.c **** *   See the Technical Reference Manual for details on clock sources.
 399:.\Generated_Source\PSoC5/Clock_1.c **** *
 400:.\Generated_Source\PSoC5/Clock_1.c **** * Returns:
 401:.\Generated_Source\PSoC5/Clock_1.c **** *  void
 402:.\Generated_Source\PSoC5/Clock_1.c **** *
 403:.\Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 404:.\Generated_Source\PSoC5/Clock_1.c **** void Clock_1_SetSourceRegister(uint8 clkSource) 
 405:.\Generated_Source\PSoC5/Clock_1.c **** {
 551              		.loc 1 405 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 16
 554              		@ frame_needed = 1, uses_anonymous_args = 0
 555 0000 80B5     		push	{r7, lr}
 556              	.LCFI20:
 557              		.cfi_def_cfa_offset 8
 558 0002 84B0     		sub	sp, sp, #16
 559              	.LCFI21:
 560              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 18


 561 0004 00AF     		add	r7, sp, #0
 562              		.cfi_offset 14, -4
 563              		.cfi_offset 7, -8
 564              	.LCFI22:
 565              		.cfi_def_cfa_register 7
 566 0006 0346     		mov	r3, r0
 567 0008 FB71     		strb	r3, [r7, #7]
 406:.\Generated_Source\PSoC5/Clock_1.c ****     uint16 currDiv = Clock_1_GetDividerRegister();
 568              		.loc 1 406 0
 569 000a FFF7FEFF 		bl	Clock_1_GetDividerRegister
 570 000e 0346     		mov	r3, r0
 571 0010 BB81     		strh	r3, [r7, #12]	@ movhi
 407:.\Generated_Source\PSoC5/Clock_1.c ****     uint8 oldSrc = Clock_1_GetSourceRegister();
 572              		.loc 1 407 0
 573 0012 FFF7FEFF 		bl	Clock_1_GetSourceRegister
 574 0016 0346     		mov	r3, r0
 575 0018 FB73     		strb	r3, [r7, #15]
 408:.\Generated_Source\PSoC5/Clock_1.c **** 
 409:.\Generated_Source\PSoC5/Clock_1.c ****     if (oldSrc != CYCLK_SRC_SEL_CLK_SYNC_D && clkSource == CYCLK_SRC_SEL_CLK_SYNC_D && currDiv == 0
 576              		.loc 1 409 0
 577 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 578 001c 002B     		cmp	r3, #0
 579 001e 25D0     		beq	.L32
 580 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 581 0022 002B     		cmp	r3, #0
 582 0024 22D1     		bne	.L32
 583 0026 BB89     		ldrh	r3, [r7, #12]
 584 0028 002B     		cmp	r3, #0
 585 002a 1FD1     		bne	.L32
 410:.\Generated_Source\PSoC5/Clock_1.c ****     {
 411:.\Generated_Source\PSoC5/Clock_1.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 412:.\Generated_Source\PSoC5/Clock_1.c ****         /* then set the source so we are consistent.                                */
 413:.\Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC |= CYCLK_SSS;
 586              		.loc 1 413 0
 587 002c 44F28603 		movw	r3, #:lower16:1073758342
 588 0030 C4F20003 		movt	r3, #:upper16:1073758342
 589 0034 44F28602 		movw	r2, #:lower16:1073758342
 590 0038 C4F20002 		movt	r2, #:upper16:1073758342
 591 003c 1278     		ldrb	r2, [r2, #0]
 592 003e D2B2     		uxtb	r2, r2
 593 0040 42F04002 		orr	r2, r2, #64
 594 0044 D2B2     		uxtb	r2, r2
 595 0046 1A70     		strb	r2, [r3, #0]
 414:.\Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC =
 596              		.loc 1 414 0
 597 0048 44F28603 		movw	r3, #:lower16:1073758342
 598 004c C4F20003 		movt	r3, #:upper16:1073758342
 415:.\Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & ~Clock_1_SRC_SEL_MSK) | clkSource;
 599              		.loc 1 415 0
 600 0050 44F28602 		movw	r2, #:lower16:1073758342
 601 0054 C4F20002 		movt	r2, #:upper16:1073758342
 602 0058 1278     		ldrb	r2, [r2, #0]
 603 005a D2B2     		uxtb	r2, r2
 604              		.loc 1 414 0
 605 005c 02F0F802 		and	r2, r2, #248
 606 0060 F979     		ldrb	r1, [r7, #7]
 607 0062 42EA0102 		orr	r2, r2, r1
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 19


 608 0066 D2B2     		uxtb	r2, r2
 609 0068 1A70     		strb	r2, [r3, #0]
 610              		.loc 1 409 0
 611 006a 38E0     		b	.L35
 612              	.L32:
 416:.\Generated_Source\PSoC5/Clock_1.c ****     }
 417:.\Generated_Source\PSoC5/Clock_1.c ****     else if (oldSrc == CYCLK_SRC_SEL_CLK_SYNC_D && clkSource != CYCLK_SRC_SEL_CLK_SYNC_D && currDiv
 613              		.loc 1 417 0
 614 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 615 006e 002B     		cmp	r3, #0
 616 0070 24D1     		bne	.L34
 617 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 618 0074 002B     		cmp	r3, #0
 619 0076 21D0     		beq	.L34
 620 0078 BB89     		ldrh	r3, [r7, #12]
 621 007a 002B     		cmp	r3, #0
 622 007c 1ED1     		bne	.L34
 418:.\Generated_Source\PSoC5/Clock_1.c ****     {
 419:.\Generated_Source\PSoC5/Clock_1.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 420:.\Generated_Source\PSoC5/Clock_1.c ****         /* lock when we clear SSS.                                                  */
 421:.\Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC =
 623              		.loc 1 421 0
 624 007e 44F28603 		movw	r3, #:lower16:1073758342
 625 0082 C4F20003 		movt	r3, #:upper16:1073758342
 422:.\Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & ~Clock_1_SRC_SEL_MSK) | clkSource;
 626              		.loc 1 422 0
 627 0086 44F28602 		movw	r2, #:lower16:1073758342
 628 008a C4F20002 		movt	r2, #:upper16:1073758342
 629 008e 1278     		ldrb	r2, [r2, #0]
 630 0090 D2B2     		uxtb	r2, r2
 631              		.loc 1 421 0
 632 0092 02F0F802 		and	r2, r2, #248
 633 0096 F979     		ldrb	r1, [r7, #7]
 634 0098 42EA0102 		orr	r2, r2, r1
 635 009c D2B2     		uxtb	r2, r2
 636 009e 1A70     		strb	r2, [r3, #0]
 423:.\Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC &= ~CYCLK_SSS;
 637              		.loc 1 423 0
 638 00a0 44F28603 		movw	r3, #:lower16:1073758342
 639 00a4 C4F20003 		movt	r3, #:upper16:1073758342
 640 00a8 44F28602 		movw	r2, #:lower16:1073758342
 641 00ac C4F20002 		movt	r2, #:upper16:1073758342
 642 00b0 1278     		ldrb	r2, [r2, #0]
 643 00b2 D2B2     		uxtb	r2, r2
 644 00b4 02F0BF02 		and	r2, r2, #191
 645 00b8 1A70     		strb	r2, [r3, #0]
 646              		.loc 1 417 0
 647 00ba 10E0     		b	.L35
 648              	.L34:
 424:.\Generated_Source\PSoC5/Clock_1.c ****     }
 425:.\Generated_Source\PSoC5/Clock_1.c ****     else
 426:.\Generated_Source\PSoC5/Clock_1.c ****     {
 427:.\Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC =
 649              		.loc 1 427 0
 650 00bc 44F28603 		movw	r3, #:lower16:1073758342
 651 00c0 C4F20003 		movt	r3, #:upper16:1073758342
 428:.\Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & ~Clock_1_SRC_SEL_MSK) | clkSource;
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 20


 652              		.loc 1 428 0
 653 00c4 44F28602 		movw	r2, #:lower16:1073758342
 654 00c8 C4F20002 		movt	r2, #:upper16:1073758342
 655 00cc 1278     		ldrb	r2, [r2, #0]
 656 00ce D2B2     		uxtb	r2, r2
 657              		.loc 1 427 0
 658 00d0 02F0F802 		and	r2, r2, #248
 659 00d4 F979     		ldrb	r1, [r7, #7]
 660 00d6 42EA0102 		orr	r2, r2, r1
 661 00da D2B2     		uxtb	r2, r2
 662 00dc 1A70     		strb	r2, [r3, #0]
 663              	.L35:
 429:.\Generated_Source\PSoC5/Clock_1.c ****     }
 430:.\Generated_Source\PSoC5/Clock_1.c **** }
 664              		.loc 1 430 0
 665 00de 07F11007 		add	r7, r7, #16
 666 00e2 BD46     		mov	sp, r7
 667 00e4 80BD     		pop	{r7, pc}
 668              		.cfi_endproc
 669              	.LFE8:
 670              		.size	Clock_1_SetSourceRegister, .-Clock_1_SetSourceRegister
 671 00e6 00BF     		.section	.text.Clock_1_GetSourceRegister,"ax",%progbits
 672              		.align	2
 673              		.global	Clock_1_GetSourceRegister
 674              		.thumb
 675              		.thumb_func
 676              		.type	Clock_1_GetSourceRegister, %function
 677              	Clock_1_GetSourceRegister:
 678              	.LFB9:
 431:.\Generated_Source\PSoC5/Clock_1.c **** 
 432:.\Generated_Source\PSoC5/Clock_1.c **** 
 433:.\Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 434:.\Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_GetSourceRegister
 435:.\Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 436:.\Generated_Source\PSoC5/Clock_1.c **** * Summary:
 437:.\Generated_Source\PSoC5/Clock_1.c **** *  Gets the input source of the clock.
 438:.\Generated_Source\PSoC5/Clock_1.c **** *
 439:.\Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 440:.\Generated_Source\PSoC5/Clock_1.c **** *  void
 441:.\Generated_Source\PSoC5/Clock_1.c **** *
 442:.\Generated_Source\PSoC5/Clock_1.c **** * Returns:
 443:.\Generated_Source\PSoC5/Clock_1.c **** *  The input source of the clock. See SetSourceRegister for details.
 444:.\Generated_Source\PSoC5/Clock_1.c **** *
 445:.\Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 446:.\Generated_Source\PSoC5/Clock_1.c **** uint8 Clock_1_GetSourceRegister(void) 
 447:.\Generated_Source\PSoC5/Clock_1.c **** {
 679              		.loc 1 447 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683              		@ link register save eliminated.
 684 0000 80B4     		push	{r7}
 685              	.LCFI23:
 686              		.cfi_def_cfa_offset 4
 687 0002 00AF     		add	r7, sp, #0
 688              		.cfi_offset 7, -4
 689              	.LCFI24:
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 21


 690              		.cfi_def_cfa_register 7
 448:.\Generated_Source\PSoC5/Clock_1.c ****     return Clock_1_MOD_SRC & Clock_1_SRC_SEL_MSK;
 691              		.loc 1 448 0
 692 0004 44F28603 		movw	r3, #:lower16:1073758342
 693 0008 C4F20003 		movt	r3, #:upper16:1073758342
 694 000c 1B78     		ldrb	r3, [r3, #0]
 695 000e DBB2     		uxtb	r3, r3
 696 0010 03F00703 		and	r3, r3, #7
 449:.\Generated_Source\PSoC5/Clock_1.c **** }
 697              		.loc 1 449 0
 698 0014 1846     		mov	r0, r3
 699 0016 BD46     		mov	sp, r7
 700 0018 80BC     		pop	{r7}
 701 001a 7047     		bx	lr
 702              		.cfi_endproc
 703              	.LFE9:
 704              		.size	Clock_1_GetSourceRegister, .-Clock_1_GetSourceRegister
 705              		.text
 706              	.Letext0:
 707              		.section	.debug_loc,"",%progbits
 708              	.Ldebug_loc0:
 709              	.LLST0:
 710 0000 00000000 		.4byte	.LFB0
 711 0004 02000000 		.4byte	.LCFI0
 712 0008 0100     		.2byte	0x1
 713 000a 5D       		.byte	0x5d
 714 000b 02000000 		.4byte	.LCFI0
 715 000f 04000000 		.4byte	.LCFI1
 716 0013 0200     		.2byte	0x2
 717 0015 7D       		.byte	0x7d
 718 0016 04       		.sleb128 4
 719 0017 04000000 		.4byte	.LCFI1
 720 001b 26000000 		.4byte	.LFE0
 721 001f 0200     		.2byte	0x2
 722 0021 77       		.byte	0x77
 723 0022 04       		.sleb128 4
 724 0023 00000000 		.4byte	0x0
 725 0027 00000000 		.4byte	0x0
 726              	.LLST1:
 727 002b 00000000 		.4byte	.LFB1
 728 002f 02000000 		.4byte	.LCFI2
 729 0033 0100     		.2byte	0x1
 730 0035 5D       		.byte	0x5d
 731 0036 02000000 		.4byte	.LCFI2
 732 003a 04000000 		.4byte	.LCFI3
 733 003e 0200     		.2byte	0x2
 734 0040 7D       		.byte	0x7d
 735 0041 04       		.sleb128 4
 736 0042 04000000 		.4byte	.LCFI3
 737 0046 24000000 		.4byte	.LFE1
 738 004a 0200     		.2byte	0x2
 739 004c 77       		.byte	0x77
 740 004d 04       		.sleb128 4
 741 004e 00000000 		.4byte	0x0
 742 0052 00000000 		.4byte	0x0
 743              	.LLST2:
 744 0056 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 22


 745 005a 02000000 		.4byte	.LCFI4
 746 005e 0100     		.2byte	0x1
 747 0060 5D       		.byte	0x5d
 748 0061 02000000 		.4byte	.LCFI4
 749 0065 04000000 		.4byte	.LCFI5
 750 0069 0200     		.2byte	0x2
 751 006b 7D       		.byte	0x7d
 752 006c 04       		.sleb128 4
 753 006d 04000000 		.4byte	.LCFI5
 754 0071 06000000 		.4byte	.LCFI6
 755 0075 0200     		.2byte	0x2
 756 0077 7D       		.byte	0x7d
 757 0078 10       		.sleb128 16
 758 0079 06000000 		.4byte	.LCFI6
 759 007d 52000000 		.4byte	.LFE2
 760 0081 0200     		.2byte	0x2
 761 0083 77       		.byte	0x77
 762 0084 10       		.sleb128 16
 763 0085 00000000 		.4byte	0x0
 764 0089 00000000 		.4byte	0x0
 765              	.LLST3:
 766 008d 00000000 		.4byte	.LFB3
 767 0091 02000000 		.4byte	.LCFI7
 768 0095 0100     		.2byte	0x1
 769 0097 5D       		.byte	0x5d
 770 0098 02000000 		.4byte	.LCFI7
 771 009c 04000000 		.4byte	.LCFI8
 772 00a0 0200     		.2byte	0x2
 773 00a2 7D       		.byte	0x7d
 774 00a3 08       		.sleb128 8
 775 00a4 04000000 		.4byte	.LCFI8
 776 00a8 06000000 		.4byte	.LCFI9
 777 00ac 0200     		.2byte	0x2
 778 00ae 7D       		.byte	0x7d
 779 00af 18       		.sleb128 24
 780 00b0 06000000 		.4byte	.LCFI9
 781 00b4 D4010000 		.4byte	.LFE3
 782 00b8 0200     		.2byte	0x2
 783 00ba 77       		.byte	0x77
 784 00bb 18       		.sleb128 24
 785 00bc 00000000 		.4byte	0x0
 786 00c0 00000000 		.4byte	0x0
 787              	.LLST4:
 788 00c4 00000000 		.4byte	.LFB4
 789 00c8 02000000 		.4byte	.LCFI10
 790 00cc 0100     		.2byte	0x1
 791 00ce 5D       		.byte	0x5d
 792 00cf 02000000 		.4byte	.LCFI10
 793 00d3 04000000 		.4byte	.LCFI11
 794 00d7 0200     		.2byte	0x2
 795 00d9 7D       		.byte	0x7d
 796 00da 04       		.sleb128 4
 797 00db 04000000 		.4byte	.LCFI11
 798 00df 18000000 		.4byte	.LFE4
 799 00e3 0200     		.2byte	0x2
 800 00e5 77       		.byte	0x77
 801 00e6 04       		.sleb128 4
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 23


 802 00e7 00000000 		.4byte	0x0
 803 00eb 00000000 		.4byte	0x0
 804              	.LLST5:
 805 00ef 00000000 		.4byte	.LFB5
 806 00f3 02000000 		.4byte	.LCFI12
 807 00f7 0100     		.2byte	0x1
 808 00f9 5D       		.byte	0x5d
 809 00fa 02000000 		.4byte	.LCFI12
 810 00fe 04000000 		.4byte	.LCFI13
 811 0102 0200     		.2byte	0x2
 812 0104 7D       		.byte	0x7d
 813 0105 04       		.sleb128 4
 814 0106 04000000 		.4byte	.LCFI13
 815 010a 06000000 		.4byte	.LCFI14
 816 010e 0200     		.2byte	0x2
 817 0110 7D       		.byte	0x7d
 818 0111 10       		.sleb128 16
 819 0112 06000000 		.4byte	.LCFI14
 820 0116 36000000 		.4byte	.LFE5
 821 011a 0200     		.2byte	0x2
 822 011c 77       		.byte	0x77
 823 011d 10       		.sleb128 16
 824 011e 00000000 		.4byte	0x0
 825 0122 00000000 		.4byte	0x0
 826              	.LLST6:
 827 0126 00000000 		.4byte	.LFB6
 828 012a 02000000 		.4byte	.LCFI15
 829 012e 0100     		.2byte	0x1
 830 0130 5D       		.byte	0x5d
 831 0131 02000000 		.4byte	.LCFI15
 832 0135 04000000 		.4byte	.LCFI16
 833 0139 0200     		.2byte	0x2
 834 013b 7D       		.byte	0x7d
 835 013c 04       		.sleb128 4
 836 013d 04000000 		.4byte	.LCFI16
 837 0141 06000000 		.4byte	.LCFI17
 838 0145 0200     		.2byte	0x2
 839 0147 7D       		.byte	0x7d
 840 0148 10       		.sleb128 16
 841 0149 06000000 		.4byte	.LCFI17
 842 014d 3E000000 		.4byte	.LFE6
 843 0151 0200     		.2byte	0x2
 844 0153 77       		.byte	0x77
 845 0154 10       		.sleb128 16
 846 0155 00000000 		.4byte	0x0
 847 0159 00000000 		.4byte	0x0
 848              	.LLST7:
 849 015d 00000000 		.4byte	.LFB7
 850 0161 02000000 		.4byte	.LCFI18
 851 0165 0100     		.2byte	0x1
 852 0167 5D       		.byte	0x5d
 853 0168 02000000 		.4byte	.LCFI18
 854 016c 04000000 		.4byte	.LCFI19
 855 0170 0200     		.2byte	0x2
 856 0172 7D       		.byte	0x7d
 857 0173 04       		.sleb128 4
 858 0174 04000000 		.4byte	.LCFI19
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 24


 859 0178 1C000000 		.4byte	.LFE7
 860 017c 0200     		.2byte	0x2
 861 017e 77       		.byte	0x77
 862 017f 04       		.sleb128 4
 863 0180 00000000 		.4byte	0x0
 864 0184 00000000 		.4byte	0x0
 865              	.LLST8:
 866 0188 00000000 		.4byte	.LFB8
 867 018c 02000000 		.4byte	.LCFI20
 868 0190 0100     		.2byte	0x1
 869 0192 5D       		.byte	0x5d
 870 0193 02000000 		.4byte	.LCFI20
 871 0197 04000000 		.4byte	.LCFI21
 872 019b 0200     		.2byte	0x2
 873 019d 7D       		.byte	0x7d
 874 019e 08       		.sleb128 8
 875 019f 04000000 		.4byte	.LCFI21
 876 01a3 06000000 		.4byte	.LCFI22
 877 01a7 0200     		.2byte	0x2
 878 01a9 7D       		.byte	0x7d
 879 01aa 18       		.sleb128 24
 880 01ab 06000000 		.4byte	.LCFI22
 881 01af E6000000 		.4byte	.LFE8
 882 01b3 0200     		.2byte	0x2
 883 01b5 77       		.byte	0x77
 884 01b6 18       		.sleb128 24
 885 01b7 00000000 		.4byte	0x0
 886 01bb 00000000 		.4byte	0x0
 887              	.LLST9:
 888 01bf 00000000 		.4byte	.LFB9
 889 01c3 02000000 		.4byte	.LCFI23
 890 01c7 0100     		.2byte	0x1
 891 01c9 5D       		.byte	0x5d
 892 01ca 02000000 		.4byte	.LCFI23
 893 01ce 04000000 		.4byte	.LCFI24
 894 01d2 0200     		.2byte	0x2
 895 01d4 7D       		.byte	0x7d
 896 01d5 04       		.sleb128 4
 897 01d6 04000000 		.4byte	.LCFI24
 898 01da 1C000000 		.4byte	.LFE9
 899 01de 0200     		.2byte	0x2
 900 01e0 77       		.byte	0x77
 901 01e1 04       		.sleb128 4
 902 01e2 00000000 		.4byte	0x0
 903 01e6 00000000 		.4byte	0x0
 904              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 905              		.section	.debug_info
 906 0000 25020000 		.4byte	0x225
 907 0004 0200     		.2byte	0x2
 908 0006 00000000 		.4byte	.Ldebug_abbrev0
 909 000a 04       		.byte	0x4
 910 000b 01       		.uleb128 0x1
 911 000c 6D010000 		.4byte	.LASF32
 912 0010 01       		.byte	0x1
 913 0011 3A000000 		.4byte	.LASF33
 914 0015 C3010000 		.4byte	.LASF34
 915 0019 00000000 		.4byte	0x0
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 25


 916 001d 00000000 		.4byte	0x0
 917 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 918 0025 00000000 		.4byte	.Ldebug_line0
 919 0029 02       		.uleb128 0x2
 920 002a 01       		.byte	0x1
 921 002b 06       		.byte	0x6
 922 002c F5010000 		.4byte	.LASF0
 923 0030 02       		.uleb128 0x2
 924 0031 01       		.byte	0x1
 925 0032 08       		.byte	0x8
 926 0033 85000000 		.4byte	.LASF1
 927 0037 02       		.uleb128 0x2
 928 0038 02       		.byte	0x2
 929 0039 05       		.byte	0x5
 930 003a 86010000 		.4byte	.LASF2
 931 003e 02       		.uleb128 0x2
 932 003f 02       		.byte	0x2
 933 0040 07       		.byte	0x7
 934 0041 BB000000 		.4byte	.LASF3
 935 0045 02       		.uleb128 0x2
 936 0046 04       		.byte	0x4
 937 0047 05       		.byte	0x5
 938 0048 B0010000 		.4byte	.LASF4
 939 004c 02       		.uleb128 0x2
 940 004d 04       		.byte	0x4
 941 004e 07       		.byte	0x7
 942 004f A9000000 		.4byte	.LASF5
 943 0053 02       		.uleb128 0x2
 944 0054 08       		.byte	0x8
 945 0055 05       		.byte	0x5
 946 0056 00000000 		.4byte	.LASF6
 947 005a 02       		.uleb128 0x2
 948 005b 08       		.byte	0x8
 949 005c 07       		.byte	0x7
 950 005d 26010000 		.4byte	.LASF7
 951 0061 03       		.uleb128 0x3
 952 0062 04       		.byte	0x4
 953 0063 05       		.byte	0x5
 954 0064 696E7400 		.ascii	"int\000"
 955 0068 02       		.uleb128 0x2
 956 0069 04       		.byte	0x4
 957 006a 07       		.byte	0x7
 958 006b 11010000 		.4byte	.LASF8
 959 006f 02       		.uleb128 0x2
 960 0070 01       		.byte	0x1
 961 0071 08       		.byte	0x8
 962 0072 79010000 		.4byte	.LASF9
 963 0076 04       		.uleb128 0x4
 964 0077 90010000 		.4byte	.LASF10
 965 007b 02       		.byte	0x2
 966 007c 2A       		.byte	0x2a
 967 007d 30000000 		.4byte	0x30
 968 0081 04       		.uleb128 0x4
 969 0082 E8000000 		.4byte	.LASF11
 970 0086 02       		.byte	0x2
 971 0087 2B       		.byte	0x2b
 972 0088 3E000000 		.4byte	0x3e
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 26


 973 008c 05       		.uleb128 0x5
 974 008d 01       		.byte	0x1
 975 008e 93000000 		.4byte	.LASF12
 976 0092 01       		.byte	0x1
 977 0093 2F       		.byte	0x2f
 978 0094 01       		.byte	0x1
 979 0095 00000000 		.4byte	.LFB0
 980 0099 26000000 		.4byte	.LFE0
 981 009d 00000000 		.4byte	.LLST0
 982 00a1 05       		.uleb128 0x5
 983 00a2 01       		.byte	0x1
 984 00a3 78000000 		.4byte	.LASF13
 985 00a7 01       		.byte	0x1
 986 00a8 47       		.byte	0x47
 987 00a9 01       		.byte	0x1
 988 00aa 00000000 		.4byte	.LFB1
 989 00ae 24000000 		.4byte	.LFE1
 990 00b2 2B000000 		.4byte	.LLST1
 991 00b6 06       		.uleb128 0x6
 992 00b7 01       		.byte	0x1
 993 00b8 01020000 		.4byte	.LASF14
 994 00bc 01       		.byte	0x1
 995 00bd 99       		.byte	0x99
 996 00be 01       		.byte	0x1
 997 00bf 00000000 		.4byte	.LFB2
 998 00c3 52000000 		.4byte	.LFE2
 999 00c7 56000000 		.4byte	.LLST2
 1000 00cb DE000000 		.4byte	0xde
 1001 00cf 07       		.uleb128 0x7
 1002 00d0 29000000 		.4byte	.LASF16
 1003 00d4 01       		.byte	0x1
 1004 00d5 99       		.byte	0x99
 1005 00d6 76000000 		.4byte	0x76
 1006 00da 02       		.byte	0x2
 1007 00db 91       		.byte	0x91
 1008 00dc 77       		.sleb128 -9
 1009 00dd 00       		.byte	0x0
 1010 00de 06       		.uleb128 0x6
 1011 00df 01       		.byte	0x1
 1012 00e0 5D000000 		.4byte	.LASF15
 1013 00e4 01       		.byte	0x1
 1014 00e5 BC       		.byte	0xbc
 1015 00e6 01       		.byte	0x1
 1016 00e7 00000000 		.4byte	.LFB3
 1017 00eb D4010000 		.4byte	.LFE3
 1018 00ef 8D000000 		.4byte	.LLST3
 1019 00f3 3E010000 		.4byte	0x13e
 1020 00f7 07       		.uleb128 0x7
 1021 00f8 CE000000 		.4byte	.LASF17
 1022 00fc 01       		.byte	0x1
 1023 00fd BC       		.byte	0xbc
 1024 00fe 81000000 		.4byte	0x81
 1025 0102 02       		.byte	0x2
 1026 0103 91       		.byte	0x91
 1027 0104 6E       		.sleb128 -18
 1028 0105 07       		.uleb128 0x7
 1029 0106 E0000000 		.4byte	.LASF18
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 27


 1030 010a 01       		.byte	0x1
 1031 010b BC       		.byte	0xbc
 1032 010c 76000000 		.4byte	0x76
 1033 0110 02       		.byte	0x2
 1034 0111 91       		.byte	0x91
 1035 0112 6D       		.sleb128 -19
 1036 0113 08       		.uleb128 0x8
 1037 0114 A1000000 		.4byte	.LASF19
 1038 0118 01       		.byte	0x1
 1039 0119 BE       		.byte	0xbe
 1040 011a 76000000 		.4byte	0x76
 1041 011e 02       		.byte	0x2
 1042 011f 91       		.byte	0x91
 1043 0120 74       		.sleb128 -12
 1044 0121 08       		.uleb128 0x8
 1045 0122 1E010000 		.4byte	.LASF20
 1046 0126 01       		.byte	0x1
 1047 0127 C0       		.byte	0xc0
 1048 0128 76000000 		.4byte	0x76
 1049 012c 02       		.byte	0x2
 1050 012d 91       		.byte	0x91
 1051 012e 75       		.sleb128 -11
 1052 012f 08       		.uleb128 0x8
 1053 0130 2F000000 		.4byte	.LASF21
 1054 0134 01       		.byte	0x1
 1055 0135 C1       		.byte	0xc1
 1056 0136 81000000 		.4byte	0x81
 1057 013a 02       		.byte	0x2
 1058 013b 91       		.byte	0x91
 1059 013c 76       		.sleb128 -10
 1060 013d 00       		.byte	0x0
 1061 013e 09       		.uleb128 0x9
 1062 013f 01       		.byte	0x1
 1063 0140 0E000000 		.4byte	.LASF25
 1064 0144 01       		.byte	0x1
 1065 0145 1E01     		.2byte	0x11e
 1066 0147 01       		.byte	0x1
 1067 0148 81000000 		.4byte	0x81
 1068 014c 00000000 		.4byte	.LFB4
 1069 0150 18000000 		.4byte	.LFE4
 1070 0154 C4000000 		.4byte	.LLST4
 1071 0158 0A       		.uleb128 0xa
 1072 0159 01       		.byte	0x1
 1073 015a 55010000 		.4byte	.LASF22
 1074 015e 01       		.byte	0x1
 1075 015f 4001     		.2byte	0x140
 1076 0161 01       		.byte	0x1
 1077 0162 00000000 		.4byte	.LFB5
 1078 0166 36000000 		.4byte	.LFE5
 1079 016a EF000000 		.4byte	.LLST5
 1080 016e 82010000 		.4byte	0x182
 1081 0172 0B       		.uleb128 0xb
 1082 0173 EF000000 		.4byte	.LASF23
 1083 0177 01       		.byte	0x1
 1084 0178 4001     		.2byte	0x140
 1085 017a 76000000 		.4byte	0x76
 1086 017e 02       		.byte	0x2
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 28


 1087 017f 91       		.byte	0x91
 1088 0180 77       		.sleb128 -9
 1089 0181 00       		.byte	0x0
 1090 0182 0A       		.uleb128 0xa
 1091 0183 01       		.byte	0x1
 1092 0184 F7000000 		.4byte	.LASF24
 1093 0188 01       		.byte	0x1
 1094 0189 6201     		.2byte	0x162
 1095 018b 01       		.byte	0x1
 1096 018c 00000000 		.4byte	.LFB6
 1097 0190 3E000000 		.4byte	.LFE6
 1098 0194 26010000 		.4byte	.LLST6
 1099 0198 AC010000 		.4byte	0x1ac
 1100 019c 0B       		.uleb128 0xb
 1101 019d EF000000 		.4byte	.LASF23
 1102 01a1 01       		.byte	0x1
 1103 01a2 6201     		.2byte	0x162
 1104 01a4 76000000 		.4byte	0x76
 1105 01a8 02       		.byte	0x2
 1106 01a9 91       		.byte	0x91
 1107 01aa 77       		.sleb128 -9
 1108 01ab 00       		.byte	0x0
 1109 01ac 09       		.uleb128 0x9
 1110 01ad 01       		.byte	0x1
 1111 01ae 3D010000 		.4byte	.LASF26
 1112 01b2 01       		.byte	0x1
 1113 01b3 7601     		.2byte	0x176
 1114 01b5 01       		.byte	0x1
 1115 01b6 76000000 		.4byte	0x76
 1116 01ba 00000000 		.4byte	.LFB7
 1117 01be 1C000000 		.4byte	.LFE7
 1118 01c2 5D010000 		.4byte	.LLST7
 1119 01c6 0A       		.uleb128 0xa
 1120 01c7 01       		.byte	0x1
 1121 01c8 96010000 		.4byte	.LASF27
 1122 01cc 01       		.byte	0x1
 1123 01cd 9401     		.2byte	0x194
 1124 01cf 01       		.byte	0x1
 1125 01d0 00000000 		.4byte	.LFB8
 1126 01d4 E6000000 		.4byte	.LFE8
 1127 01d8 88010000 		.4byte	.LLST8
 1128 01dc 0E020000 		.4byte	0x20e
 1129 01e0 0B       		.uleb128 0xb
 1130 01e1 B9010000 		.4byte	.LASF28
 1131 01e5 01       		.byte	0x1
 1132 01e6 9401     		.2byte	0x194
 1133 01e8 76000000 		.4byte	0x76
 1134 01ec 02       		.byte	0x2
 1135 01ed 91       		.byte	0x91
 1136 01ee 6F       		.sleb128 -17
 1137 01ef 0C       		.uleb128 0xc
 1138 01f0 7E010000 		.4byte	.LASF29
 1139 01f4 01       		.byte	0x1
 1140 01f5 9601     		.2byte	0x196
 1141 01f7 81000000 		.4byte	0x81
 1142 01fb 02       		.byte	0x2
 1143 01fc 91       		.byte	0x91
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 29


 1144 01fd 74       		.sleb128 -12
 1145 01fe 0C       		.uleb128 0xc
 1146 01ff D9000000 		.4byte	.LASF30
 1147 0203 01       		.byte	0x1
 1148 0204 9701     		.2byte	0x197
 1149 0206 76000000 		.4byte	0x76
 1150 020a 02       		.byte	0x2
 1151 020b 91       		.byte	0x91
 1152 020c 77       		.sleb128 -9
 1153 020d 00       		.byte	0x0
 1154 020e 09       		.uleb128 0x9
 1155 020f 01       		.byte	0x1
 1156 0210 16020000 		.4byte	.LASF31
 1157 0214 01       		.byte	0x1
 1158 0215 BE01     		.2byte	0x1be
 1159 0217 01       		.byte	0x1
 1160 0218 76000000 		.4byte	0x76
 1161 021c 00000000 		.4byte	.LFB9
 1162 0220 1C000000 		.4byte	.LFE9
 1163 0224 BF010000 		.4byte	.LLST9
 1164 0228 00       		.byte	0x0
 1165              		.section	.debug_abbrev
 1166 0000 01       		.uleb128 0x1
 1167 0001 11       		.uleb128 0x11
 1168 0002 01       		.byte	0x1
 1169 0003 25       		.uleb128 0x25
 1170 0004 0E       		.uleb128 0xe
 1171 0005 13       		.uleb128 0x13
 1172 0006 0B       		.uleb128 0xb
 1173 0007 03       		.uleb128 0x3
 1174 0008 0E       		.uleb128 0xe
 1175 0009 1B       		.uleb128 0x1b
 1176 000a 0E       		.uleb128 0xe
 1177 000b 11       		.uleb128 0x11
 1178 000c 01       		.uleb128 0x1
 1179 000d 52       		.uleb128 0x52
 1180 000e 01       		.uleb128 0x1
 1181 000f 55       		.uleb128 0x55
 1182 0010 06       		.uleb128 0x6
 1183 0011 10       		.uleb128 0x10
 1184 0012 06       		.uleb128 0x6
 1185 0013 00       		.byte	0x0
 1186 0014 00       		.byte	0x0
 1187 0015 02       		.uleb128 0x2
 1188 0016 24       		.uleb128 0x24
 1189 0017 00       		.byte	0x0
 1190 0018 0B       		.uleb128 0xb
 1191 0019 0B       		.uleb128 0xb
 1192 001a 3E       		.uleb128 0x3e
 1193 001b 0B       		.uleb128 0xb
 1194 001c 03       		.uleb128 0x3
 1195 001d 0E       		.uleb128 0xe
 1196 001e 00       		.byte	0x0
 1197 001f 00       		.byte	0x0
 1198 0020 03       		.uleb128 0x3
 1199 0021 24       		.uleb128 0x24
 1200 0022 00       		.byte	0x0
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 30


 1201 0023 0B       		.uleb128 0xb
 1202 0024 0B       		.uleb128 0xb
 1203 0025 3E       		.uleb128 0x3e
 1204 0026 0B       		.uleb128 0xb
 1205 0027 03       		.uleb128 0x3
 1206 0028 08       		.uleb128 0x8
 1207 0029 00       		.byte	0x0
 1208 002a 00       		.byte	0x0
 1209 002b 04       		.uleb128 0x4
 1210 002c 16       		.uleb128 0x16
 1211 002d 00       		.byte	0x0
 1212 002e 03       		.uleb128 0x3
 1213 002f 0E       		.uleb128 0xe
 1214 0030 3A       		.uleb128 0x3a
 1215 0031 0B       		.uleb128 0xb
 1216 0032 3B       		.uleb128 0x3b
 1217 0033 0B       		.uleb128 0xb
 1218 0034 49       		.uleb128 0x49
 1219 0035 13       		.uleb128 0x13
 1220 0036 00       		.byte	0x0
 1221 0037 00       		.byte	0x0
 1222 0038 05       		.uleb128 0x5
 1223 0039 2E       		.uleb128 0x2e
 1224 003a 00       		.byte	0x0
 1225 003b 3F       		.uleb128 0x3f
 1226 003c 0C       		.uleb128 0xc
 1227 003d 03       		.uleb128 0x3
 1228 003e 0E       		.uleb128 0xe
 1229 003f 3A       		.uleb128 0x3a
 1230 0040 0B       		.uleb128 0xb
 1231 0041 3B       		.uleb128 0x3b
 1232 0042 0B       		.uleb128 0xb
 1233 0043 27       		.uleb128 0x27
 1234 0044 0C       		.uleb128 0xc
 1235 0045 11       		.uleb128 0x11
 1236 0046 01       		.uleb128 0x1
 1237 0047 12       		.uleb128 0x12
 1238 0048 01       		.uleb128 0x1
 1239 0049 40       		.uleb128 0x40
 1240 004a 06       		.uleb128 0x6
 1241 004b 00       		.byte	0x0
 1242 004c 00       		.byte	0x0
 1243 004d 06       		.uleb128 0x6
 1244 004e 2E       		.uleb128 0x2e
 1245 004f 01       		.byte	0x1
 1246 0050 3F       		.uleb128 0x3f
 1247 0051 0C       		.uleb128 0xc
 1248 0052 03       		.uleb128 0x3
 1249 0053 0E       		.uleb128 0xe
 1250 0054 3A       		.uleb128 0x3a
 1251 0055 0B       		.uleb128 0xb
 1252 0056 3B       		.uleb128 0x3b
 1253 0057 0B       		.uleb128 0xb
 1254 0058 27       		.uleb128 0x27
 1255 0059 0C       		.uleb128 0xc
 1256 005a 11       		.uleb128 0x11
 1257 005b 01       		.uleb128 0x1
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 31


 1258 005c 12       		.uleb128 0x12
 1259 005d 01       		.uleb128 0x1
 1260 005e 40       		.uleb128 0x40
 1261 005f 06       		.uleb128 0x6
 1262 0060 01       		.uleb128 0x1
 1263 0061 13       		.uleb128 0x13
 1264 0062 00       		.byte	0x0
 1265 0063 00       		.byte	0x0
 1266 0064 07       		.uleb128 0x7
 1267 0065 05       		.uleb128 0x5
 1268 0066 00       		.byte	0x0
 1269 0067 03       		.uleb128 0x3
 1270 0068 0E       		.uleb128 0xe
 1271 0069 3A       		.uleb128 0x3a
 1272 006a 0B       		.uleb128 0xb
 1273 006b 3B       		.uleb128 0x3b
 1274 006c 0B       		.uleb128 0xb
 1275 006d 49       		.uleb128 0x49
 1276 006e 13       		.uleb128 0x13
 1277 006f 02       		.uleb128 0x2
 1278 0070 0A       		.uleb128 0xa
 1279 0071 00       		.byte	0x0
 1280 0072 00       		.byte	0x0
 1281 0073 08       		.uleb128 0x8
 1282 0074 34       		.uleb128 0x34
 1283 0075 00       		.byte	0x0
 1284 0076 03       		.uleb128 0x3
 1285 0077 0E       		.uleb128 0xe
 1286 0078 3A       		.uleb128 0x3a
 1287 0079 0B       		.uleb128 0xb
 1288 007a 3B       		.uleb128 0x3b
 1289 007b 0B       		.uleb128 0xb
 1290 007c 49       		.uleb128 0x49
 1291 007d 13       		.uleb128 0x13
 1292 007e 02       		.uleb128 0x2
 1293 007f 0A       		.uleb128 0xa
 1294 0080 00       		.byte	0x0
 1295 0081 00       		.byte	0x0
 1296 0082 09       		.uleb128 0x9
 1297 0083 2E       		.uleb128 0x2e
 1298 0084 00       		.byte	0x0
 1299 0085 3F       		.uleb128 0x3f
 1300 0086 0C       		.uleb128 0xc
 1301 0087 03       		.uleb128 0x3
 1302 0088 0E       		.uleb128 0xe
 1303 0089 3A       		.uleb128 0x3a
 1304 008a 0B       		.uleb128 0xb
 1305 008b 3B       		.uleb128 0x3b
 1306 008c 05       		.uleb128 0x5
 1307 008d 27       		.uleb128 0x27
 1308 008e 0C       		.uleb128 0xc
 1309 008f 49       		.uleb128 0x49
 1310 0090 13       		.uleb128 0x13
 1311 0091 11       		.uleb128 0x11
 1312 0092 01       		.uleb128 0x1
 1313 0093 12       		.uleb128 0x12
 1314 0094 01       		.uleb128 0x1
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 32


 1315 0095 40       		.uleb128 0x40
 1316 0096 06       		.uleb128 0x6
 1317 0097 00       		.byte	0x0
 1318 0098 00       		.byte	0x0
 1319 0099 0A       		.uleb128 0xa
 1320 009a 2E       		.uleb128 0x2e
 1321 009b 01       		.byte	0x1
 1322 009c 3F       		.uleb128 0x3f
 1323 009d 0C       		.uleb128 0xc
 1324 009e 03       		.uleb128 0x3
 1325 009f 0E       		.uleb128 0xe
 1326 00a0 3A       		.uleb128 0x3a
 1327 00a1 0B       		.uleb128 0xb
 1328 00a2 3B       		.uleb128 0x3b
 1329 00a3 05       		.uleb128 0x5
 1330 00a4 27       		.uleb128 0x27
 1331 00a5 0C       		.uleb128 0xc
 1332 00a6 11       		.uleb128 0x11
 1333 00a7 01       		.uleb128 0x1
 1334 00a8 12       		.uleb128 0x12
 1335 00a9 01       		.uleb128 0x1
 1336 00aa 40       		.uleb128 0x40
 1337 00ab 06       		.uleb128 0x6
 1338 00ac 01       		.uleb128 0x1
 1339 00ad 13       		.uleb128 0x13
 1340 00ae 00       		.byte	0x0
 1341 00af 00       		.byte	0x0
 1342 00b0 0B       		.uleb128 0xb
 1343 00b1 05       		.uleb128 0x5
 1344 00b2 00       		.byte	0x0
 1345 00b3 03       		.uleb128 0x3
 1346 00b4 0E       		.uleb128 0xe
 1347 00b5 3A       		.uleb128 0x3a
 1348 00b6 0B       		.uleb128 0xb
 1349 00b7 3B       		.uleb128 0x3b
 1350 00b8 05       		.uleb128 0x5
 1351 00b9 49       		.uleb128 0x49
 1352 00ba 13       		.uleb128 0x13
 1353 00bb 02       		.uleb128 0x2
 1354 00bc 0A       		.uleb128 0xa
 1355 00bd 00       		.byte	0x0
 1356 00be 00       		.byte	0x0
 1357 00bf 0C       		.uleb128 0xc
 1358 00c0 34       		.uleb128 0x34
 1359 00c1 00       		.byte	0x0
 1360 00c2 03       		.uleb128 0x3
 1361 00c3 0E       		.uleb128 0xe
 1362 00c4 3A       		.uleb128 0x3a
 1363 00c5 0B       		.uleb128 0xb
 1364 00c6 3B       		.uleb128 0x3b
 1365 00c7 05       		.uleb128 0x5
 1366 00c8 49       		.uleb128 0x49
 1367 00c9 13       		.uleb128 0x13
 1368 00ca 02       		.uleb128 0x2
 1369 00cb 0A       		.uleb128 0xa
 1370 00cc 00       		.byte	0x0
 1371 00cd 00       		.byte	0x0
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 33


 1372 00ce 00       		.byte	0x0
 1373              		.section	.debug_pubnames,"",%progbits
 1374 0000 1A010000 		.4byte	0x11a
 1375 0004 0200     		.2byte	0x2
 1376 0006 00000000 		.4byte	.Ldebug_info0
 1377 000a 29020000 		.4byte	0x229
 1378 000e 8C000000 		.4byte	0x8c
 1379 0012 436C6F63 		.ascii	"Clock_1_Start\000"
 1379      6B5F315F 
 1379      53746172 
 1379      7400
 1380 0020 A1000000 		.4byte	0xa1
 1381 0024 436C6F63 		.ascii	"Clock_1_Stop\000"
 1381      6B5F315F 
 1381      53746F70 
 1381      00
 1382 0031 B6000000 		.4byte	0xb6
 1383 0035 436C6F63 		.ascii	"Clock_1_StandbyPower\000"
 1383      6B5F315F 
 1383      5374616E 
 1383      64627950 
 1383      6F776572 
 1384 004a DE000000 		.4byte	0xde
 1385 004e 436C6F63 		.ascii	"Clock_1_SetDividerRegister\000"
 1385      6B5F315F 
 1385      53657444 
 1385      69766964 
 1385      65725265 
 1386 0069 3E010000 		.4byte	0x13e
 1387 006d 436C6F63 		.ascii	"Clock_1_GetDividerRegister\000"
 1387      6B5F315F 
 1387      47657444 
 1387      69766964 
 1387      65725265 
 1388 0088 58010000 		.4byte	0x158
 1389 008c 436C6F63 		.ascii	"Clock_1_SetModeRegister\000"
 1389      6B5F315F 
 1389      5365744D 
 1389      6F646552 
 1389      65676973 
 1390 00a4 82010000 		.4byte	0x182
 1391 00a8 436C6F63 		.ascii	"Clock_1_ClearModeRegister\000"
 1391      6B5F315F 
 1391      436C6561 
 1391      724D6F64 
 1391      65526567 
 1392 00c2 AC010000 		.4byte	0x1ac
 1393 00c6 436C6F63 		.ascii	"Clock_1_GetModeRegister\000"
 1393      6B5F315F 
 1393      4765744D 
 1393      6F646552 
 1393      65676973 
 1394 00de C6010000 		.4byte	0x1c6
 1395 00e2 436C6F63 		.ascii	"Clock_1_SetSourceRegister\000"
 1395      6B5F315F 
 1395      53657453 
 1395      6F757263 
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 34


 1395      65526567 
 1396 00fc 0E020000 		.4byte	0x20e
 1397 0100 436C6F63 		.ascii	"Clock_1_GetSourceRegister\000"
 1397      6B5F315F 
 1397      47657453 
 1397      6F757263 
 1397      65526567 
 1398 011a 00000000 		.4byte	0x0
 1399              		.section	.debug_aranges,"",%progbits
 1400 0000 64000000 		.4byte	0x64
 1401 0004 0200     		.2byte	0x2
 1402 0006 00000000 		.4byte	.Ldebug_info0
 1403 000a 04       		.byte	0x4
 1404 000b 00       		.byte	0x0
 1405 000c 0000     		.2byte	0x0
 1406 000e 0000     		.2byte	0x0
 1407 0010 00000000 		.4byte	.LFB0
 1408 0014 26000000 		.4byte	.LFE0-.LFB0
 1409 0018 00000000 		.4byte	.LFB1
 1410 001c 24000000 		.4byte	.LFE1-.LFB1
 1411 0020 00000000 		.4byte	.LFB2
 1412 0024 52000000 		.4byte	.LFE2-.LFB2
 1413 0028 00000000 		.4byte	.LFB3
 1414 002c D4010000 		.4byte	.LFE3-.LFB3
 1415 0030 00000000 		.4byte	.LFB4
 1416 0034 18000000 		.4byte	.LFE4-.LFB4
 1417 0038 00000000 		.4byte	.LFB5
 1418 003c 36000000 		.4byte	.LFE5-.LFB5
 1419 0040 00000000 		.4byte	.LFB6
 1420 0044 3E000000 		.4byte	.LFE6-.LFB6
 1421 0048 00000000 		.4byte	.LFB7
 1422 004c 1C000000 		.4byte	.LFE7-.LFB7
 1423 0050 00000000 		.4byte	.LFB8
 1424 0054 E6000000 		.4byte	.LFE8-.LFB8
 1425 0058 00000000 		.4byte	.LFB9
 1426 005c 1C000000 		.4byte	.LFE9-.LFB9
 1427 0060 00000000 		.4byte	0x0
 1428 0064 00000000 		.4byte	0x0
 1429              		.section	.debug_ranges,"",%progbits
 1430              	.Ldebug_ranges0:
 1431 0000 00000000 		.4byte	.Ltext0
 1432 0004 00000000 		.4byte	.Letext0
 1433 0008 00000000 		.4byte	.LFB0
 1434 000c 26000000 		.4byte	.LFE0
 1435 0010 00000000 		.4byte	.LFB1
 1436 0014 24000000 		.4byte	.LFE1
 1437 0018 00000000 		.4byte	.LFB2
 1438 001c 52000000 		.4byte	.LFE2
 1439 0020 00000000 		.4byte	.LFB3
 1440 0024 D4010000 		.4byte	.LFE3
 1441 0028 00000000 		.4byte	.LFB4
 1442 002c 18000000 		.4byte	.LFE4
 1443 0030 00000000 		.4byte	.LFB5
 1444 0034 36000000 		.4byte	.LFE5
 1445 0038 00000000 		.4byte	.LFB6
 1446 003c 3E000000 		.4byte	.LFE6
 1447 0040 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 35


 1448 0044 1C000000 		.4byte	.LFE7
 1449 0048 00000000 		.4byte	.LFB8
 1450 004c E6000000 		.4byte	.LFE8
 1451 0050 00000000 		.4byte	.LFB9
 1452 0054 1C000000 		.4byte	.LFE9
 1453 0058 00000000 		.4byte	0x0
 1454 005c 00000000 		.4byte	0x0
 1455              		.section	.debug_str,"MS",%progbits,1
 1456              	.LASF6:
 1457 0000 6C6F6E67 		.ascii	"long long int\000"
 1457      206C6F6E 
 1457      6720696E 
 1457      7400
 1458              	.LASF25:
 1459 000e 436C6F63 		.ascii	"Clock_1_GetDividerRegister\000"
 1459      6B5F315F 
 1459      47657444 
 1459      69766964 
 1459      65725265 
 1460              	.LASF16:
 1461 0029 73746174 		.ascii	"state\000"
 1461      6500
 1462              	.LASF21:
 1463 002f 6F6C6444 		.ascii	"oldDivider\000"
 1463      69766964 
 1463      657200
 1464              	.LASF33:
 1465 003a 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Clock_1.c\000"
 1465      6E657261 
 1465      7465645F 
 1465      536F7572 
 1465      63655C50 
 1466              	.LASF15:
 1467 005d 436C6F63 		.ascii	"Clock_1_SetDividerRegister\000"
 1467      6B5F315F 
 1467      53657444 
 1467      69766964 
 1467      65725265 
 1468              	.LASF13:
 1469 0078 436C6F63 		.ascii	"Clock_1_Stop\000"
 1469      6B5F315F 
 1469      53746F70 
 1469      00
 1470              	.LASF1:
 1471 0085 756E7369 		.ascii	"unsigned char\000"
 1471      676E6564 
 1471      20636861 
 1471      7200
 1472              	.LASF12:
 1473 0093 436C6F63 		.ascii	"Clock_1_Start\000"
 1473      6B5F315F 
 1473      53746172 
 1473      7400
 1474              	.LASF19:
 1475 00a1 656E6162 		.ascii	"enabled\000"
 1475      6C656400 
 1476              	.LASF5:
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 36


 1477 00a9 6C6F6E67 		.ascii	"long unsigned int\000"
 1477      20756E73 
 1477      69676E65 
 1477      6420696E 
 1477      7400
 1478              	.LASF3:
 1479 00bb 73686F72 		.ascii	"short unsigned int\000"
 1479      7420756E 
 1479      7369676E 
 1479      65642069 
 1479      6E7400
 1480              	.LASF17:
 1481 00ce 636C6B44 		.ascii	"clkDivider\000"
 1481      69766964 
 1481      657200
 1482              	.LASF30:
 1483 00d9 6F6C6453 		.ascii	"oldSrc\000"
 1483      726300
 1484              	.LASF18:
 1485 00e0 72657374 		.ascii	"restart\000"
 1485      61727400 
 1486              	.LASF11:
 1487 00e8 75696E74 		.ascii	"uint16\000"
 1487      313600
 1488              	.LASF23:
 1489 00ef 636C6B4D 		.ascii	"clkMode\000"
 1489      6F646500 
 1490              	.LASF24:
 1491 00f7 436C6F63 		.ascii	"Clock_1_ClearModeRegister\000"
 1491      6B5F315F 
 1491      436C6561 
 1491      724D6F64 
 1491      65526567 
 1492              	.LASF8:
 1493 0111 756E7369 		.ascii	"unsigned int\000"
 1493      676E6564 
 1493      20696E74 
 1493      00
 1494              	.LASF20:
 1495 011e 63757272 		.ascii	"currSrc\000"
 1495      53726300 
 1496              	.LASF7:
 1497 0126 6C6F6E67 		.ascii	"long long unsigned int\000"
 1497      206C6F6E 
 1497      6720756E 
 1497      7369676E 
 1497      65642069 
 1498              	.LASF26:
 1499 013d 436C6F63 		.ascii	"Clock_1_GetModeRegister\000"
 1499      6B5F315F 
 1499      4765744D 
 1499      6F646552 
 1499      65676973 
 1500              	.LASF22:
 1501 0155 436C6F63 		.ascii	"Clock_1_SetModeRegister\000"
 1501      6B5F315F 
 1501      5365744D 
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 37


 1501      6F646552 
 1501      65676973 
 1502              	.LASF32:
 1503 016d 474E5520 		.ascii	"GNU C 4.4.1\000"
 1503      4320342E 
 1503      342E3100 
 1504              	.LASF9:
 1505 0179 63686172 		.ascii	"char\000"
 1505      00
 1506              	.LASF29:
 1507 017e 63757272 		.ascii	"currDiv\000"
 1507      44697600 
 1508              	.LASF2:
 1509 0186 73686F72 		.ascii	"short int\000"
 1509      7420696E 
 1509      7400
 1510              	.LASF10:
 1511 0190 75696E74 		.ascii	"uint8\000"
 1511      3800
 1512              	.LASF27:
 1513 0196 436C6F63 		.ascii	"Clock_1_SetSourceRegister\000"
 1513      6B5F315F 
 1513      53657453 
 1513      6F757263 
 1513      65526567 
 1514              	.LASF4:
 1515 01b0 6C6F6E67 		.ascii	"long int\000"
 1515      20696E74 
 1515      00
 1516              	.LASF28:
 1517 01b9 636C6B53 		.ascii	"clkSource\000"
 1517      6F757263 
 1517      6500
 1518              	.LASF34:
 1519 01c3 493A5C43 		.ascii	"I:\\ControllerKinect\\Transmitter\\Transmitter.cyds"
 1519      6F6E7472 
 1519      6F6C6C65 
 1519      724B696E 
 1519      6563745C 
 1520 01f3 6E00     		.ascii	"n\000"
 1521              	.LASF0:
 1522 01f5 7369676E 		.ascii	"signed char\000"
 1522      65642063 
 1522      68617200 
 1523              	.LASF14:
 1524 0201 436C6F63 		.ascii	"Clock_1_StandbyPower\000"
 1524      6B5F315F 
 1524      5374616E 
 1524      64627950 
 1524      6F776572 
 1525              	.LASF31:
 1526 0216 436C6F63 		.ascii	"Clock_1_GetSourceRegister\000"
 1526      6B5F315F 
 1526      47657453 
 1526      6F757263 
 1526      65526567 
 1527              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
ARM GAS  C:\Users\awkward\AppData\Local\Temp\ccuJD31A.s 			page 38


