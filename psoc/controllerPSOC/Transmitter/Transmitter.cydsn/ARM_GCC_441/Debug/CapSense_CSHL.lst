ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"CapSense_CSHL.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 69020000 		.text
  20      02006600 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.comm	CapSense_rawFilterData1,14,4
  24              		.global	CapSense_SensorBaseline
  25              		.bss
  26              		.align	2
  27              		.type	CapSense_SensorBaseline, %object
  28              		.size	CapSense_SensorBaseline, 14
  29              	CapSense_SensorBaseline:
  30 0000 00000000 		.space	14
  30      00000000 
  30      00000000 
  30      0000
  31              		.global	CapSense_SensorBaselineLow
  32 000e 0000     		.align	2
  33              		.type	CapSense_SensorBaselineLow, %object
  34              		.size	CapSense_SensorBaselineLow, 7
  35              	CapSense_SensorBaselineLow:
  36 0010 00000000 		.space	7
  36      000000
  37              		.global	CapSense_SensorSignal
  38 0017 00       		.align	2
  39              		.type	CapSense_SensorSignal, %object
  40              		.size	CapSense_SensorSignal, 7
  41              	CapSense_SensorSignal:
  42 0018 00000000 		.space	7
  42      000000
  43              		.global	CapSense_SensorOnMask
  44 001f 00       		.align	2
  45              		.type	CapSense_SensorOnMask, %object
  46              		.size	CapSense_SensorOnMask, 1
  47              	CapSense_SensorOnMask:
  48 0020 00       		.space	1
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 2


  49              		.comm	CapSense_LowBaselineResetCnt,7,4
  50 0021 000000   		.align	2
  51              	CapSense_centroid:
  52 0024 000000   		.space	3
  53              		.global	CapSense_fingerThreshold
  54              		.data
  55              		.align	2
  56              		.type	CapSense_fingerThreshold, %object
  57              		.size	CapSense_fingerThreshold, 3
  58              	CapSense_fingerThreshold:
  59 0000 64       		.byte	100
  60 0001 64       		.byte	100
  61 0002 64       		.byte	100
  62              		.global	CapSense_noiseThreshold
  63 0003 00       		.align	2
  64              		.type	CapSense_noiseThreshold, %object
  65              		.size	CapSense_noiseThreshold, 3
  66              	CapSense_noiseThreshold:
  67 0004 14       		.byte	20
  68 0005 14       		.byte	20
  69 0006 14       		.byte	20
  70              		.global	CapSense_hysteresis
  71 0007 00       		.align	2
  72              		.type	CapSense_hysteresis, %object
  73              		.size	CapSense_hysteresis, 3
  74              	CapSense_hysteresis:
  75 0008 00       		.byte	0
  76 0009 0A       		.byte	10
  77 000a 0A       		.byte	10
  78              		.global	CapSense_debounce
  79 000b 00       		.align	2
  80              		.type	CapSense_debounce, %object
  81              		.size	CapSense_debounce, 3
  82              	CapSense_debounce:
  83 000c 01       		.byte	1
  84 000d 01       		.byte	1
  85 000e 01       		.byte	1
  86              		.global	CapSense_debounceCounter
  87              		.bss
  88 0027 00       		.align	2
  89              		.type	CapSense_debounceCounter, %object
  90              		.size	CapSense_debounceCounter, 3
  91              	CapSense_debounceCounter:
  92 0028 000000   		.space	3
  93              		.global	CapSense_rawDataIndex
  94 002b 00       		.section	.rodata
  95              		.align	2
  96              		.type	CapSense_rawDataIndex, %object
  97              		.size	CapSense_rawDataIndex, 3
  98              	CapSense_rawDataIndex:
  99 0000 00       		.byte	0
 100 0001 05       		.byte	5
 101 0002 06       		.byte	6
 102              		.global	CapSense_numberOfSensors
 103 0003 00       		.align	2
 104              		.type	CapSense_numberOfSensors, %object
 105              		.size	CapSense_numberOfSensors, 3
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 3


 106              	CapSense_numberOfSensors:
 107 0004 05       		.byte	5
 108 0005 01       		.byte	1
 109 0006 01       		.byte	1
 110              		.global	CapSense_centroidMult
 111 0007 00       		.align	2
 112              		.type	CapSense_centroidMult, %object
 113              		.size	CapSense_centroidMult, 2
 114              	CapSense_centroidMult:
 115 0008 0019     		.short	6400
 116              		.global	CapSense_posFiltersMask
 117 000a 0000     		.align	2
 118              		.type	CapSense_posFiltersMask, %object
 119              		.size	CapSense_posFiltersMask, 1
 120              	CapSense_posFiltersMask:
 121 000c 08       		.byte	8
 122              		.global	CapSense_posFiltersData
 123 000d 000000   		.data
 124 000f 00       		.align	2
 125              		.type	CapSense_posFiltersData, %object
 126              		.size	CapSense_posFiltersData, 3
 127              	CapSense_posFiltersData:
 128 0010 01       		.byte	1
 129 0011 00       		.byte	0
 130 0012 00       		.byte	0
 131 0013 00       		.section	.text.CapSense_BaseInit,"ax",%progbits
 132              		.align	2
 133              		.global	CapSense_BaseInit
 134              		.thumb
 135              		.thumb_func
 136              		.type	CapSense_BaseInit, %function
 137              	CapSense_BaseInit:
 138              	.LFB0:
 139              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Version 3.10
   4:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Copyright 2008-2011, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  20:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* SmartSense functions */
  21:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  22:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     extern void CapSense_CalculateThresholds(uint8 SensorNumber);
  23:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* End (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 4


  24:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  25:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* Median filter function prototype */
  26:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  27:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
  28:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3) \
  29:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ;
  30:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* End CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
  31:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  32:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* Averaging filter function prototype */
  33:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
  34:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
  35:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3) \
  36:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ;
  37:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* End CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
  38:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  39:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* IIR2Filter(1/2prev + 1/2cur) filter function prototype */
  40:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) || \
  41:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER) )
  42:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2) ;
  43:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* End CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
  44:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  45:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* IIR4Filter(3/4prev + 1/4cur) filter function prototype */
  46:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) || \
  47:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER) )
  48:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2) ;
  49:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* End CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
  50:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  51:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* IIR8Filter(7/8prev + 1/8cur) filter function prototype - RawCounts only */
  52:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
  53:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2) ;
  54:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* End CapSense_RAW_FILTER_MASK */
  55:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  56:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* IIR16Filter(15/16prev + 1/16cur) filter function prototype - RawCounts only */
  57:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
  58:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2) ;
  59:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* End CapSense_RAW_FILTER_MASK */
  60:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  61:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* JitterFilter filter function prototype */
  62:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) || \
  63:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER) )
  64:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2) ;
  65:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* End CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
  66:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  67:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* Storage of filters data */
  68:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  69:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  70:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  71:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  72:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  73:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  74:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #elif ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)   || \
  75:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)   || \
  76:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) || \
  77:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)   || \
  78:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) )
  79:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
  80:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 5


  81:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  82:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #else
  83:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* No Raw filters */
  84:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif  /* End CapSense_RAW_FILTER_MASK */
  85:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  86:.\Generated_Source\PSoC5/CapSense_CSHL.c **** extern uint16 CapSense_SensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  87:.\Generated_Source\PSoC5/CapSense_CSHL.c **** extern uint8 CapSense_SensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  88:.\Generated_Source\PSoC5/CapSense_CSHL.c **** extern const uint8 CYCODE CapSense_widgetNumber[];
  89:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  90:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_SensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  91:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_SensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  92:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_SensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  93:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_SensorOnMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {0u};
  94:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  95:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_LowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  96:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  97:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* Helps while centroid calulation */
  98:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if (CapSense_TOTAL_CENTROIDS_COUNT)
  99:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     static uint8 CapSense_centroid[3];
 100:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif  /* End (CapSense_TOTAL_CENTROIDS_COUNT) */
 101:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 102:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[] = {
 103:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     100u, 100u, 100u, 
 104:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 105:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 106:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[] = {
 107:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     20u, 20u, 20u, 
 108:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 109:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 110:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_hysteresis[] = {
 111:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 10u, 10u, 
 112:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 113:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 114:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
 115:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, 1u, 1u, 
 116:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 117:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 118:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounceCounter[] = {
 119:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 0u, 0u, 
 120:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 121:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 122:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_rawDataIndex[] = {
 123:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, /* LinearSlider0__LS */
 124:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     5u, /* Button0__BTN */
 125:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     6u, /* Button1__BTN */
 126:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 127:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 128:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 129:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_numberOfSensors[] = {
 130:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
 131:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button0__BTN */
 132:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
 133:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 134:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 135:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 136:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint16 CYCODE CapSense_centroidMult[] = {
 137:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     6400u, 
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 6


 138:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 139:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 140:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_posFiltersMask[] = {
 141:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0x8u, 
 142:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 143:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 144:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_posFiltersData[] = {
 145:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, 0u, 0u, 
 146:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 147:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 148:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 149:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 150:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 151:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 152:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 153:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 154:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 155:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_SensorBaseline[sensor] array element with an 
 156:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal to raw count value. 
 157:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Resets to zero CapSense_SensorBaselineLow[senesor] and 
 158:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorSignal[sensor] array element.
 159:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads CapSense_debounceCounter[sensor] array element with initial 
 160:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  value equal CapSense_debounce[].
 161:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 162:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 163:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 164:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 165:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 166:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 167:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 168:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 169:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 170:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 171:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 172:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorBaseline[]    - used to store baseline value.
 173:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorBaselineLow[] - used to store fraction byte of 
 174:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 175:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorSignal[]      - used to store diffence between 
 176:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 177:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 178:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 179:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 180:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 181:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 182:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 183:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 184:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 185:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 186:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 187:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 188:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 189:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 190:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_BaseInit(uint8 sensor)
 191:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 140              		.loc 1 191 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 7


 143              		@ frame_needed = 1, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145 0000 80B4     		push	{r7}
 146              	.LCFI0:
 147              		.cfi_def_cfa_offset 4
 148 0002 85B0     		sub	sp, sp, #20
 149              	.LCFI1:
 150              		.cfi_def_cfa_offset 24
 151 0004 00AF     		add	r7, sp, #0
 152              		.cfi_offset 7, -4
 153              	.LCFI2:
 154              		.cfi_def_cfa_register 7
 155 0006 0346     		mov	r3, r0
 156 0008 FB71     		strb	r3, [r7, #7]
 192:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 193:.\Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 194:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 157              		.loc 1 194 0
 158 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 159 000c 40F20003 		movw	r3, #:lower16:CapSense_widgetNumber
 160 0010 C0F20003 		movt	r3, #:upper16:CapSense_widgetNumber
 161 0014 9B5C     		ldrb	r3, [r3, r2]
 162 0016 FB73     		strb	r3, [r7, #15]
 195:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 196:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 197:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 198:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 debounceIndex;
 199:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* End (CapSense_TOTAL_MATRIX_BUTTONS_COUNT != 0u) */
 200:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 201:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 202:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 203:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 204:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 205:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* End CapSense_TOTAL_GENERICS_COUNT */
 206:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 207:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Initialize Baseline */
 208:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_SensorBaseline[sensor] = CapSense_SensorRaw[sensor];
 163              		.loc 1 208 0
 164 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 165 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 166 001c 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 167 0020 C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 168 0024 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 169 0028 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 170 002c C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 171 0030 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 209:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_SensorBaselineLow[sensor] = 0u;
 172              		.loc 1 209 0
 173 0034 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 174 0036 40F20003 		movw	r3, #:lower16:CapSense_SensorBaselineLow
 175 003a C0F20003 		movt	r3, #:upper16:CapSense_SensorBaselineLow
 176 003e 4FF00001 		mov	r1, #0
 177 0042 9954     		strb	r1, [r3, r2]
 210:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_SensorSignal[sensor] = 0u;
 178              		.loc 1 210 0
 179 0044 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 180 0046 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 8


 181 004a C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 182 004e 4FF00001 		mov	r1, #0
 183 0052 9954     		strb	r1, [r3, r2]
 211:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 212:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if(widget > CapSense_END_OF_TOUCH_PAD_INDEX)
 184              		.loc 1 212 0
 185 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 186 0056 002B     		cmp	r3, #0
 187 0058 0DD0     		beq	.L2
 213:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 214:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_debounceCounter[widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1)] =  CapSense_deboun
 188              		.loc 1 214 0
 189 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 190 005c 03F1FF32 		add	r2, r3, #-1
 191 0060 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 192 0062 40F20003 		movw	r3, #:lower16:CapSense_debounce
 193 0066 C0F20003 		movt	r3, #:upper16:CapSense_debounce
 194 006a 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 195 006c 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 196 0070 C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 197 0074 9954     		strb	r1, [r3, r2]
 198              	.L2:
 215:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 216:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 217:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 218:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) ||\
 219:.\Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 220:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 221:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_SensorRaw[sensor];
 222:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_SensorRaw[sensor];
 223:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 224:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 225:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 226:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 227:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 228:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 229:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             
 230:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_SensorRaw[sensor];
 199              		.loc 1 230 0
 200 0076 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 201 0078 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 202 007a 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 203 007e C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 204 0082 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 205 0086 40F20003 		movw	r3, #:lower16:CapSense_rawFilterData1
 206 008a C0F20003 		movt	r3, #:upper16:CapSense_rawFilterData1
 207 008e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 231:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 232:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 233:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 234:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* End CapSense_RAW_FILTER_MASK */
 235:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 236:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 237:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 238:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 239:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* End CapSense_TOTAL_GENERICS_COUNT */
 240:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 9


 208              		.loc 1 240 0
 209 0092 07F11407 		add	r7, r7, #20
 210 0096 BD46     		mov	sp, r7
 211 0098 80BC     		pop	{r7}
 212 009a 7047     		bx	lr
 213              		.cfi_endproc
 214              	.LFE0:
 215              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 216              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 217              		.align	2
 218              		.global	CapSense_InitializeSensorBaseline
 219              		.thumb
 220              		.thumb_func
 221              		.type	CapSense_InitializeSensorBaseline, %function
 222              	CapSense_InitializeSensorBaseline:
 223              	.LFB1:
 241:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 242:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 243:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 244:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 245:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 246:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 247:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 248:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_SensorBaseline[sensor] array element with an 
 249:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 250:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 251:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 252:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  enabled.
 253:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 254:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 255:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 256:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 257:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 258:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 259:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 260:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 261:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 262:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 263:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 264:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint8 sensor)
 265:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 224              		.loc 1 265 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 8
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228 0000 80B5     		push	{r7, lr}
 229              	.LCFI3:
 230              		.cfi_def_cfa_offset 8
 231 0002 82B0     		sub	sp, sp, #8
 232              	.LCFI4:
 233              		.cfi_def_cfa_offset 16
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_offset 14, -4
 236              		.cfi_offset 7, -8
 237              	.LCFI5:
 238              		.cfi_def_cfa_register 7
 239 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 10


 240 0008 FB71     		strb	r3, [r7, #7]
 266:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Scan sensor */
 267:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 241              		.loc 1 267 0
 242 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 243 000c 1846     		mov	r0, r3
 244 000e FFF7FEFF 		bl	CapSense_ScanSensor
 245              	.L5:
 268:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u) {;}
 246              		.loc 1 268 0
 247 0012 FFF7FEFF 		bl	CapSense_IsBusy
 248 0016 0346     		mov	r3, r0
 249 0018 002B     		cmp	r3, #0
 250 001a FAD1     		bne	.L5
 269:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 270:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 271:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 272:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(sensor);
 251              		.loc 1 272 0
 252 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 253 001e 1846     		mov	r0, r3
 254 0020 FFF7FEFF 		bl	CapSense_BaseInit
 273:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 274:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 275:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 276:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 277:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 278:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 279:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 280:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 281:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 282:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 283:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 284:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 285:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor + CapSense_TOTAL_SENSOR_COUNT__CH0);
 286:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 287:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 288:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* End (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
 289:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 255              		.loc 1 289 0
 256 0024 07F10807 		add	r7, r7, #8
 257 0028 BD46     		mov	sp, r7
 258 002a 80BD     		pop	{r7, pc}
 259              		.cfi_endproc
 260              	.LFE1:
 261              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 262              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 263              		.align	2
 264              		.global	CapSense_InitializeAllBaselines
 265              		.thumb
 266              		.thumb_func
 267              		.type	CapSense_InitializeAllBaselines, %function
 268              	CapSense_InitializeAllBaselines:
 269              	.LFB2:
 290:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 291:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 292:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 11


 293:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 294:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 295:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 296:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 297:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to loads the 
 298:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorBaseline[] array with an initial values by scanning 
 299:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 300:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 301:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 302:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 303:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 304:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 305:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 306:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 307:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 308:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 309:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 310:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 311:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 312:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 313:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 270              		.loc 1 313 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 8
 273              		@ frame_needed = 1, uses_anonymous_args = 0
 274 0000 80B5     		push	{r7, lr}
 275              	.LCFI6:
 276              		.cfi_def_cfa_offset 8
 277 0002 82B0     		sub	sp, sp, #8
 278              	.LCFI7:
 279              		.cfi_def_cfa_offset 16
 280 0004 00AF     		add	r7, sp, #0
 281              		.cfi_offset 14, -4
 282              		.cfi_offset 7, -8
 283              	.LCFI8:
 284              		.cfi_def_cfa_register 7
 314:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 315:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 316:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 317:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 285              		.loc 1 317 0
 286 0006 4FF00003 		mov	r3, #0
 287 000a FB71     		strb	r3, [r7, #7]
 288 000c 07E0     		b	.L8
 289              	.L9:
 318:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 319:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 290              		.loc 1 319 0
 291 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 292 0010 1846     		mov	r0, r3
 293 0012 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 294              		.loc 1 317 0
 295 0016 FB79     		ldrb	r3, [r7, #7]
 296 0018 03F10103 		add	r3, r3, #1
 297 001c FB71     		strb	r3, [r7, #7]
 298              	.L8:
 299 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 12


 300 0020 062B     		cmp	r3, #6
 301 0022 F4D9     		bls	.L9
 320:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 321:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 302              		.loc 1 321 0
 303 0024 07F10807 		add	r7, r7, #8
 304 0028 BD46     		mov	sp, r7
 305 002a 80BD     		pop	{r7, pc}
 306              		.cfi_endproc
 307              	.LFE2:
 308              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 309              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 310              		.align	2
 311              		.global	CapSense_InitializeEnabledBaselines
 312              		.thumb
 313              		.thumb_func
 314              		.type	CapSense_InitializeEnabledBaselines, %function
 315              	CapSense_InitializeEnabledBaselines:
 316              	.LFB3:
 322:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 323:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 324:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 325:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 326:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 327:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 328:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 329:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 330:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 331:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 332:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 333:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 334:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 335:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 336:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 337:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 338:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 339:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 340:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 341:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 342:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 343:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 344:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 345:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 317              		.loc 1 345 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 8
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321 0000 80B5     		push	{r7, lr}
 322              	.LCFI9:
 323              		.cfi_def_cfa_offset 8
 324 0002 82B0     		sub	sp, sp, #8
 325              	.LCFI10:
 326              		.cfi_def_cfa_offset 16
 327 0004 00AF     		add	r7, sp, #0
 328              		.cfi_offset 14, -4
 329              		.cfi_offset 7, -8
 330              	.LCFI11:
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 13


 331              		.cfi_def_cfa_register 7
 346:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 347:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 348:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 349:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 350:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 332              		.loc 1 350 0
 333 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 334              	.L12:
 351:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u){;}
 335              		.loc 1 351 0
 336 000a FFF7FEFF 		bl	CapSense_IsBusy
 337 000e 0346     		mov	r3, r0
 338 0010 002B     		cmp	r3, #0
 339 0012 FAD1     		bne	.L12
 352:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 353:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 340              		.loc 1 353 0
 341 0014 4FF00003 		mov	r3, #0
 342 0018 7B71     		strb	r3, [r7, #5]
 343 001a 28E0     		b	.L13
 344              	.L15:
 354:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 355:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 345              		.loc 1 355 0
 346 001c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 347 001e 4FEAD303 		lsr	r3, r3, #3
 348 0022 BB71     		strb	r3, [r7, #6]
 356:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 349              		.loc 1 356 0
 350 0024 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 351 0026 03F00703 		and	r3, r3, #7
 352 002a 4FF00102 		mov	r2, #1
 353 002e 02FA03F3 		lsl	r3, r2, r3
 354 0032 FB71     		strb	r3, [r7, #7]
 357:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 358:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 359:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_SensorEnableMask[pos] & enMask) == 0u)
 355              		.loc 1 359 0
 356 0034 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 357 0036 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 358 003a C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 359 003e 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 360 0040 FB79     		ldrb	r3, [r7, #7]
 361 0042 02EA0303 		and	r3, r2, r3
 362 0046 DBB2     		uxtb	r3, r3
 363 0048 002B     		cmp	r3, #0
 364 004a 08D1     		bne	.L14
 360:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 361:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_SensorRaw[i] = 0u;
 365              		.loc 1 361 0
 366 004c 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 367 004e 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 368 0052 C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 369 0056 4FF00001 		mov	r1, #0
 370 005a 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 371              	.L14:
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 14


 362:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 363:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 364:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize baselines */
 365:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(i);
 372              		.loc 1 365 0
 373 005e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 374 0060 1846     		mov	r0, r3
 375 0062 FFF7FEFF 		bl	CapSense_BaseInit
 376              		.loc 1 353 0
 377 0066 7B79     		ldrb	r3, [r7, #5]
 378 0068 03F10103 		add	r3, r3, #1
 379 006c 7B71     		strb	r3, [r7, #5]
 380              	.L13:
 381 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 382 0070 062B     		cmp	r3, #6
 383 0072 D3D9     		bls	.L15
 366:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 367:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }  
 384              		.loc 1 367 0
 385 0074 07F10807 		add	r7, r7, #8
 386 0078 BD46     		mov	sp, r7
 387 007a 80BD     		pop	{r7, pc}
 388              		.cfi_endproc
 389              	.LFE3:
 390              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 391              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 392              		.align	2
 393              		.global	CapSense_UpdateSensorBaseline
 394              		.thumb
 395              		.thumb_func
 396              		.type	CapSense_UpdateSensorBaseline, %function
 397              	CapSense_UpdateSensorBaseline:
 398              	.LFB4:
 368:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 369:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 370:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 372:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 373:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 374:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 375:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Updates the CapSense_SensorBaseline[sensor] array element using the 
 376:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 377:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 378:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  it in CapSense_SensorSignal[sensor]. 
 379:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 380:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 381:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 382:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  that noise threshold.
 383:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 384:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  calculation.
 385:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 386:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 387:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 388:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 389:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 390:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 391:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 15


 392:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 393:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorBaseline[]    - used to store baseline value.
 394:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorBaselineLow[] - used to store fraction byte of 
 395:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 396:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorSignal[]      - used to store diffence between 
 397:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 398:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 399:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 400:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 401:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 402:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 403:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 404:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 405:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 406:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 407:.\Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint8 sensor)
 408:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 399              		.loc 1 408 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 24
 402              		@ frame_needed = 1, uses_anonymous_args = 0
 403 0000 80B5     		push	{r7, lr}
 404              	.LCFI12:
 405              		.cfi_def_cfa_offset 8
 406 0002 86B0     		sub	sp, sp, #24
 407              	.LCFI13:
 408              		.cfi_def_cfa_offset 32
 409 0004 00AF     		add	r7, sp, #0
 410              		.cfi_offset 14, -4
 411              		.cfi_offset 7, -8
 412              	.LCFI14:
 413              		.cfi_def_cfa_register 7
 414 0006 0346     		mov	r3, r0
 415 0008 FB71     		strb	r3, [r7, #7]
 409:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint32 calc;
 410:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 tempRaw;
 411:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 filteredRawData;
 412:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 416              		.loc 1 412 0
 417 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 418 000c 40F20003 		movw	r3, #:lower16:CapSense_widgetNumber
 419 0010 C0F20003 		movt	r3, #:upper16:CapSense_widgetNumber
 420 0014 9B5C     		ldrb	r3, [r3, r2]
 421 0016 BB75     		strb	r3, [r7, #22]
 413:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 422              		.loc 1 413 0
 423 0018 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 424 001a 40F20003 		movw	r3, #:lower16:CapSense_noiseThreshold
 425 001e C0F20003 		movt	r3, #:upper16:CapSense_noiseThreshold
 426 0022 9B5C     		ldrb	r3, [r3, r2]
 427 0024 FB75     		strb	r3, [r7, #23]
 414:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 415:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 416:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 417:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 418:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 419:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* End CapSense_TOTAL_GENERICS_COUNT */
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 16


 420:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 421:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     filteredRawData = CapSense_SensorRaw[sensor];
 428              		.loc 1 421 0
 429 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 430 0028 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 431 002c C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 432 0030 33F81230 		ldrh	r3, [r3, r2, lsl #1]	@ movhi
 433 0034 BB82     		strh	r3, [r7, #20]	@ movhi
 422:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 423:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 424:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 425:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 426:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                         CapSense_rawFilterData2[sensor]);
 427:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 428:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 429:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 430:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 431:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 432:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor]
 433:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                            CapSense_rawFilterData2[sensor]);
 434:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 435:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 436:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 437:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 438:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 439:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 440:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 441:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 442:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 434              		.loc 1 442 0
 435 0036 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 436 0038 40F20003 		movw	r3, #:lower16:CapSense_rawFilterData1
 437 003c C0F20003 		movt	r3, #:upper16:CapSense_rawFilterData1
 438 0040 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 439 0044 BA8A     		ldrh	r2, [r7, #20]
 440 0046 1046     		mov	r0, r2
 441 0048 1946     		mov	r1, r3
 442 004a FFF7FEFF 		bl	CapSense_IIR4Filter
 443 004e 0346     		mov	r3, r0
 444 0050 BB82     		strh	r3, [r7, #20]	@ movhi
 443:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 445              		.loc 1 443 0
 446 0052 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 447 0054 40F20003 		movw	r3, #:lower16:CapSense_rawFilterData1
 448 0058 C0F20003 		movt	r3, #:upper16:CapSense_rawFilterData1
 449 005c B98A     		ldrh	r1, [r7, #20]	@ movhi
 450 005e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 444:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             
 445:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 446:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 447:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 448:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 449:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 450:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 451:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 452:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 453:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 17


 454:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 455:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 456:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 457:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 458:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 459:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* End (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 460:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 461:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 462:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_CalculateThresholds(sensor);
 451              		.loc 1 462 0
 452 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453 0064 1846     		mov	r0, r3
 454 0066 FFF7FEFF 		bl	CapSense_CalculateThresholds
 463:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* End (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 464:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 465:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 466:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Baseline calculation */
 467:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 468:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_SensorBaseline[sensor])
 455              		.loc 1 468 0
 456 006a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 457 006c 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 458 0070 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 459 0074 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 460 0078 BA8A     		ldrh	r2, [r7, #20]
 461 007a 9A42     		cmp	r2, r3
 462 007c 0ED3     		bcc	.L18
 469:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 470:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_SensorBaseline[sensor];
 463              		.loc 1 470 0
 464 007e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 465 0080 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 466 0084 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 467 0088 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 468 008c BA8A     		ldrh	r2, [r7, #20]	@ movhi
 469 008e C3EB0203 		rsb	r3, r3, r2
 470 0092 7B82     		strh	r3, [r7, #18]	@ movhi
 471:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 471              		.loc 1 471 0
 472 0094 4FF00103 		mov	r3, #1
 473 0098 BB75     		strb	r3, [r7, #22]
 474 009a 0DE0     		b	.L19
 475              	.L18:
 472:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 473:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 474:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 475:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = CapSense_SensorBaseline[sensor] - filteredRawData;
 476              		.loc 1 475 0
 477 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 478 009e 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 479 00a2 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 480 00a6 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 481 00aa BB8A     		ldrh	r3, [r7, #20]	@ movhi
 482 00ac C3EB0203 		rsb	r3, r3, r2
 483 00b0 7B82     		strh	r3, [r7, #18]	@ movhi
 476:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 484              		.loc 1 476 0
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 18


 485 00b2 4FF00003 		mov	r3, #0
 486 00b6 BB75     		strb	r3, [r7, #22]
 487              	.L19:
 477:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 478:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 479:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 488              		.loc 1 479 0
 489 00b8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 490 00ba 002B     		cmp	r3, #0
 491 00bc 26D1     		bne	.L20
 492 00be 7B8A     		ldrh	r3, [r7, #18]
 493 00c0 142B     		cmp	r3, #20
 494 00c2 23D9     		bls	.L20
 480:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 481:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_LowBaselineResetCnt[sensor] >= CapSense_LOW_BASELINE_RESET)
 495              		.loc 1 481 0
 496 00c4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 497 00c6 40F20003 		movw	r3, #:lower16:CapSense_LowBaselineResetCnt
 498 00ca C0F20003 		movt	r3, #:upper16:CapSense_LowBaselineResetCnt
 499 00ce 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 500 00d0 042B     		cmp	r3, #4
 501 00d2 0CD9     		bls	.L21
 482:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 483:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 502              		.loc 1 483 0
 503 00d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 504 00d6 1846     		mov	r0, r3
 505 00d8 FFF7FEFF 		bl	CapSense_BaseInit
 484:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_LowBaselineResetCnt[sensor] = 0;
 506              		.loc 1 484 0
 507 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 508 00de 40F20003 		movw	r3, #:lower16:CapSense_LowBaselineResetCnt
 509 00e2 C0F20003 		movt	r3, #:upper16:CapSense_LowBaselineResetCnt
 510 00e6 4FF00001 		mov	r1, #0
 511 00ea 9954     		strb	r1, [r3, r2]
 512              		.loc 1 479 0
 513 00ec 56E0     		b	.L23
 514              	.L21:
 485:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 486:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 487:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 488:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_LowBaselineResetCnt[sensor]++;
 515              		.loc 1 488 0
 516 00ee FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 517 00f0 40F20003 		movw	r3, #:lower16:CapSense_LowBaselineResetCnt
 518 00f4 C0F20003 		movt	r3, #:upper16:CapSense_LowBaselineResetCnt
 519 00f8 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 520 00fa 03F10103 		add	r3, r3, #1
 521 00fe D9B2     		uxtb	r1, r3
 522 0100 40F20003 		movw	r3, #:lower16:CapSense_LowBaselineResetCnt
 523 0104 C0F20003 		movt	r3, #:upper16:CapSense_LowBaselineResetCnt
 524 0108 9954     		strb	r1, [r3, r2]
 525              		.loc 1 479 0
 526 010a 47E0     		b	.L23
 527              	.L20:
 489:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 490:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 19


 491:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 492:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 493:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 494:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 495:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 528              		.loc 1 495 0
 529 010c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 530 010e 7A8A     		ldrh	r2, [r7, #18]
 531 0110 9A42     		cmp	r2, r3
 532 0112 05D9     		bls	.L24
 533 0114 7B8A     		ldrh	r3, [r7, #18]
 534 0116 132B     		cmp	r3, #19
 535 0118 40D8     		bhi	.L23
 536 011a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 537 011c 002B     		cmp	r3, #0
 538 011e 3DD1     		bne	.L23
 539              	.L24:
 496:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 497:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                    && widget == 0))
 498:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 499:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 500:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 501:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc = (uint32) CapSense_SensorBaseline[sensor] << 8u;
 540              		.loc 1 501 0
 541 0120 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 542 0122 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 543 0126 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 544 012a 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 545 012e 4FEA0323 		lsl	r3, r3, #8
 546 0132 FB60     		str	r3, [r7, #12]
 502:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_SensorBaselineLow[sensor];
 547              		.loc 1 502 0
 548 0134 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 549 0136 40F20003 		movw	r3, #:lower16:CapSense_SensorBaselineLow
 550 013a C0F20003 		movt	r3, #:upper16:CapSense_SensorBaselineLow
 551 013e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 552 0140 FA68     		ldr	r2, [r7, #12]
 553 0142 42EA0303 		orr	r3, r2, r3
 554 0146 FB60     		str	r3, [r7, #12]
 503:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 504:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 505:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc += filteredRawData;
 555              		.loc 1 505 0
 556 0148 BB8A     		ldrh	r3, [r7, #20]
 557 014a FA68     		ldr	r2, [r7, #12]
 558 014c 1344     		add	r3, r2, r3
 559 014e FB60     		str	r3, [r7, #12]
 506:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 507:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 508:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc -= CapSense_SensorBaseline[sensor];
 560              		.loc 1 508 0
 561 0150 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 562 0152 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 563 0156 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 564 015a 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 565 015e FA68     		ldr	r2, [r7, #12]
 566 0160 C3EB0203 		rsb	r3, r3, r2
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 20


 567 0164 FB60     		str	r3, [r7, #12]
 509:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 510:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 511:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_SensorBaseline[sensor] = ((uint16) (calc >> 8u));
 568              		.loc 1 511 0
 569 0166 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 570 0168 FB68     		ldr	r3, [r7, #12]
 571 016a 4FEA1323 		lsr	r3, r3, #8
 572 016e 99B2     		uxth	r1, r3
 573 0170 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 574 0174 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 575 0178 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 512:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_SensorBaselineLow[sensor] = ((uint8) calc);
 576              		.loc 1 512 0
 577 017c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 578 017e FB68     		ldr	r3, [r7, #12]
 579 0180 D9B2     		uxtb	r1, r3
 580 0182 40F20003 		movw	r3, #:lower16:CapSense_SensorBaselineLow
 581 0186 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaselineLow
 582 018a 9954     		strb	r1, [r3, r2]
 513:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 514:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_LowBaselineResetCnt[sensor] = 0;
 583              		.loc 1 514 0
 584 018c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 585 018e 40F20003 		movw	r3, #:lower16:CapSense_LowBaselineResetCnt
 586 0192 C0F20003 		movt	r3, #:upper16:CapSense_LowBaselineResetCnt
 587 0196 4FF00001 		mov	r1, #0
 588 019a 9954     		strb	r1, [r3, r2]
 589              	.L23:
 515:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 516:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 517:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 518:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 519:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 520:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 521:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 590              		.loc 1 521 0
 591 019c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 592 019e 7A8A     		ldrh	r2, [r7, #18]
 593 01a0 9A42     		cmp	r2, r3
 594 01a2 17D9     		bls	.L25
 595 01a4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 596 01a6 002B     		cmp	r3, #0
 597 01a8 14D0     		beq	.L25
 522:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 523:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 524:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 525:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 598              		.loc 1 525 0
 599 01aa 7B8A     		ldrh	r3, [r7, #18]
 600 01ac FF2B     		cmp	r3, #255
 601 01ae 08D9     		bls	.L26
 526:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 527:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_SensorSignal[sensor] = 0xFFu;
 602              		.loc 1 527 0
 603 01b0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 604 01b2 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 21


 605 01b6 C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 606 01ba 4FF0FF31 		mov	r1, #-1
 607 01be 9954     		strb	r1, [r3, r2]
 608              		.loc 1 521 0
 609 01c0 10E0     		b	.L29
 610              	.L26:
 528:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 529:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else 
 530:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 531:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_SensorSignal[sensor] = ((uint8) tempRaw);
 611              		.loc 1 531 0
 612 01c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 613 01c4 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 614 01c6 D9B2     		uxtb	r1, r3
 615 01c8 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 616 01cc C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 617 01d0 9954     		strb	r1, [r3, r2]
 618              		.loc 1 521 0
 619 01d2 07E0     		b	.L29
 620              	.L25:
 532:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 533:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 534:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_SensorSignal[sensor] = ((uint16) tempRaw);
 535:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif  /* End (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 536:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 537:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 538:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 539:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Signal is zero */
 540:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_SensorSignal[sensor] = 0u;
 621              		.loc 1 540 0
 622 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 623 01d6 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 624 01da C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 625 01de 4FF00001 		mov	r1, #0
 626 01e2 9954     		strb	r1, [r3, r2]
 627              	.L29:
 541:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 542:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 543:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 544:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 545:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 546:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* End CapSense_TOTAL_GENERICS_COUNT */
 547:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 628              		.loc 1 547 0
 629 01e4 07F11807 		add	r7, r7, #24
 630 01e8 BD46     		mov	sp, r7
 631 01ea 80BD     		pop	{r7, pc}
 632              		.cfi_endproc
 633              	.LFE4:
 634              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 635              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 636              		.align	2
 637              		.global	CapSense_UpdateEnabledBaselines
 638              		.thumb
 639              		.thumb_func
 640              		.type	CapSense_UpdateEnabledBaselines, %function
 641              	CapSense_UpdateEnabledBaselines:
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 22


 642              	.LFB5:
 548:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 549:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 550:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 551:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 552:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 553:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 554:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 555:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Checks CapSense_SensorEnableMask[] array and calls the 
 556:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 557:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  for enabled sensors.
 558:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 559:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 560:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 561:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 562:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 563:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 564:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 565:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 566:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[] - used to store the sensor scanning 
 567:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 568:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[0] contains the masked bits for sensors 
 569:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 570:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[1] contains the masked bits for 
 571:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 572:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 573:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 574:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 575:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 576:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 577:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 578:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 580:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 643              		.loc 1 580 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 8
 646              		@ frame_needed = 1, uses_anonymous_args = 0
 647 0000 80B5     		push	{r7, lr}
 648              	.LCFI15:
 649              		.cfi_def_cfa_offset 8
 650 0002 82B0     		sub	sp, sp, #8
 651              	.LCFI16:
 652              		.cfi_def_cfa_offset 16
 653 0004 00AF     		add	r7, sp, #0
 654              		.cfi_offset 14, -4
 655              		.cfi_offset 7, -8
 656              	.LCFI17:
 657              		.cfi_def_cfa_register 7
 581:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 582:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 583:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 584:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 585:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 658              		.loc 1 585 0
 659 0006 4FF00003 		mov	r3, #0
 660 000a 7B71     		strb	r3, [r7, #5]
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 23


 661 000c 1FE0     		b	.L31
 662              	.L33:
 586:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 587:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 663              		.loc 1 587 0
 664 000e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 665 0010 4FEAD303 		lsr	r3, r3, #3
 666 0014 BB71     		strb	r3, [r7, #6]
 588:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 667              		.loc 1 588 0
 668 0016 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 669 0018 03F00703 		and	r3, r3, #7
 670 001c 4FF00102 		mov	r2, #1
 671 0020 02FA03F3 		lsl	r3, r2, r3
 672 0024 FB71     		strb	r3, [r7, #7]
 589:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_SensorEnableMask[pos] & enMask) != 0u)
 673              		.loc 1 589 0
 674 0026 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 675 0028 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 676 002c C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 677 0030 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 678 0032 FB79     		ldrb	r3, [r7, #7]
 679 0034 02EA0303 		and	r3, r2, r3
 680 0038 DBB2     		uxtb	r3, r3
 681 003a 002B     		cmp	r3, #0
 682 003c 03D0     		beq	.L32
 590:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 591:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 683              		.loc 1 591 0
 684 003e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 685 0040 1846     		mov	r0, r3
 686 0042 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 687              	.L32:
 688              		.loc 1 585 0
 689 0046 7B79     		ldrb	r3, [r7, #5]
 690 0048 03F10103 		add	r3, r3, #1
 691 004c 7B71     		strb	r3, [r7, #5]
 692              	.L31:
 693 004e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 694 0050 062B     		cmp	r3, #6
 695 0052 DCD9     		bls	.L33
 592:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 593:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 594:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 696              		.loc 1 594 0
 697 0054 07F10807 		add	r7, r7, #8
 698 0058 BD46     		mov	sp, r7
 699 005a 80BD     		pop	{r7, pc}
 700              		.cfi_endproc
 701              	.LFE5:
 702              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 703              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 704              		.align	2
 705              		.global	CapSense_CheckIsSensorActive
 706              		.thumb
 707              		.thumb_func
 708              		.type	CapSense_CheckIsSensorActive, %function
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 24


 709              	CapSense_CheckIsSensorActive:
 710              	.LFB6:
 595:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 596:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 597:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 598:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
 599:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 600:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 601:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 602:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares the CapSense_SensorSignal[sensor] array element to finger
 603:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 604:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 605:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
 606:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 607:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 608:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The debounce counter added to the sensor active transition.
 609:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  This function updates CapSense_SensorOnMask[] array element.
 610:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 611:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 612:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 613:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 614:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 615:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 616:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 617:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 618:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorSignal[]      - used to store diffence between 
 619:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 620:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 621:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 622:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 623:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 624:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorOnMask[] - used to store sensors on/off state.
 625:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorOnMask[0] contains the masked bits for sensors 
 626:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 627:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[1] contains the masked bits for 
 628:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 629:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor is inactive.
 630:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor is active.
 631:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 632:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 633:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 634:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 635:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 636:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsSensorActive(uint8 sensor)
 637:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 711              		.loc 1 637 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 16
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 716 0000 80B4     		push	{r7}
 717              	.LCFI18:
 718              		.cfi_def_cfa_offset 4
 719 0002 85B0     		sub	sp, sp, #20
 720              	.LCFI19:
 721              		.cfi_def_cfa_offset 24
 722 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 25


 723              		.cfi_offset 7, -4
 724              	.LCFI20:
 725              		.cfi_def_cfa_register 7
 726 0006 0346     		mov	r3, r0
 727 0008 FB71     		strb	r3, [r7, #7]
 638:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounceIndex;
 639:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Get On/Off mask */
 640:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos = (sensor >> 3u);
 728              		.loc 1 640 0
 729 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 730 000c 4FEAD303 		lsr	r3, r3, #3
 731 0010 BB72     		strb	r3, [r7, #10]
 641:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 732              		.loc 1 641 0
 733 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 734 0014 03F00703 		and	r3, r3, #7
 735 0018 4FF00102 		mov	r2, #1
 736 001c 02FA03F3 		lsl	r3, r2, r3
 737 0020 FB72     		strb	r3, [r7, #11]
 642:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
 643:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 738              		.loc 1 643 0
 739 0022 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 740 0024 40F20003 		movw	r3, #:lower16:CapSense_widgetNumber
 741 0028 C0F20003 		movt	r3, #:upper16:CapSense_widgetNumber
 742 002c 9B5C     		ldrb	r3, [r3, r2]
 743 002e 3B73     		strb	r3, [r7, #12]
 644:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 fingerThreshold = CapSense_fingerThreshold[widget];
 744              		.loc 1 644 0
 745 0030 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 746 0032 40F20003 		movw	r3, #:lower16:CapSense_fingerThreshold
 747 0036 C0F20003 		movt	r3, #:upper16:CapSense_fingerThreshold
 748 003a 9B5C     		ldrb	r3, [r3, r2]
 749 003c 7B73     		strb	r3, [r7, #13]
 645:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 hysteresis = CapSense_hysteresis[widget];
 750              		.loc 1 645 0
 751 003e 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 752 0040 40F20003 		movw	r3, #:lower16:CapSense_hysteresis
 753 0044 C0F20003 		movt	r3, #:upper16:CapSense_hysteresis
 754 0048 9B5C     		ldrb	r3, [r3, r2]
 755 004a BB73     		strb	r3, [r7, #14]
 646:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounce = CapSense_debounce[widget];
 756              		.loc 1 646 0
 757 004c 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 758 004e 40F20003 		movw	r3, #:lower16:CapSense_debounce
 759 0052 C0F20003 		movt	r3, #:upper16:CapSense_debounce
 760 0056 9B5C     		ldrb	r3, [r3, r2]
 761 0058 FB73     		strb	r3, [r7, #15]
 647:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 648:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if (widget < CapSense_TOTAL_CENTROIDS_COUNT)
 762              		.loc 1 648 0
 763 005a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 764 005c 002B     		cmp	r3, #0
 765 005e 0BD1     		bne	.L36
 649:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 650:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 766              		.loc 1 650 0
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 26


 767 0060 4FF00203 		mov	r3, #2
 768 0064 7B72     		strb	r3, [r7, #9]
 651:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_debounceCounter[debounceIndex] = 1u;
 769              		.loc 1 651 0
 770 0066 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 771 0068 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 772 006c C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 773 0070 4FF00101 		mov	r1, #1
 774 0074 9954     		strb	r1, [r3, r2]
 775 0076 03E0     		b	.L37
 776              	.L36:
 652:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 653:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 654:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 655:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         debounceIndex = widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1);
 777              		.loc 1 655 0
 778 0078 3B7B     		ldrb	r3, [r7, #12]
 779 007a 03F1FF33 		add	r3, r3, #-1
 780 007e 7B72     		strb	r3, [r7, #9]
 781              	.L37:
 656:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 657:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 658:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 659:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Was on */
 660:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if (CapSense_SensorOnMask[pos] & onMask)
 782              		.loc 1 660 0
 783 0080 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 784 0082 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 785 0086 C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 786 008a 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 787 008c FB7A     		ldrb	r3, [r7, #11]
 788 008e 02EA0303 		and	r3, r2, r3
 789 0092 DBB2     		uxtb	r3, r3
 790 0094 002B     		cmp	r3, #0
 791 0096 29D0     		beq	.L38
 661:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 662:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis minus */
 663:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_SensorSignal[sensor] < (fingerThreshold - hysteresis))
 792              		.loc 1 663 0
 793 0098 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 794 009a 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 795 009e C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 796 00a2 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 797 00a4 1A46     		mov	r2, r3
 798 00a6 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 799 00a8 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 800 00aa C3EB0103 		rsb	r3, r3, r1
 801 00ae 9A42     		cmp	r2, r3
 802 00b0 56DA     		bge	.L46
 664:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 665:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_SensorOnMask[pos] &= ~onMask;
 803              		.loc 1 665 0
 804 00b2 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 805 00b4 B97A     		ldrb	r1, [r7, #10]	@ zero_extendqisi2
 806 00b6 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 807 00ba C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 808 00be 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 27


 809 00c0 1946     		mov	r1, r3
 810 00c2 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 811 00c4 6FEA0303 		mvn	r3, r3
 812 00c8 DBB2     		uxtb	r3, r3
 813 00ca 01EA0303 		and	r3, r1, r3
 814 00ce DBB2     		uxtb	r3, r3
 815 00d0 D9B2     		uxtb	r1, r3
 816 00d2 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 817 00d6 C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 818 00da 9954     		strb	r1, [r3, r2]
 666:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce; 
 819              		.loc 1 666 0
 820 00dc 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 821 00de 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 822 00e2 C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 823 00e6 F97B     		ldrb	r1, [r7, #15]
 824 00e8 9954     		strb	r1, [r3, r2]
 825 00ea 3CE0     		b	.L40
 826              	.L38:
 667:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 668:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 669:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else    /* Was off */
 670:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 671:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis plus */
 672:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_SensorSignal[sensor] > (fingerThreshold + hysteresis))
 827              		.loc 1 672 0
 828 00ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 829 00ee 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 830 00f2 C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 831 00f6 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 832 00f8 1A46     		mov	r2, r3
 833 00fa 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 834 00fc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 835 00fe 0B44     		add	r3, r1, r3
 836 0100 9A42     		cmp	r2, r3
 837 0102 25DD     		ble	.L41
 673:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 674:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
 675:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (CapSense_debounceCounter[debounceIndex]-- <= 1u)
 838              		.loc 1 675 0
 839 0104 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 840 0106 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 841 010a C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 842 010e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 843 0110 012B     		cmp	r3, #1
 844 0112 8CBF     		ite	hi
 845 0114 0021     		movhi	r1, #0
 846 0116 0121     		movls	r1, #1
 847 0118 C9B2     		uxtb	r1, r1
 848 011a 03F1FF33 		add	r3, r3, #-1
 849 011e D8B2     		uxtb	r0, r3
 850 0120 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 851 0124 C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 852 0128 9854     		strb	r0, [r3, r2]
 853 012a 0029     		cmp	r1, #0
 854 012c 1AD0     		beq	.L47
 676:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 28


 677:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_SensorOnMask[pos] |= onMask; 
 855              		.loc 1 677 0
 856 012e BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 857 0130 B97A     		ldrb	r1, [r7, #10]	@ zero_extendqisi2
 858 0132 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 859 0136 C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 860 013a 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 861 013c FB7A     		ldrb	r3, [r7, #11]
 862 013e 41EA0303 		orr	r3, r1, r3
 863 0142 D9B2     		uxtb	r1, r3
 864 0144 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 865 0148 C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 866 014c 9954     		strb	r1, [r3, r2]
 867 014e 0AE0     		b	.L40
 868              	.L41:
 678:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 679:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 680:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 681:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 682:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 683:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 869              		.loc 1 683 0
 870 0150 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 871 0152 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 872 0156 C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 873 015a F97B     		ldrb	r1, [r7, #15]
 874 015c 9954     		strb	r1, [r3, r2]
 875 015e 02E0     		b	.L40
 876              	.L46:
 877              		.loc 1 666 0
 878 0160 00BF     		nop
 879 0162 00E0     		b	.L40
 880              	.L47:
 881              		.loc 1 677 0
 882 0164 00BF     		nop
 883              	.L40:
 684:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 685:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 686:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 687:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return (CapSense_SensorOnMask[pos] & onMask) ? 1u : 0u;
 884              		.loc 1 687 0
 885 0166 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 886 0168 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 887 016c C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 888 0170 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 889 0172 FB7A     		ldrb	r3, [r7, #11]
 890 0174 02EA0303 		and	r3, r2, r3
 891 0178 DBB2     		uxtb	r3, r3
 892 017a 002B     		cmp	r3, #0
 893 017c 02D0     		beq	.L43
 894 017e 4FF00103 		mov	r3, #1
 895 0182 01E0     		b	.L44
 896              	.L43:
 897 0184 4FF00003 		mov	r3, #0
 898              	.L44:
 688:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 899              		.loc 1 688 0
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 29


 900 0188 1846     		mov	r0, r3
 901 018a 07F11407 		add	r7, r7, #20
 902 018e BD46     		mov	sp, r7
 903 0190 80BC     		pop	{r7}
 904 0192 7047     		bx	lr
 905              		.cfi_endproc
 906              	.LFE6:
 907              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 908              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 909              		.align	2
 910              		.global	CapSense_CheckIsWidgetActive
 911              		.thumb
 912              		.thumb_func
 913              		.type	CapSense_CheckIsWidgetActive, %function
 914              	CapSense_CheckIsWidgetActive:
 915              	.LFB7:
 689:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 690:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 691:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 692:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
 693:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 694:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 695:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 696:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Use function CapSense_CheckIsSensorActive() to update 
 697:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorOnMask[] for all sensors within the widget.
 698:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 699:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  active.
 700:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 701:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  col and row to return widget active status.
 702:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 703:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 704:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 705:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 706:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 707:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 708:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 709:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 710:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 711:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 712:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 713:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 714:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsWidgetActive(uint8 widget)
 715:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 916              		.loc 1 715 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 16
 919              		@ frame_needed = 1, uses_anonymous_args = 0
 920 0000 80B5     		push	{r7, lr}
 921              	.LCFI21:
 922              		.cfi_def_cfa_offset 8
 923 0002 84B0     		sub	sp, sp, #16
 924              	.LCFI22:
 925              		.cfi_def_cfa_offset 24
 926 0004 00AF     		add	r7, sp, #0
 927              		.cfi_offset 14, -4
 928              		.cfi_offset 7, -8
 929              	.LCFI23:
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 30


 930              		.cfi_def_cfa_register 7
 931 0006 0346     		mov	r3, r0
 932 0008 FB71     		strb	r3, [r7, #7]
 716:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 933              		.loc 1 716 0
 934 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 935 000c 40F20003 		movw	r3, #:lower16:CapSense_rawDataIndex
 936 0010 C0F20003 		movt	r3, #:upper16:CapSense_rawDataIndex
 937 0014 9B5C     		ldrb	r3, [r3, r2]
 938 0016 7B73     		strb	r3, [r7, #13]
 717:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 939              		.loc 1 717 0
 940 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 941 001a 40F20003 		movw	r3, #:lower16:CapSense_numberOfSensors
 942 001e C0F20003 		movt	r3, #:upper16:CapSense_numberOfSensors
 943 0022 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 944 0024 7B7B     		ldrb	r3, [r7, #13]
 945 0026 1344     		add	r3, r2, r3
 946 0028 BB73     		strb	r3, [r7, #14]
 718:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 947              		.loc 1 718 0
 948 002a 4FF00003 		mov	r3, #0
 949 002e FB73     		strb	r3, [r7, #15]
 950              	.L50:
 719:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 720:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Check all sensors of the widget */
 721:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 722:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 723:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive(rawIndex) != 0u)
 951              		.loc 1 723 0
 952 0030 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 953 0032 1846     		mov	r0, r3
 954 0034 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 955 0038 0346     		mov	r3, r0
 956 003a 002B     		cmp	r3, #0
 957 003c 02D0     		beq	.L49
 724:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 725:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_SENSOR_1_IS_ACTIVE;
 958              		.loc 1 725 0
 959 003e 4FF00103 		mov	r3, #1
 960 0042 FB73     		strb	r3, [r7, #15]
 961              	.L49:
 726:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 727:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 962              		.loc 1 727 0
 963 0044 7B7B     		ldrb	r3, [r7, #13]
 964 0046 03F10103 		add	r3, r3, #1
 965 004a 7B73     		strb	r3, [r7, #13]
 728:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 729:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 966              		.loc 1 729 0
 967 004c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 968 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 969 0050 9A42     		cmp	r2, r3
 970 0052 EDD3     		bcc	.L50
 730:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 731:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 31


 732:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 733:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return state;
 971              		.loc 1 733 0
 972 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 734:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 973              		.loc 1 734 0
 974 0056 1846     		mov	r0, r3
 975 0058 07F11007 		add	r7, r7, #16
 976 005c BD46     		mov	sp, r7
 977 005e 80BD     		pop	{r7, pc}
 978              		.cfi_endproc
 979              	.LFE7:
 980              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 981              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 982              		.align	2
 983              		.global	CapSense_CheckIsAnyWidgetActive
 984              		.thumb
 985              		.thumb_func
 986              		.type	CapSense_CheckIsAnyWidgetActive, %function
 987              	CapSense_CheckIsAnyWidgetActive:
 988              	.LFB8:
 735:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 736:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 737:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 738:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
 739:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 740:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 741:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 742:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares all sensors of the CapSense_Signal[] array to their finger 
 743:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
 744:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  the CapSense_SensorOnMask[] array is up to date after calling this 
 745:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  function.
 746:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 747:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 748:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 749:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 750:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 751:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 752:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 753:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 754:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 755:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 756:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 757:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsAnyWidgetActive(void)
 758:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 989              		.loc 1 758 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 8
 992              		@ frame_needed = 1, uses_anonymous_args = 0
 993 0000 80B5     		push	{r7, lr}
 994              	.LCFI24:
 995              		.cfi_def_cfa_offset 8
 996 0002 82B0     		sub	sp, sp, #8
 997              	.LCFI25:
 998              		.cfi_def_cfa_offset 16
 999 0004 00AF     		add	r7, sp, #0
 1000              		.cfi_offset 14, -4
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 32


 1001              		.cfi_offset 7, -8
 1002              	.LCFI26:
 1003              		.cfi_def_cfa_register 7
 759:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 760:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 1004              		.loc 1 760 0
 1005 0006 4FF00003 		mov	r3, #0
 1006 000a FB71     		strb	r3, [r7, #7]
 761:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 762:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1007              		.loc 1 762 0
 1008 000c 4FF00003 		mov	r3, #0
 1009 0010 BB71     		strb	r3, [r7, #6]
 1010 0012 0DE0     		b	.L53
 1011              	.L55:
 763:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 764:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1012              		.loc 1 764 0
 1013 0014 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1014 0016 1846     		mov	r0, r3
 1015 0018 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1016 001c 0346     		mov	r3, r0
 1017 001e 002B     		cmp	r3, #0
 1018 0020 02D0     		beq	.L54
 765:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 766:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1019              		.loc 1 766 0
 1020 0022 4FF00103 		mov	r3, #1
 1021 0026 FB71     		strb	r3, [r7, #7]
 1022              	.L54:
 1023              		.loc 1 762 0
 1024 0028 BB79     		ldrb	r3, [r7, #6]
 1025 002a 03F10103 		add	r3, r3, #1
 1026 002e BB71     		strb	r3, [r7, #6]
 1027              	.L53:
 1028 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1029 0032 022B     		cmp	r3, #2
 1030 0034 EED9     		bls	.L55
 767:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 768:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 769:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 770:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 771:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return state;
 1031              		.loc 1 771 0
 1032 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 772:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1033              		.loc 1 772 0
 1034 0038 1846     		mov	r0, r3
 1035 003a 07F10807 		add	r7, r7, #8
 1036 003e BD46     		mov	sp, r7
 1037 0040 80BD     		pop	{r7, pc}
 1038              		.cfi_endproc
 1039              	.LFE8:
 1040              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1041 0042 00BF     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1042              		.align	2
 1043              		.global	CapSense_EnableWidget
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 33


 1044              		.thumb
 1045              		.thumb_func
 1046              		.type	CapSense_EnableWidget, %function
 1047              	CapSense_EnableWidget:
 1048              	.LFB9:
 773:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 774:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 775:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 776:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
 777:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 778:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 779:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 780:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 781:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 782:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 783:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 784:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 785:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 786:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 787:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 788:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 789:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[] - used to store the sensor scanning 
 790:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 791:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[0] contains the masked bits for sensors 
 792:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 793:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[1] contains the masked bits for 
 794:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 795:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 796:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 797:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 798:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 799:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 800:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 801:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 802:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_EnableWidget(uint8 widget)
 803:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 1049              		.loc 1 803 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 16
 1052              		@ frame_needed = 1, uses_anonymous_args = 0
 1053              		@ link register save eliminated.
 1054 0000 80B4     		push	{r7}
 1055              	.LCFI27:
 1056              		.cfi_def_cfa_offset 4
 1057 0002 85B0     		sub	sp, sp, #20
 1058              	.LCFI28:
 1059              		.cfi_def_cfa_offset 24
 1060 0004 00AF     		add	r7, sp, #0
 1061              		.cfi_offset 7, -4
 1062              	.LCFI29:
 1063              		.cfi_def_cfa_register 7
 1064 0006 0346     		mov	r3, r0
 1065 0008 FB71     		strb	r3, [r7, #7]
 804:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 805:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 806:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1066              		.loc 1 806 0
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 34


 1067 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1068 000c 40F20003 		movw	r3, #:lower16:CapSense_rawDataIndex
 1069 0010 C0F20003 		movt	r3, #:upper16:CapSense_rawDataIndex
 1070 0014 9B5C     		ldrb	r3, [r3, r2]
 1071 0016 BB73     		strb	r3, [r7, #14]
 807:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1072              		.loc 1 807 0
 1073 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1074 001a 40F20003 		movw	r3, #:lower16:CapSense_numberOfSensors
 1075 001e C0F20003 		movt	r3, #:upper16:CapSense_numberOfSensors
 1076 0022 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 1077 0024 BB7B     		ldrb	r3, [r7, #14]
 1078 0026 1344     		add	r3, r2, r3
 1079 0028 FB73     		strb	r3, [r7, #15]
 1080              	.L58:
 808:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 809:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Enable all sensors of the widget */
 810:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 811:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 812:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 1081              		.loc 1 812 0
 1082 002a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1083 002c 4FEAD303 		lsr	r3, r3, #3
 1084 0030 3B73     		strb	r3, [r7, #12]
 813:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1085              		.loc 1 813 0
 1086 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1087 0034 03F00703 		and	r3, r3, #7
 1088 0038 4FF00102 		mov	r2, #1
 1089 003c 02FA03F3 		lsl	r3, r2, r3
 1090 0040 7B73     		strb	r3, [r7, #13]
 814:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 815:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_SensorEnableMask[pos] |= enMask;
 1091              		.loc 1 815 0
 1092 0042 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1093 0044 397B     		ldrb	r1, [r7, #12]	@ zero_extendqisi2
 1094 0046 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 1095 004a C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 1096 004e 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 1097 0050 7B7B     		ldrb	r3, [r7, #13]
 1098 0052 41EA0303 		orr	r3, r1, r3
 1099 0056 D9B2     		uxtb	r1, r3
 1100 0058 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 1101 005c C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 1102 0060 9954     		strb	r1, [r3, r2]
 816:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 1103              		.loc 1 816 0
 1104 0062 BB7B     		ldrb	r3, [r7, #14]
 1105 0064 03F10103 		add	r3, r3, #1
 1106 0068 BB73     		strb	r3, [r7, #14]
 817:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 818:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 1107              		.loc 1 818 0
 1108 006a BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1109 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1110 006e 9A42     		cmp	r2, r3
 1111 0070 DBD3     		bcc	.L58
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 35


 819:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 820:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 821:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1112              		.loc 1 821 0
 1113 0072 07F11407 		add	r7, r7, #20
 1114 0076 BD46     		mov	sp, r7
 1115 0078 80BC     		pop	{r7}
 1116 007a 7047     		bx	lr
 1117              		.cfi_endproc
 1118              	.LFE9:
 1119              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1120              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1121              		.align	2
 1122              		.global	CapSense_DisableWidget
 1123              		.thumb
 1124              		.thumb_func
 1125              		.type	CapSense_DisableWidget, %function
 1126              	CapSense_DisableWidget:
 1127              	.LFB10:
 822:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 823:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 824:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 825:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
 826:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 827:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 828:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 829:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 830:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 831:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 832:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 833:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 834:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 835:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 836:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 837:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 838:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[] - used to store the sensor scanning 
 839:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 840:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[0] contains the masked bits for sensors 
 841:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 842:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[1] contains the masked bits for 
 843:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 844:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 845:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 846:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 847:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 848:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 849:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 850:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 851:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_DisableWidget(uint8 widget)
 852:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 1128              		.loc 1 852 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 16
 1131              		@ frame_needed = 1, uses_anonymous_args = 0
 1132              		@ link register save eliminated.
 1133 0000 80B4     		push	{r7}
 1134              	.LCFI30:
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 36


 1135              		.cfi_def_cfa_offset 4
 1136 0002 85B0     		sub	sp, sp, #20
 1137              	.LCFI31:
 1138              		.cfi_def_cfa_offset 24
 1139 0004 00AF     		add	r7, sp, #0
 1140              		.cfi_offset 7, -4
 1141              	.LCFI32:
 1142              		.cfi_def_cfa_register 7
 1143 0006 0346     		mov	r3, r0
 1144 0008 FB71     		strb	r3, [r7, #7]
 853:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 854:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 855:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1145              		.loc 1 855 0
 1146 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1147 000c 40F20003 		movw	r3, #:lower16:CapSense_rawDataIndex
 1148 0010 C0F20003 		movt	r3, #:upper16:CapSense_rawDataIndex
 1149 0014 9B5C     		ldrb	r3, [r3, r2]
 1150 0016 BB73     		strb	r3, [r7, #14]
 856:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1151              		.loc 1 856 0
 1152 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1153 001a 40F20003 		movw	r3, #:lower16:CapSense_numberOfSensors
 1154 001e C0F20003 		movt	r3, #:upper16:CapSense_numberOfSensors
 1155 0022 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 1156 0024 BB7B     		ldrb	r3, [r7, #14]
 1157 0026 1344     		add	r3, r2, r3
 1158 0028 FB73     		strb	r3, [r7, #15]
 1159              	.L61:
 857:.\Generated_Source\PSoC5/CapSense_CSHL.c ****    
 858:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Disable all sensors of the widget */
 859:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 860:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 861:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 1160              		.loc 1 861 0
 1161 002a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1162 002c 4FEAD303 		lsr	r3, r3, #3
 1163 0030 3B73     		strb	r3, [r7, #12]
 862:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1164              		.loc 1 862 0
 1165 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1166 0034 03F00703 		and	r3, r3, #7
 1167 0038 4FF00102 		mov	r2, #1
 1168 003c 02FA03F3 		lsl	r3, r2, r3
 1169 0040 7B73     		strb	r3, [r7, #13]
 863:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 864:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_SensorEnableMask[pos] &= ~enMask;
 1170              		.loc 1 864 0
 1171 0042 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1172 0044 397B     		ldrb	r1, [r7, #12]	@ zero_extendqisi2
 1173 0046 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 1174 004a C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 1175 004e 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 1176 0050 1946     		mov	r1, r3
 1177 0052 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1178 0054 6FEA0303 		mvn	r3, r3
 1179 0058 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 37


 1180 005a 01EA0303 		and	r3, r1, r3
 1181 005e DBB2     		uxtb	r3, r3
 1182 0060 D9B2     		uxtb	r1, r3
 1183 0062 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 1184 0066 C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 1185 006a 9954     		strb	r1, [r3, r2]
 865:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 1186              		.loc 1 865 0
 1187 006c BB7B     		ldrb	r3, [r7, #14]
 1188 006e 03F10103 		add	r3, r3, #1
 1189 0072 BB73     		strb	r3, [r7, #14]
 866:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 867:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 1190              		.loc 1 867 0
 1191 0074 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1192 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1193 0078 9A42     		cmp	r2, r3
 1194 007a D6D3     		bcc	.L61
 868:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 869:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 870:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1195              		.loc 1 870 0
 1196 007c 07F11407 		add	r7, r7, #20
 1197 0080 BD46     		mov	sp, r7
 1198 0082 80BC     		pop	{r7}
 1199 0084 7047     		bx	lr
 1200              		.cfi_endproc
 1201              	.LFE10:
 1202              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1203 0086 00BF     		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1204              		.align	2
 1205              		.global	CapSense_FindMaximum
 1206              		.thumb
 1207              		.thumb_func
 1208              		.type	CapSense_FindMaximum, %function
 1209              	CapSense_FindMaximum:
 1210              	.LFB11:
 871:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_COUNT)
 872:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
 873:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
 874:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 875:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 876:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
 877:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 878:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense_SensorSignal[] within defined cenrtoid and 
 879:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 880:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  ignored.
 881:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 882:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 883:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 884:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 885:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
 886:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_SensorSignal[] array.
 887:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
 888:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 889:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
 890:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 38


 891:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
 892:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 893:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 894:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 895:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
 896:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
 897:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 CY
 898:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else 
 899:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 900:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif
 901:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1211              		.loc 1 901 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 16
 1214              		@ frame_needed = 1, uses_anonymous_args = 0
 1215              		@ link register save eliminated.
 1216 0000 80B4     		push	{r7}
 1217              	.LCFI33:
 1218              		.cfi_def_cfa_offset 4
 1219 0002 85B0     		sub	sp, sp, #20
 1220              	.LCFI34:
 1221              		.cfi_def_cfa_offset 24
 1222 0004 00AF     		add	r7, sp, #0
 1223              		.cfi_offset 7, -4
 1224              	.LCFI35:
 1225              		.cfi_def_cfa_register 7
 1226 0006 1346     		mov	r3, r2
 1227 0008 0246     		mov	r2, r0
 1228 000a FA71     		strb	r2, [r7, #7]
 1229 000c 0A46     		mov	r2, r1
 1230 000e BA71     		strb	r2, [r7, #6]
 1231 0010 7B71     		strb	r3, [r7, #5]
 902:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 i;
 903:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 904:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curPos = 0u;
 905:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* No centroid at the Start */
 906:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
 907:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 908:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The biggset centroid is zero */
 909:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 910:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 911:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
 912:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum = 0xFFu;
 1232              		.loc 1 912 0
 1233 0012 4FF0FF33 		mov	r3, #-1
 1234 0016 BB72     		strb	r3, [r7, #10]
 913:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 temp = 0u;
 1235              		.loc 1 913 0
 1236 0018 4FF00003 		mov	r3, #0
 1237 001c FB72     		strb	r3, [r7, #11]
 914:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_SensorSignal[offset]; 
 1238              		.loc 1 914 0
 1239 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1240 0020 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 1241 0024 C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 1242 0028 1344     		add	r3, r2, r3
 1243 002a FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 39


 915:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 916:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 917:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(diplex != 0u)
 918:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 919:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Initialize */
 920:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 i = 0u;
 921:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
 922:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
 923:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 count <<= 1u;
 924:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 while(1u)
 925:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
 926:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 927:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 928:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 929:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 930:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Start of centroid */
 931:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = i;
 932:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 933:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 934:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
 935:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 936:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 937:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 938:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 939:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 940:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {          
 941:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(curCntrdSize > 0)
 942:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 943:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* We are in the end of current */
 944:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 945:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 946:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 947:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 948:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 949:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             
 950:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize = 0u;
 951:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 952:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 953:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 954:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 955:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     i++; 
 956:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     curPos = diplex[i];
 957:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(i == count)
 958:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 959:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         break;
 960:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }            
 961:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 962:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 963:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 964:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                        We are in the end of current */
 965:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 966:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 967:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 968:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 969:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 970:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 971:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 40


 972:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 973:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Without diplexing */ 
 974:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 biggestCtrdSize = count;
 975:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 976:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
 977:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 978:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Check centroid size */
 979:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
 980:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 981:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #else                    
 982:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 983:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif
 984:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 985:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 986:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 987:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)           
 988:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (diplex == 0u)
 989:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 990:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = i;
 991:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 992:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             else
 993:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 994:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = diplex[i];
 995:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                    
 996:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
 997:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curPos = diplex[i];                    
 998:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif
 999:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Looking for the grater element within centroid */
1000:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1001:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1002:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1003:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1004:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 maximum = i;
1005:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1006:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1007:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1008:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1009:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 } 
1010:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1011:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1244              		.loc 1 1011 0
 1245 002c 4FF00003 		mov	r3, #0
 1246 0030 7B72     		strb	r3, [r7, #9]
 1247 0032 18E0     		b	.L64
 1248              	.L66:
1012:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {                      
1013:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Looking for the grater element within centroid */
1014:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1249              		.loc 1 1014 0
 1250 0034 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1251 0036 FB68     		ldr	r3, [r7, #12]
 1252 0038 1344     		add	r3, r2, r3
 1253 003a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1254 003c 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 1255 003e 9A42     		cmp	r2, r3
 1256 0040 0DD2     		bcs	.L65
1015:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 41


1016:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 1257              		.loc 1 1016 0
 1258 0042 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1259 0044 FB68     		ldr	r3, [r7, #12]
 1260 0046 1344     		add	r3, r2, r3
 1261 0048 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1262 004a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 1263 004c 9A42     		cmp	r2, r3
 1264 004e 06D2     		bcs	.L65
1017:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1018:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         maximum = i;
 1265              		.loc 1 1018 0
 1266 0050 7B7A     		ldrb	r3, [r7, #9]
 1267 0052 BB72     		strb	r3, [r7, #10]
1019:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 1268              		.loc 1 1019 0
 1269 0054 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1270 0056 FB68     		ldr	r3, [r7, #12]
 1271 0058 1344     		add	r3, r2, r3
 1272 005a 1B78     		ldrb	r3, [r3, #0]
 1273 005c FB72     		strb	r3, [r7, #11]
 1274              	.L65:
 1275              		.loc 1 1011 0
 1276 005e 7B7A     		ldrb	r3, [r7, #9]
 1277 0060 03F10103 		add	r3, r3, #1
 1278 0064 7B72     		strb	r3, [r7, #9]
 1279              	.L64:
 1280 0066 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1281 0068 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1282 006a 9A42     		cmp	r2, r3
 1283 006c E2D3     		bcc	.L66
1020:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1021:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1022:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
1023:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1024:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (maximum);
 1284              		.loc 1 1024 0
 1285 006e BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
1025:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1286              		.loc 1 1025 0
 1287 0070 1846     		mov	r0, r3
 1288 0072 07F11407 		add	r7, r7, #20
 1289 0076 BD46     		mov	sp, r7
 1290 0078 80BC     		pop	{r7}
 1291 007a 7047     		bx	lr
 1292              		.cfi_endproc
 1293              	.LFE11:
 1294              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 1295              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 1296              		.align	2
 1297              		.global	CapSense_CalcCentroid
 1298              		.thumb
 1299              		.thumb_func
 1300              		.type	CapSense_CalcCentroid, %function
 1301              	CapSense_CalcCentroid:
 1302              	.LFB12:
1026:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 42


1027:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1028:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1029:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1030:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1031:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1032:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1033:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
1034:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution.
1035:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1036:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1037:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  type:  widget type.
1038:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1039:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1040:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_SensorSignal[] array.
1041:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1042:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1043:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  API resolution.
1044:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshould.
1045:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1046:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1047:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the slider.
1048:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1049:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1050:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1051:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1052:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1053:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1054:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, uint8 count, uint16 resolution, uint8 
1055:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1303              		.loc 1 1055 0
 1304              		.cfi_startproc
 1305              		@ args = 4, pretend = 0, frame = 24
 1306              		@ frame_needed = 1, uses_anonymous_args = 0
 1307              		@ link register save eliminated.
 1308 0000 80B4     		push	{r7}
 1309              	.LCFI36:
 1310              		.cfi_def_cfa_offset 4
 1311 0002 87B0     		sub	sp, sp, #28
 1312              	.LCFI37:
 1313              		.cfi_def_cfa_offset 32
 1314 0004 00AF     		add	r7, sp, #0
 1315              		.cfi_offset 7, -4
 1316              	.LCFI38:
 1317              		.cfi_def_cfa_register 7
 1318 0006 F871     		strb	r0, [r7, #7]
 1319 0008 B971     		strb	r1, [r7, #6]
 1320 000a 7A71     		strb	r2, [r7, #5]
 1321 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1056:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u)) 
1057:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posPrev;
1058:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posNext;
1059:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1060:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                
1061:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1062:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 pos;
1063:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1064:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 43


1065:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 position;
1066:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         int32 numerator;
1067:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         int32 denominator;
1068:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_SensorSignal[offset];
 1322              		.loc 1 1068 0
 1323 000e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 1324 0010 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 1325 0014 C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 1326 0018 1344     		add	r3, r2, r3
 1327 001a 7B61     		str	r3, [r7, #20]
1069:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1070:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1071:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1072:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1073:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1074:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1075:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1076:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1077:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1078:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                  
1079:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1080:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1081:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1082:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1083:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1084:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1085:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1086:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1087:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1088:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1089:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1090:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1091:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1092:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1093:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1094:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1095:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif
1096:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1097:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1098:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1099:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1100:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1101:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1102:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1103:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0
1104:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1105:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1106:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(diplex == 0u)
1107:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1108:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = maximum;
1109:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1110:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1111:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1112:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1113:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1114:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1115:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 44


1116:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1117:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         count <<= 1u;
1118:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }                    
1119:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1120:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1121:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1122:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1123:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1124:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     count <<= 1u;                    
1125:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else                    
1126:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1127:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posPrev = maximum - 1u;
 1328              		.loc 1 1127 0
 1329 001c FB79     		ldrb	r3, [r7, #7]
 1330 001e 03F1FF33 		add	r3, r3, #-1
 1331 0022 7B72     		strb	r3, [r7, #9]
1128:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = maximum + 1u; 
 1332              		.loc 1 1128 0
 1333 0024 FB79     		ldrb	r3, [r7, #7]
 1334 0026 03F10103 		add	r3, r3, #1
 1335 002a BB72     		strb	r3, [r7, #10]
1129:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif
1130:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1131:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1132:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1133:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1134:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else
1135:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 1336              		.loc 1 1135 0
 1337 002c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1338 002e 7B69     		ldr	r3, [r7, #20]
 1339 0030 1344     		add	r3, r2, r3
 1340 0032 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1341 0034 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1342 0038 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1343 003c 5A70     		strb	r2, [r3, #1]
1136:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif
1137:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1138:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1139:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 1344              		.loc 1 1139 0
 1345 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1346 0040 002B     		cmp	r3, #0
 1347 0042 10D1     		bne	.L69
1140:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1141:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 1348              		.loc 1 1141 0
 1349 0044 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1350 0048 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1351 004c 4FF00002 		mov	r2, #0
 1352 0050 1A70     		strb	r2, [r3, #0]
1142:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 1353              		.loc 1 1142 0
 1354 0052 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 1355 0054 7B69     		ldr	r3, [r7, #20]
 1356 0056 1344     		add	r3, r2, r3
 1357 0058 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 45


 1358 005a 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1359 005e C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1360 0062 9A70     		strb	r2, [r3, #2]
 1361 0064 28E0     		b	.L70
 1362              	.L69:
1143:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1144:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 1363              		.loc 1 1144 0
 1364 0066 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1365 0068 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1366 006a 03F1FF33 		add	r3, r3, #-1
 1367 006e 9A42     		cmp	r2, r3
 1368 0070 10D1     		bne	.L71
1145:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1146:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 1369              		.loc 1 1146 0
 1370 0072 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1371 0074 7B69     		ldr	r3, [r7, #20]
 1372 0076 1344     		add	r3, r2, r3
 1373 0078 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1374 007a 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1375 007e C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1376 0082 1A70     		strb	r2, [r3, #0]
1147:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1377              		.loc 1 1147 0
 1378 0084 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1379 0088 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1380 008c 4FF00002 		mov	r2, #0
 1381 0090 9A70     		strb	r2, [r3, #2]
 1382 0092 11E0     		b	.L70
 1383              	.L71:
1148:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1149:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1150:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1151:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 1384              		.loc 1 1151 0
 1385 0094 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1386 0096 7B69     		ldr	r3, [r7, #20]
 1387 0098 1344     		add	r3, r2, r3
 1388 009a 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1389 009c 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1390 00a0 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1391 00a4 1A70     		strb	r2, [r3, #0]
1152:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 1392              		.loc 1 1152 0
 1393 00a6 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 1394 00a8 7B69     		ldr	r3, [r7, #20]
 1395 00aa 1344     		add	r3, r2, r3
 1396 00ac 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1397 00ae 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1398 00b2 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1399 00b6 9A70     		strb	r2, [r3, #2]
 1400              	.L70:
1153:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1154:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif
1155:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1156:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 46


1157:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1158:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1159:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1160:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1161:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 1401              		.loc 1 1161 0
 1402 00b8 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1403 00bc C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1404 00c0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1405 00c2 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 1406 00c6 9A42     		cmp	r2, r3
 1407 00c8 0FD2     		bcs	.L72
1162:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1163:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 1408              		.loc 1 1163 0
 1409 00ca 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1410 00ce C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1411 00d2 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1412 00d4 97F82030 		ldrb	r3, [r7, #32]
 1413 00d8 C3EB0203 		rsb	r3, r3, r2
 1414 00dc DAB2     		uxtb	r2, r3
 1415 00de 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1416 00e2 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1417 00e6 1A70     		strb	r2, [r3, #0]
 1418 00e8 06E0     		b	.L73
 1419              	.L72:
1164:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1165:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1166:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1167:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 1420              		.loc 1 1167 0
 1421 00ea 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1422 00ee C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1423 00f2 4FF00002 		mov	r2, #0
 1424 00f6 1A70     		strb	r2, [r3, #0]
 1425              	.L73:
1168:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1169:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1170:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1171:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 1426              		.loc 1 1171 0
 1427 00f8 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1428 00fc C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1429 0100 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1430 0102 97F82030 		ldrb	r3, [r7, #32]
 1431 0106 C3EB0203 		rsb	r3, r3, r2
 1432 010a DAB2     		uxtb	r2, r3
 1433 010c 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1434 0110 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1435 0114 5A70     		strb	r2, [r3, #1]
1172:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1173:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1174:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 1436              		.loc 1 1174 0
 1437 0116 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1438 011a C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1439 011e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 47


 1440 0120 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 1441 0124 9A42     		cmp	r2, r3
 1442 0126 0FD2     		bcs	.L74
1175:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1176:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 1443              		.loc 1 1176 0
 1444 0128 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1445 012c C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1446 0130 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1447 0132 97F82030 		ldrb	r3, [r7, #32]
 1448 0136 C3EB0203 		rsb	r3, r3, r2
 1449 013a DAB2     		uxtb	r2, r3
 1450 013c 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1451 0140 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1452 0144 9A70     		strb	r2, [r3, #2]
 1453 0146 06E0     		b	.L75
 1454              	.L74:
1177:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1178:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1179:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1180:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1455              		.loc 1 1180 0
 1456 0148 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1457 014c C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1458 0150 4FF00002 		mov	r2, #0
 1459 0154 9A70     		strb	r2, [r3, #2]
 1460              	.L75:
1181:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1182:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1183:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1184:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1185:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         numerator = (int32) CapSense_centroid[CapSense_POS_NEXT] - 
 1461              		.loc 1 1185 0
 1462 0156 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1463 015a C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1464 015e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1465 0160 1A46     		mov	r2, r3
1186:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     (int32) CapSense_centroid[CapSense_POS_PREV];
 1466              		.loc 1 1186 0
 1467 0162 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1468 0166 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1469 016a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1470              		.loc 1 1185 0
 1471 016c C3EB0203 		rsb	r3, r3, r2
 1472 0170 FB60     		str	r3, [r7, #12]
1187:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1188:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1189:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 1473              		.loc 1 1189 0
 1474 0172 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1475 0176 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1476 017a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
1190:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
 1477              		.loc 1 1190 0
 1478 017c 1A46     		mov	r2, r3
 1479 017e 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1480 0182 C0F20003 		movt	r3, #:upper16:CapSense_centroid
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 48


 1481 0186 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1482 0188 1A44     		add	r2, r2, r3
1191:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
 1483              		.loc 1 1191 0
 1484 018a 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1485 018e C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1486 0192 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1487              		.loc 1 1189 0
 1488 0194 1344     		add	r3, r2, r3
 1489 0196 3B61     		str	r3, [r7, #16]
1192:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1193:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1194:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (numerator << 8u)/denominator + ((uint16) maximum << 8u);
 1490              		.loc 1 1194 0
 1491 0198 FB68     		ldr	r3, [r7, #12]
 1492 019a 4FEA0322 		lsl	r2, r3, #8
 1493 019e 3B69     		ldr	r3, [r7, #16]
 1494 01a0 92FBF3F2 		sdiv	r2, r2, r3
 1495 01a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1496 01a6 4FEA0323 		lsl	r3, r3, #8
 1497 01aa 1344     		add	r3, r2, r3
 1498 01ac 3B61     		str	r3, [r7, #16]
1195:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1196:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1197:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1198:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(denominator < 0)
1199:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1200:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 denominator += ((uint16) count << 8u);
1201:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1202:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1203:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1204:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator *= resolution;
 1499              		.loc 1 1204 0
 1500 01ae 7A88     		ldrh	r2, [r7, #2]
 1501 01b0 3B69     		ldr	r3, [r7, #16]
 1502 01b2 02FB03F3 		mul	r3, r2, r3
 1503 01b6 3B61     		str	r3, [r7, #16]
1205:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1206:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Round the relust and put it to uint8 */
1207:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         position = ((uint8) HI16(denominator + CapSense_CENTROID_ROUND_VALUE));
 1504              		.loc 1 1207 0
 1505 01b8 3B69     		ldr	r3, [r7, #16]
 1506 01ba 03F5FE43 		add	r3, r3, #32512
 1507 01be 4FEA1343 		lsr	r3, r3, #16
 1508 01c2 FB72     		strb	r3, [r7, #11]
1208:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1209:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
 1509              		.loc 1 1209 0
 1510 01c4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1210:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }    
 1511              		.loc 1 1210 0
 1512 01c6 1846     		mov	r0, r3
 1513 01c8 07F11C07 		add	r7, r7, #28
 1514 01cc BD46     		mov	sp, r7
 1515 01ce 80BC     		pop	{r7}
 1516 01d0 7047     		bx	lr
 1517              		.cfi_endproc
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 49


 1518              	.LFE12:
 1519              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 1520 01d2 00BF     		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 1521              		.align	2
 1522              		.global	CapSense_GetCentroidPos
 1523              		.thumb
 1524              		.thumb_func
 1525              		.type	CapSense_GetCentroidPos, %function
 1526              	CapSense_GetCentroidPos:
 1527              	.LFB13:
1211:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif
1212:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1213:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1214:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1215:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1216:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1217:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1218:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1219:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1220:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1221:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1222:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1223:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1224:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1225:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1226:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1227:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1228:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_LS__"widget_name"            5
1229:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1230:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1231:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the linear slider.
1232:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1233:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1234:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1235:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1236:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1237:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1238:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1239:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1240:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1241:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1242:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1243:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1244:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1245:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1246:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1247:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1248:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1249:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1250:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1251:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint8 widget)
1252:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1528              		.loc 1 1252 0
 1529              		.cfi_startproc
 1530              		@ args = 0, pretend = 0, frame = 16
 1531              		@ frame_needed = 1, uses_anonymous_args = 0
 1532 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 50


 1533              	.LCFI39:
 1534              		.cfi_def_cfa_offset 8
 1535 0002 86B0     		sub	sp, sp, #24
 1536              	.LCFI40:
 1537              		.cfi_def_cfa_offset 32
 1538 0004 02AF     		add	r7, sp, #8
 1539              		.cfi_offset 14, -4
 1540              		.cfi_offset 7, -8
 1541              	.LCFI41:
 1542              		.cfi_def_cfa 7, 24
 1543 0006 0346     		mov	r3, r0
 1544 0008 FB71     		strb	r3, [r7, #7]
1253:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1254:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             const uint8 CYCODE *diplex;
1255:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1256:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1257:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1258:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1259:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
 1545              		.loc 1 1259 0
 1546 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1547 000c 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1548 0010 C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1549 0014 9B5C     		ldrb	r3, [r3, r2]
 1550 0016 7B72     		strb	r3, [r7, #9]
1260:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
 1551              		.loc 1 1260 0
 1552 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1553 001a 40F20003 		movw	r3, #:lower16:CapSense_posFiltersMask
 1554 001e C0F20003 		movt	r3, #:upper16:CapSense_posFiltersMask
 1555 0022 9B5C     		ldrb	r3, [r3, r2]
 1556 0024 BB72     		strb	r3, [r7, #10]
1261:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1262:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1263:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1264:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1265:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1266:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1267:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1268:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1269:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1270:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 1557              		.loc 1 1270 0
 1558 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1559 0028 40F20003 		movw	r3, #:lower16:CapSense_rawDataIndex
 1560 002c C0F20003 		movt	r3, #:upper16:CapSense_rawDataIndex
 1561 0030 9B5C     		ldrb	r3, [r3, r2]
 1562 0032 BB73     		strb	r3, [r7, #14]
1271:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 1563              		.loc 1 1271 0
 1564 0034 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1565 0036 40F20003 		movw	r3, #:lower16:CapSense_numberOfSensors
 1566 003a C0F20003 		movt	r3, #:upper16:CapSense_numberOfSensors
 1567 003e 9B5C     		ldrb	r3, [r3, r2]
 1568 0040 FB73     		strb	r3, [r7, #15]
1272:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1273:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 51


1274:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1275:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1276:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1277:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1278:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1279:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1280:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1281:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = 0u;
1282:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1283:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1284:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1285:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */      
1286:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1287:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], diplex)
1288:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1289:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
 1569              		.loc 1 1289 0
 1570 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1571 0044 40F20003 		movw	r3, #:lower16:CapSense_fingerThreshold
 1572 0048 C0F20003 		movt	r3, #:upper16:CapSense_fingerThreshold
 1573 004c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1574 004e B97B     		ldrb	r1, [r7, #14]	@ zero_extendqisi2
 1575 0050 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1576 0052 0846     		mov	r0, r1
 1577 0054 1146     		mov	r1, r2
 1578 0056 1A46     		mov	r2, r3
 1579 0058 FFF7FEFF 		bl	CapSense_FindMaximum
 1580 005c 0346     		mov	r3, r0
 1581 005e FB72     		strb	r3, [r7, #11]
1290:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1291:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1292:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 1582              		.loc 1 1292 0
 1583 0060 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1584 0062 FF2B     		cmp	r3, #255
 1585 0064 55D0     		beq	.L78
1293:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1294:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1295:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 1586              		.loc 1 1295 0
 1587 0066 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1588 0068 40F20003 		movw	r3, #:lower16:CapSense_centroidMult
 1589 006c C0F20003 		movt	r3, #:upper16:CapSense_centroidMult
 1590 0070 33F812C0 		ldrh	ip, [r3, r2, lsl #1]
 1591 0074 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1592 0076 40F20003 		movw	r3, #:lower16:CapSense_noiseThreshold
 1593 007a C0F20003 		movt	r3, #:upper16:CapSense_noiseThreshold
 1594 007e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1595 0080 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 1596 0082 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1597 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1598 0086 0090     		str	r0, [sp, #0]
 1599 0088 0846     		mov	r0, r1
 1600 008a 1146     		mov	r1, r2
 1601 008c 1A46     		mov	r2, r3
 1602 008e 6346     		mov	r3, ip
 1603 0090 FFF7FEFF 		bl	CapSense_CalcCentroid
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 52


 1604 0094 0346     		mov	r3, r0
 1605 0096 BB81     		strh	r3, [r7, #12]	@ movhi
1296:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1297:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1298:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1299:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1300:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 1606              		.loc 1 1300 0
 1607 0098 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1608 009a 03F01F03 		and	r3, r3, #31
 1609 009e 002B     		cmp	r3, #0
 1610 00a0 48D0     		beq	.L83
1301:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1302:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1303:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 1611              		.loc 1 1303 0
 1612 00a2 7B7A     		ldrb	r3, [r7, #9]
 1613 00a4 03F10103 		add	r3, r3, #1
 1614 00a8 3B72     		strb	r3, [r7, #8]
1304:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1305:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
 1615              		.loc 1 1305 0
 1616 00aa 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1617 00ac 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1618 00b0 C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1619 00b4 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1620 00b6 002B     		cmp	r3, #0
 1621 00b8 10D1     		bne	.L80
1306:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1307:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1308:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
 1622              		.loc 1 1308 0
 1623 00ba 3A7A     		ldrb	r2, [r7, #8]	@ zero_extendqisi2
 1624 00bc BB89     		ldrh	r3, [r7, #12]	@ movhi
 1625 00be D9B2     		uxtb	r1, r3
 1626 00c0 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1627 00c4 C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1628 00c8 9954     		strb	r1, [r3, r2]
1309:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_M
1310:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTER
1311:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1312:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1313:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1314:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1315:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1316:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif
1317:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1318:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
 1629              		.loc 1 1318 0
 1630 00ca 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1631 00cc 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1632 00d0 C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1633 00d4 4FF00101 		mov	r1, #1
 1634 00d8 9954     		strb	r1, [r3, r2]
1319:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1320:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1321:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 53


1322:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1323:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1324:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1325:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1326:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1327:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position, CapSense_posFiltersData[
1328:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = CapSense_posFiltersData[po
1329:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1330:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1331:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif
1332:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1333:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS
1334:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1335:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1336:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1337:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, CapSense_posFiltersDa
1338:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = CapSense_posFiltersData[po
1339:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1340:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1341:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif
1342:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1343:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1344:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1345:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1346:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position, CapSense_posFiltersData[po
1347:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1348:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1349:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif
1350:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1351:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1352:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1353:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1354:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position, CapSense_posFiltersData[po
1355:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
 1635              		.loc 1 1355 0
 1636 00da 2EE0     		b	.L81
 1637              	.L80:
 1638              		.loc 1 1352 0
 1639 00dc BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1640 00de 03F00803 		and	r3, r3, #8
 1641 00e2 002B     		cmp	r3, #0
 1642 00e4 28D0     		beq	.L84
 1643              		.loc 1 1354 0
 1644 00e6 3A7A     		ldrb	r2, [r7, #8]	@ zero_extendqisi2
 1645 00e8 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1646 00ec C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1647 00f0 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1648 00f2 BA89     		ldrh	r2, [r7, #12]
 1649 00f4 1046     		mov	r0, r2
 1650 00f6 1946     		mov	r1, r3
 1651 00f8 FFF7FEFF 		bl	CapSense_IIR4Filter
 1652 00fc 0346     		mov	r3, r0
 1653 00fe BB81     		strh	r3, [r7, #12]	@ movhi
 1654              		.loc 1 1355 0
 1655 0100 3A7A     		ldrb	r2, [r7, #8]	@ zero_extendqisi2
 1656 0102 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1657 0104 D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 54


 1658 0106 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1659 010a C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1660 010e 9954     		strb	r1, [r3, r2]
 1661 0110 13E0     		b	.L81
 1662              	.L78:
1356:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                                
1357:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif
1358:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1359:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1360:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1361:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1362:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, CapSense_posFiltersData[
1363:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1364:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1365:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif
1366:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1367:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1368:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif
1369:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1370:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1371:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1372:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1373:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum didn't find */
1374:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
 1663              		.loc 1 1374 0
 1664 0112 4FF6FF73 		movw	r3, #65535
 1665 0116 BB81     		strh	r3, [r7, #12]	@ movhi
1375:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1376:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1377:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1378:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 1666              		.loc 1 1378 0
 1667 0118 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1668 011a 03F01F03 		and	r3, r3, #31
 1669 011e 002B     		cmp	r3, #0
 1670 0120 0BD0     		beq	.L81
1379:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1380:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
 1671              		.loc 1 1380 0
 1672 0122 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1673 0124 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1674 0128 C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1675 012c 4FF00001 		mov	r1, #0
 1676 0130 9954     		strb	r1, [r3, r2]
 1677 0132 02E0     		b	.L81
 1678              	.L83:
 1679              		.loc 1 1355 0
 1680 0134 00BF     		nop
 1681 0136 00E0     		b	.L81
 1682              	.L84:
 1683 0138 00BF     		nop
 1684              	.L81:
1381:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1382:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif
1383:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1384:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1385:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 55


1386:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
 1685              		.loc 1 1386 0
 1686 013a BB89     		ldrh	r3, [r7, #12]
1387:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1687              		.loc 1 1387 0
 1688 013c 1846     		mov	r0, r3
 1689 013e 07F11007 		add	r7, r7, #16
 1690 0142 BD46     		mov	sp, r7
 1691 0144 80BD     		pop	{r7, pc}
 1692              		.cfi_endproc
 1693              	.LFE13:
 1694              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 1695 0146 00BF     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1696              		.align	2
 1697              		.global	CapSense_IIR4Filter
 1698              		.thumb
 1699              		.thumb_func
 1700              		.type	CapSense_IIR4Filter, %function
 1701              	CapSense_IIR4Filter:
 1702              	.LFB14:
1388:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif
1389:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1390:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1391:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1392:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1393:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1394:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1395:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1396:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1397:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1398:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1399:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1400:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1401:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1402:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1403:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1404:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1405:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_RS_"widget_name"            5
1406:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1407:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1408:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the radial slider.
1409:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1410:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1411:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1412:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1413:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1414:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1415:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1416:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1417:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1418:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1419:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1420:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1421:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1422:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1423:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1424:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 56


1425:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1426:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1427:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1428:.\Generated_Source\PSoC5/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint8 widget)
1429:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1430:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1431:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1432:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1433:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1434:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1435:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1436:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1437:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1438:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1439:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1440:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1441:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1442:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1443:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1444:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1445:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1446:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */        
1447:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1448:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1449:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1450:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1451:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1452:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1453:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1454:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1455:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1456:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1457:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1458:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1459:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1460:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1461:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1462:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1463:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1464:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1465:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1466:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1467:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1468:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1469:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1470:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_M
1471:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTER
1472:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
1473:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1474:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1475:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1476:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1477:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif
1478:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1479:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1480:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1481:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 57


1482:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1483:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1484:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1485:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1486:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1487:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1488:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,CapSense_posFiltersData[p
1489:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                   CapSense_posFiltersData[posIndex + 1u]);
1490:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = CapSense_posFiltersData[po
1491:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1492:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1493:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif
1494:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1495:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS
1496:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1497:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1498:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1499:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, CapSense_posFiltersDa
1500:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                   CapSense_posFiltersData[posIndex + 1u]);
1501:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = CapSense_posFiltersData[po
1502:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1503:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1504:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif
1505:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1506:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1507:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1508:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1509:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position, CapSense_posFiltersData[po
1510:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1511:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1512:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif
1513:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1514:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1515:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1516:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1517:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position, CapSense_posFiltersData[po
1518:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1519:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1520:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif
1521:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1522:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1523:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1524:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1525:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, CapSense_posFiltersData[
1526:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1527:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1528:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif
1529:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1530:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1531:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif
1532:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1533:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1534:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1535:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1536:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum didn't find */
1537:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
1538:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 58


1539:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1540:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1541:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1542:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1543:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1544:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1545:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif
1546:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1547:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1548:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1549:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1550:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif
1551:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1552:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1553:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_COUNT > 0u)
1554:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1555:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
1556:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1557:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1558:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1559:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1560:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1561:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1562:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1563:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
1564:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1565:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  customizer.
1566:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1567:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1568:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number. 
1569:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1570:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_TP_"widget_name"            5
1571:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1572:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1573:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
1574:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[0u]  - position of X
1575:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
1576:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1577:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1578:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1579:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1580:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1581:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1582:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1583:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *   calculations.
1584:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1585:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1586:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1587:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1588:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1589:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_GetTouchCentroidPos(uint8 widget, uint16* pos)
1590:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1591:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1592:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posXIndex;
1593:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posYIndex;
1594:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1595:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 59


1596:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1597:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1598:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1599:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint16 tempPos;
1600:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1601:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1602:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 MaxX;
1603:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 MaxY;
1604:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posX;
1605:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posY;
1606:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 touch = 0u;
1607:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1608:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1609:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1610:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
1611:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1612:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1613:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1614:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1615:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1616:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1617:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (MaxX != 0xFFu)
1618:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1619:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
1620:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
1621:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1622:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
1623:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
1624:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
1625:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #else
1626:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
1627:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif
1628:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1629:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (MaxY != 0xFFu)
1630:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1631:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
1632:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 touch = 1u;
1633:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1634:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate Y centroid */
1635:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count, 
1636:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
1637:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1638:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate X centroid */
1639:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
1640:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
1641:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1642:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count, 
1643:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
1644:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1645:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1646:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
1647:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1648:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1649:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Caluclate position to store filters data */
1650:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1651:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
1652:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 60


1653:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
1654:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1655:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Init filters */
1656:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
1657:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
1658:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
1659:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTER
1660:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1661:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1662:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1663:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
1664:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
1665:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1666:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif
1667:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             
1668:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
1669:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1670:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
1671:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1672:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Do filtering */
1673:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1674:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1675:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1676:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1677:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX, CapSense_posFiltersD
1678:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                       CapSense_posFiltersData[posXIndex + 1u]);
1679:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = CapSense_posFiltersDa
1680:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
1681:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1682:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
1683:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY, CapSense_posFiltersD
1684:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                       CapSense_posFiltersData[posYIndex + 1u]);
1685:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = CapSense_posFiltersDa
1686:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1687:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1688:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1689:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif
1690:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1691:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS
1692:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1693:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1694:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1695:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX, CapSense_posFilte
1696:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                       CapSense_posFiltersData[posXIndex + 1u]);
1697:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = CapSense_posFiltersDa
1698:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
1699:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1700:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
1701:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, CapSense_posFilte
1702:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                       CapSense_posFiltersData[posYIndex + 1u]);
1703:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = CapSense_posFiltersDa
1704:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1705:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1706:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1707:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif
1708:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1709:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 61


1710:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1711:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1712:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, CapSense_posFiltersDat
1713:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1714:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1715:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, CapSense_posFiltersDat
1716:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1717:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1718:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1719:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif
1720:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1721:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
1722:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1723:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1724:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter(posX, CapSense_posFiltersDat
1725:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1726:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1727:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter(posY, CapSense_posFiltersDat
1728:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1729:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1730:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1731:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif
1732:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1733:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1734:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1735:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     {
1736:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, CapSense_posFilt
1737:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
1738:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         
1739:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, CapSense_posFilt
1740:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
1741:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     }
1742:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif
1743:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1744:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1745:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif
1746:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1747:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Save positions */
1748:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[0u] = posX;
1749:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[1u] = posY;
1750:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1751:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1752:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1753:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1754:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(touch == 0u)
1755:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1756:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1757:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1758:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1759:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1760:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1761:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1762:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1763:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1764:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (touch);
1765:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1766:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 62


1767:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1768:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1769:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
1770:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
1771:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1772:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
1773:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1774:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1775:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1776:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Median filter function. 
1777:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1778:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  median value.
1779:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1780:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1781:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1782:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1783:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x3:  Before previous value.
1784:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1785:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1786:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1787:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1788:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1789:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3) \
1790:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                          
1791:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1792:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 tmp;
1793:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1794:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x1 > x2)
1795:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1796:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             tmp = x2;
1797:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x1;
1798:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             x1 = tmp;
1799:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1800:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1801:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x2 > x3)
1802:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1803:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x3;
1804:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1805:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1806:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1807:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1808:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* End CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
1809:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1810:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1811:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
1812:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
1813:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1814:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
1815:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1816:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1817:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1818:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Averaging filter function.
1819:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1820:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  reports the averaging value.
1821:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1822:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1823:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 63


1824:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1825:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x3:  Before previous value.
1826:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1827:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1828:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1829:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1830:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1831:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3) \
1832:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                             
1833:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1834:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1835:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1836:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
1837:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1838:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* End CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
1839:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1840:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1841:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) || \
1842:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER) )
1843:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1844:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
1845:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1846:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1847:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1848:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1849:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1850:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1851:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1852:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1853:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1854:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1855:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1856:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1857:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1858:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2) \
1859:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                        
1860:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1861:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp;
1862:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1863:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1864:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1865:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp >>= 1u;
1866:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1867:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
1868:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1869:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* End CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
1870:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1871:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1872:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) || \
1873:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER) )
1874:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1875:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
1876:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1877:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1878:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1879:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1880:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 64


1881:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1882:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1883:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1884:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1885:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1886:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1887:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1888:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1889:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2) \
1890:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                        
1891:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1703              		.loc 1 1891 0
 1704              		.cfi_startproc
 1705              		@ args = 0, pretend = 0, frame = 16
 1706              		@ frame_needed = 1, uses_anonymous_args = 0
 1707              		@ link register save eliminated.
 1708 0000 80B4     		push	{r7}
 1709              	.LCFI42:
 1710              		.cfi_def_cfa_offset 4
 1711 0002 85B0     		sub	sp, sp, #20
 1712              	.LCFI43:
 1713              		.cfi_def_cfa_offset 24
 1714 0004 00AF     		add	r7, sp, #0
 1715              		.cfi_offset 7, -4
 1716              	.LCFI44:
 1717              		.cfi_def_cfa_register 7
 1718 0006 0246     		mov	r2, r0
 1719 0008 0B46     		mov	r3, r1
 1720 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1721 000c BB80     		strh	r3, [r7, #4]	@ movhi
1892:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp;
1893:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1894:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
1895:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1722              		.loc 1 1895 0
 1723 000e FA88     		ldrh	r2, [r7, #6]
 1724 0010 BB88     		ldrh	r3, [r7, #4]
 1725 0012 1344     		add	r3, r2, r3
 1726 0014 FB60     		str	r3, [r7, #12]
1896:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1727              		.loc 1 1896 0
 1728 0016 BB88     		ldrh	r3, [r7, #4]
 1729 0018 4FEA4303 		lsl	r3, r3, #1
 1730 001c FA68     		ldr	r2, [r7, #12]
 1731 001e 1344     		add	r3, r2, r3
 1732 0020 FB60     		str	r3, [r7, #12]
1897:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp >>= 2u;
 1733              		.loc 1 1897 0
 1734 0022 FB68     		ldr	r3, [r7, #12]
 1735 0024 4FEA9303 		lsr	r3, r3, #2
 1736 0028 FB60     		str	r3, [r7, #12]
1898:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1899:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
 1737              		.loc 1 1899 0
 1738 002a FB68     		ldr	r3, [r7, #12]
 1739 002c 9BB2     		uxth	r3, r3
1900:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 65


 1740              		.loc 1 1900 0
 1741 002e 1846     		mov	r0, r3
 1742 0030 07F11407 		add	r7, r7, #20
 1743 0034 BD46     		mov	sp, r7
 1744 0036 80BC     		pop	{r7}
 1745 0038 7047     		bx	lr
 1746              		.cfi_endproc
 1747              	.LFE14:
 1748              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1749 003a 00BF     		.text
 1750              	.Letext0:
 1751              		.section	.debug_loc,"",%progbits
 1752              	.Ldebug_loc0:
 1753              	.LLST0:
 1754 0000 00000000 		.4byte	.LFB0
 1755 0004 02000000 		.4byte	.LCFI0
 1756 0008 0100     		.2byte	0x1
 1757 000a 5D       		.byte	0x5d
 1758 000b 02000000 		.4byte	.LCFI0
 1759 000f 04000000 		.4byte	.LCFI1
 1760 0013 0200     		.2byte	0x2
 1761 0015 7D       		.byte	0x7d
 1762 0016 04       		.sleb128 4
 1763 0017 04000000 		.4byte	.LCFI1
 1764 001b 06000000 		.4byte	.LCFI2
 1765 001f 0200     		.2byte	0x2
 1766 0021 7D       		.byte	0x7d
 1767 0022 18       		.sleb128 24
 1768 0023 06000000 		.4byte	.LCFI2
 1769 0027 9C000000 		.4byte	.LFE0
 1770 002b 0200     		.2byte	0x2
 1771 002d 77       		.byte	0x77
 1772 002e 18       		.sleb128 24
 1773 002f 00000000 		.4byte	0x0
 1774 0033 00000000 		.4byte	0x0
 1775              	.LLST1:
 1776 0037 00000000 		.4byte	.LFB1
 1777 003b 02000000 		.4byte	.LCFI3
 1778 003f 0100     		.2byte	0x1
 1779 0041 5D       		.byte	0x5d
 1780 0042 02000000 		.4byte	.LCFI3
 1781 0046 04000000 		.4byte	.LCFI4
 1782 004a 0200     		.2byte	0x2
 1783 004c 7D       		.byte	0x7d
 1784 004d 08       		.sleb128 8
 1785 004e 04000000 		.4byte	.LCFI4
 1786 0052 06000000 		.4byte	.LCFI5
 1787 0056 0200     		.2byte	0x2
 1788 0058 7D       		.byte	0x7d
 1789 0059 10       		.sleb128 16
 1790 005a 06000000 		.4byte	.LCFI5
 1791 005e 2C000000 		.4byte	.LFE1
 1792 0062 0200     		.2byte	0x2
 1793 0064 77       		.byte	0x77
 1794 0065 10       		.sleb128 16
 1795 0066 00000000 		.4byte	0x0
 1796 006a 00000000 		.4byte	0x0
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 66


 1797              	.LLST2:
 1798 006e 00000000 		.4byte	.LFB2
 1799 0072 02000000 		.4byte	.LCFI6
 1800 0076 0100     		.2byte	0x1
 1801 0078 5D       		.byte	0x5d
 1802 0079 02000000 		.4byte	.LCFI6
 1803 007d 04000000 		.4byte	.LCFI7
 1804 0081 0200     		.2byte	0x2
 1805 0083 7D       		.byte	0x7d
 1806 0084 08       		.sleb128 8
 1807 0085 04000000 		.4byte	.LCFI7
 1808 0089 06000000 		.4byte	.LCFI8
 1809 008d 0200     		.2byte	0x2
 1810 008f 7D       		.byte	0x7d
 1811 0090 10       		.sleb128 16
 1812 0091 06000000 		.4byte	.LCFI8
 1813 0095 2C000000 		.4byte	.LFE2
 1814 0099 0200     		.2byte	0x2
 1815 009b 77       		.byte	0x77
 1816 009c 10       		.sleb128 16
 1817 009d 00000000 		.4byte	0x0
 1818 00a1 00000000 		.4byte	0x0
 1819              	.LLST3:
 1820 00a5 00000000 		.4byte	.LFB3
 1821 00a9 02000000 		.4byte	.LCFI9
 1822 00ad 0100     		.2byte	0x1
 1823 00af 5D       		.byte	0x5d
 1824 00b0 02000000 		.4byte	.LCFI9
 1825 00b4 04000000 		.4byte	.LCFI10
 1826 00b8 0200     		.2byte	0x2
 1827 00ba 7D       		.byte	0x7d
 1828 00bb 08       		.sleb128 8
 1829 00bc 04000000 		.4byte	.LCFI10
 1830 00c0 06000000 		.4byte	.LCFI11
 1831 00c4 0200     		.2byte	0x2
 1832 00c6 7D       		.byte	0x7d
 1833 00c7 10       		.sleb128 16
 1834 00c8 06000000 		.4byte	.LCFI11
 1835 00cc 7C000000 		.4byte	.LFE3
 1836 00d0 0200     		.2byte	0x2
 1837 00d2 77       		.byte	0x77
 1838 00d3 10       		.sleb128 16
 1839 00d4 00000000 		.4byte	0x0
 1840 00d8 00000000 		.4byte	0x0
 1841              	.LLST4:
 1842 00dc 00000000 		.4byte	.LFB4
 1843 00e0 02000000 		.4byte	.LCFI12
 1844 00e4 0100     		.2byte	0x1
 1845 00e6 5D       		.byte	0x5d
 1846 00e7 02000000 		.4byte	.LCFI12
 1847 00eb 04000000 		.4byte	.LCFI13
 1848 00ef 0200     		.2byte	0x2
 1849 00f1 7D       		.byte	0x7d
 1850 00f2 08       		.sleb128 8
 1851 00f3 04000000 		.4byte	.LCFI13
 1852 00f7 06000000 		.4byte	.LCFI14
 1853 00fb 0200     		.2byte	0x2
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 67


 1854 00fd 7D       		.byte	0x7d
 1855 00fe 20       		.sleb128 32
 1856 00ff 06000000 		.4byte	.LCFI14
 1857 0103 EC010000 		.4byte	.LFE4
 1858 0107 0200     		.2byte	0x2
 1859 0109 77       		.byte	0x77
 1860 010a 20       		.sleb128 32
 1861 010b 00000000 		.4byte	0x0
 1862 010f 00000000 		.4byte	0x0
 1863              	.LLST5:
 1864 0113 00000000 		.4byte	.LFB5
 1865 0117 02000000 		.4byte	.LCFI15
 1866 011b 0100     		.2byte	0x1
 1867 011d 5D       		.byte	0x5d
 1868 011e 02000000 		.4byte	.LCFI15
 1869 0122 04000000 		.4byte	.LCFI16
 1870 0126 0200     		.2byte	0x2
 1871 0128 7D       		.byte	0x7d
 1872 0129 08       		.sleb128 8
 1873 012a 04000000 		.4byte	.LCFI16
 1874 012e 06000000 		.4byte	.LCFI17
 1875 0132 0200     		.2byte	0x2
 1876 0134 7D       		.byte	0x7d
 1877 0135 10       		.sleb128 16
 1878 0136 06000000 		.4byte	.LCFI17
 1879 013a 5C000000 		.4byte	.LFE5
 1880 013e 0200     		.2byte	0x2
 1881 0140 77       		.byte	0x77
 1882 0141 10       		.sleb128 16
 1883 0142 00000000 		.4byte	0x0
 1884 0146 00000000 		.4byte	0x0
 1885              	.LLST6:
 1886 014a 00000000 		.4byte	.LFB6
 1887 014e 02000000 		.4byte	.LCFI18
 1888 0152 0100     		.2byte	0x1
 1889 0154 5D       		.byte	0x5d
 1890 0155 02000000 		.4byte	.LCFI18
 1891 0159 04000000 		.4byte	.LCFI19
 1892 015d 0200     		.2byte	0x2
 1893 015f 7D       		.byte	0x7d
 1894 0160 04       		.sleb128 4
 1895 0161 04000000 		.4byte	.LCFI19
 1896 0165 06000000 		.4byte	.LCFI20
 1897 0169 0200     		.2byte	0x2
 1898 016b 7D       		.byte	0x7d
 1899 016c 18       		.sleb128 24
 1900 016d 06000000 		.4byte	.LCFI20
 1901 0171 94010000 		.4byte	.LFE6
 1902 0175 0200     		.2byte	0x2
 1903 0177 77       		.byte	0x77
 1904 0178 18       		.sleb128 24
 1905 0179 00000000 		.4byte	0x0
 1906 017d 00000000 		.4byte	0x0
 1907              	.LLST7:
 1908 0181 00000000 		.4byte	.LFB7
 1909 0185 02000000 		.4byte	.LCFI21
 1910 0189 0100     		.2byte	0x1
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 68


 1911 018b 5D       		.byte	0x5d
 1912 018c 02000000 		.4byte	.LCFI21
 1913 0190 04000000 		.4byte	.LCFI22
 1914 0194 0200     		.2byte	0x2
 1915 0196 7D       		.byte	0x7d
 1916 0197 08       		.sleb128 8
 1917 0198 04000000 		.4byte	.LCFI22
 1918 019c 06000000 		.4byte	.LCFI23
 1919 01a0 0200     		.2byte	0x2
 1920 01a2 7D       		.byte	0x7d
 1921 01a3 18       		.sleb128 24
 1922 01a4 06000000 		.4byte	.LCFI23
 1923 01a8 60000000 		.4byte	.LFE7
 1924 01ac 0200     		.2byte	0x2
 1925 01ae 77       		.byte	0x77
 1926 01af 18       		.sleb128 24
 1927 01b0 00000000 		.4byte	0x0
 1928 01b4 00000000 		.4byte	0x0
 1929              	.LLST8:
 1930 01b8 00000000 		.4byte	.LFB8
 1931 01bc 02000000 		.4byte	.LCFI24
 1932 01c0 0100     		.2byte	0x1
 1933 01c2 5D       		.byte	0x5d
 1934 01c3 02000000 		.4byte	.LCFI24
 1935 01c7 04000000 		.4byte	.LCFI25
 1936 01cb 0200     		.2byte	0x2
 1937 01cd 7D       		.byte	0x7d
 1938 01ce 08       		.sleb128 8
 1939 01cf 04000000 		.4byte	.LCFI25
 1940 01d3 06000000 		.4byte	.LCFI26
 1941 01d7 0200     		.2byte	0x2
 1942 01d9 7D       		.byte	0x7d
 1943 01da 10       		.sleb128 16
 1944 01db 06000000 		.4byte	.LCFI26
 1945 01df 42000000 		.4byte	.LFE8
 1946 01e3 0200     		.2byte	0x2
 1947 01e5 77       		.byte	0x77
 1948 01e6 10       		.sleb128 16
 1949 01e7 00000000 		.4byte	0x0
 1950 01eb 00000000 		.4byte	0x0
 1951              	.LLST9:
 1952 01ef 00000000 		.4byte	.LFB9
 1953 01f3 02000000 		.4byte	.LCFI27
 1954 01f7 0100     		.2byte	0x1
 1955 01f9 5D       		.byte	0x5d
 1956 01fa 02000000 		.4byte	.LCFI27
 1957 01fe 04000000 		.4byte	.LCFI28
 1958 0202 0200     		.2byte	0x2
 1959 0204 7D       		.byte	0x7d
 1960 0205 04       		.sleb128 4
 1961 0206 04000000 		.4byte	.LCFI28
 1962 020a 06000000 		.4byte	.LCFI29
 1963 020e 0200     		.2byte	0x2
 1964 0210 7D       		.byte	0x7d
 1965 0211 18       		.sleb128 24
 1966 0212 06000000 		.4byte	.LCFI29
 1967 0216 7C000000 		.4byte	.LFE9
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 69


 1968 021a 0200     		.2byte	0x2
 1969 021c 77       		.byte	0x77
 1970 021d 18       		.sleb128 24
 1971 021e 00000000 		.4byte	0x0
 1972 0222 00000000 		.4byte	0x0
 1973              	.LLST10:
 1974 0226 00000000 		.4byte	.LFB10
 1975 022a 02000000 		.4byte	.LCFI30
 1976 022e 0100     		.2byte	0x1
 1977 0230 5D       		.byte	0x5d
 1978 0231 02000000 		.4byte	.LCFI30
 1979 0235 04000000 		.4byte	.LCFI31
 1980 0239 0200     		.2byte	0x2
 1981 023b 7D       		.byte	0x7d
 1982 023c 04       		.sleb128 4
 1983 023d 04000000 		.4byte	.LCFI31
 1984 0241 06000000 		.4byte	.LCFI32
 1985 0245 0200     		.2byte	0x2
 1986 0247 7D       		.byte	0x7d
 1987 0248 18       		.sleb128 24
 1988 0249 06000000 		.4byte	.LCFI32
 1989 024d 86000000 		.4byte	.LFE10
 1990 0251 0200     		.2byte	0x2
 1991 0253 77       		.byte	0x77
 1992 0254 18       		.sleb128 24
 1993 0255 00000000 		.4byte	0x0
 1994 0259 00000000 		.4byte	0x0
 1995              	.LLST11:
 1996 025d 00000000 		.4byte	.LFB11
 1997 0261 02000000 		.4byte	.LCFI33
 1998 0265 0100     		.2byte	0x1
 1999 0267 5D       		.byte	0x5d
 2000 0268 02000000 		.4byte	.LCFI33
 2001 026c 04000000 		.4byte	.LCFI34
 2002 0270 0200     		.2byte	0x2
 2003 0272 7D       		.byte	0x7d
 2004 0273 04       		.sleb128 4
 2005 0274 04000000 		.4byte	.LCFI34
 2006 0278 06000000 		.4byte	.LCFI35
 2007 027c 0200     		.2byte	0x2
 2008 027e 7D       		.byte	0x7d
 2009 027f 18       		.sleb128 24
 2010 0280 06000000 		.4byte	.LCFI35
 2011 0284 7C000000 		.4byte	.LFE11
 2012 0288 0200     		.2byte	0x2
 2013 028a 77       		.byte	0x77
 2014 028b 18       		.sleb128 24
 2015 028c 00000000 		.4byte	0x0
 2016 0290 00000000 		.4byte	0x0
 2017              	.LLST12:
 2018 0294 00000000 		.4byte	.LFB12
 2019 0298 02000000 		.4byte	.LCFI36
 2020 029c 0100     		.2byte	0x1
 2021 029e 5D       		.byte	0x5d
 2022 029f 02000000 		.4byte	.LCFI36
 2023 02a3 04000000 		.4byte	.LCFI37
 2024 02a7 0200     		.2byte	0x2
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 70


 2025 02a9 7D       		.byte	0x7d
 2026 02aa 04       		.sleb128 4
 2027 02ab 04000000 		.4byte	.LCFI37
 2028 02af 06000000 		.4byte	.LCFI38
 2029 02b3 0200     		.2byte	0x2
 2030 02b5 7D       		.byte	0x7d
 2031 02b6 20       		.sleb128 32
 2032 02b7 06000000 		.4byte	.LCFI38
 2033 02bb D2010000 		.4byte	.LFE12
 2034 02bf 0200     		.2byte	0x2
 2035 02c1 77       		.byte	0x77
 2036 02c2 20       		.sleb128 32
 2037 02c3 00000000 		.4byte	0x0
 2038 02c7 00000000 		.4byte	0x0
 2039              	.LLST13:
 2040 02cb 00000000 		.4byte	.LFB13
 2041 02cf 02000000 		.4byte	.LCFI39
 2042 02d3 0100     		.2byte	0x1
 2043 02d5 5D       		.byte	0x5d
 2044 02d6 02000000 		.4byte	.LCFI39
 2045 02da 04000000 		.4byte	.LCFI40
 2046 02de 0200     		.2byte	0x2
 2047 02e0 7D       		.byte	0x7d
 2048 02e1 08       		.sleb128 8
 2049 02e2 04000000 		.4byte	.LCFI40
 2050 02e6 06000000 		.4byte	.LCFI41
 2051 02ea 0200     		.2byte	0x2
 2052 02ec 7D       		.byte	0x7d
 2053 02ed 20       		.sleb128 32
 2054 02ee 06000000 		.4byte	.LCFI41
 2055 02f2 46010000 		.4byte	.LFE13
 2056 02f6 0200     		.2byte	0x2
 2057 02f8 77       		.byte	0x77
 2058 02f9 18       		.sleb128 24
 2059 02fa 00000000 		.4byte	0x0
 2060 02fe 00000000 		.4byte	0x0
 2061              	.LLST14:
 2062 0302 00000000 		.4byte	.LFB14
 2063 0306 02000000 		.4byte	.LCFI42
 2064 030a 0100     		.2byte	0x1
 2065 030c 5D       		.byte	0x5d
 2066 030d 02000000 		.4byte	.LCFI42
 2067 0311 04000000 		.4byte	.LCFI43
 2068 0315 0200     		.2byte	0x2
 2069 0317 7D       		.byte	0x7d
 2070 0318 04       		.sleb128 4
 2071 0319 04000000 		.4byte	.LCFI43
 2072 031d 06000000 		.4byte	.LCFI44
 2073 0321 0200     		.2byte	0x2
 2074 0323 7D       		.byte	0x7d
 2075 0324 18       		.sleb128 24
 2076 0325 06000000 		.4byte	.LCFI44
 2077 0329 3A000000 		.4byte	.LFE14
 2078 032d 0200     		.2byte	0x2
 2079 032f 77       		.byte	0x77
 2080 0330 18       		.sleb128 24
 2081 0331 00000000 		.4byte	0x0
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 71


 2082 0335 00000000 		.4byte	0x0
 2083              		.file 2 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 2084              		.section	.debug_info
 2085 0000 21080000 		.4byte	0x821
 2086 0004 0200     		.2byte	0x2
 2087 0006 00000000 		.4byte	.Ldebug_abbrev0
 2088 000a 04       		.byte	0x4
 2089 000b 01       		.uleb128 0x1
 2090 000c 6F000000 		.4byte	.LASF78
 2091 0010 01       		.byte	0x1
 2092 0011 CC020000 		.4byte	.LASF79
 2093 0015 BF000000 		.4byte	.LASF80
 2094 0019 00000000 		.4byte	0x0
 2095 001d 00000000 		.4byte	0x0
 2096 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 2097 0025 00000000 		.4byte	.Ldebug_line0
 2098 0029 02       		.uleb128 0x2
 2099 002a 01       		.byte	0x1
 2100 002b 06       		.byte	0x6
 2101 002c F1000000 		.4byte	.LASF0
 2102 0030 02       		.uleb128 0x2
 2103 0031 01       		.byte	0x1
 2104 0032 08       		.byte	0x8
 2105 0033 21040000 		.4byte	.LASF1
 2106 0037 02       		.uleb128 0x2
 2107 0038 02       		.byte	0x2
 2108 0039 05       		.byte	0x5
 2109 003a 5E040000 		.4byte	.LASF2
 2110 003e 02       		.uleb128 0x2
 2111 003f 02       		.byte	0x2
 2112 0040 07       		.byte	0x7
 2113 0041 7F020000 		.4byte	.LASF3
 2114 0045 02       		.uleb128 0x2
 2115 0046 04       		.byte	0x4
 2116 0047 05       		.byte	0x5
 2117 0048 4F010000 		.4byte	.LASF4
 2118 004c 02       		.uleb128 0x2
 2119 004d 04       		.byte	0x4
 2120 004e 07       		.byte	0x7
 2121 004f 3F020000 		.4byte	.LASF5
 2122 0053 02       		.uleb128 0x2
 2123 0054 08       		.byte	0x8
 2124 0055 05       		.byte	0x5
 2125 0056 94010000 		.4byte	.LASF6
 2126 005a 02       		.uleb128 0x2
 2127 005b 08       		.byte	0x8
 2128 005c 07       		.byte	0x7
 2129 005d 49000000 		.4byte	.LASF7
 2130 0061 03       		.uleb128 0x3
 2131 0062 04       		.byte	0x4
 2132 0063 05       		.byte	0x5
 2133 0064 696E7400 		.ascii	"int\000"
 2134 0068 02       		.uleb128 0x2
 2135 0069 04       		.byte	0x4
 2136 006a 07       		.byte	0x7
 2137 006b 16020000 		.4byte	.LASF8
 2138 006f 02       		.uleb128 0x2
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 72


 2139 0070 01       		.byte	0x1
 2140 0071 08       		.byte	0x8
 2141 0072 C5040000 		.4byte	.LASF9
 2142 0076 04       		.uleb128 0x4
 2143 0077 8E010000 		.4byte	.LASF10
 2144 007b 02       		.byte	0x2
 2145 007c 2A       		.byte	0x2a
 2146 007d 30000000 		.4byte	0x30
 2147 0081 04       		.uleb128 0x4
 2148 0082 06000000 		.4byte	.LASF11
 2149 0086 02       		.byte	0x2
 2150 0087 2B       		.byte	0x2b
 2151 0088 3E000000 		.4byte	0x3e
 2152 008c 04       		.uleb128 0x4
 2153 008d B8010000 		.4byte	.LASF12
 2154 0091 02       		.byte	0x2
 2155 0092 2C       		.byte	0x2c
 2156 0093 4C000000 		.4byte	0x4c
 2157 0097 04       		.uleb128 0x4
 2158 0098 43010000 		.4byte	.LASF13
 2159 009c 02       		.byte	0x2
 2160 009d 30       		.byte	0x30
 2161 009e 45000000 		.4byte	0x45
 2162 00a2 05       		.uleb128 0x5
 2163 00a3 04       		.byte	0x4
 2164 00a4 07       		.byte	0x7
 2165 00a5 06       		.uleb128 0x6
 2166 00a6 01       		.byte	0x1
 2167 00a7 7E040000 		.4byte	.LASF14
 2168 00ab 01       		.byte	0x1
 2169 00ac BE       		.byte	0xbe
 2170 00ad 01       		.byte	0x1
 2171 00ae 00000000 		.4byte	.LFB0
 2172 00b2 9C000000 		.4byte	.LFE0
 2173 00b6 00000000 		.4byte	.LLST0
 2174 00ba DB000000 		.4byte	0xdb
 2175 00be 07       		.uleb128 0x7
 2176 00bf 92020000 		.4byte	.LASF16
 2177 00c3 01       		.byte	0x1
 2178 00c4 BE       		.byte	0xbe
 2179 00c5 76000000 		.4byte	0x76
 2180 00c9 02       		.byte	0x2
 2181 00ca 91       		.byte	0x91
 2182 00cb 6F       		.sleb128 -17
 2183 00cc 08       		.uleb128 0x8
 2184 00cd 68040000 		.4byte	.LASF18
 2185 00d1 01       		.byte	0x1
 2186 00d2 C2       		.byte	0xc2
 2187 00d3 76000000 		.4byte	0x76
 2188 00d7 02       		.byte	0x2
 2189 00d8 91       		.byte	0x91
 2190 00d9 77       		.sleb128 -9
 2191 00da 00       		.byte	0x0
 2192 00db 09       		.uleb128 0x9
 2193 00dc 01       		.byte	0x1
 2194 00dd 5F030000 		.4byte	.LASF15
 2195 00e1 01       		.byte	0x1
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 73


 2196 00e2 0801     		.2byte	0x108
 2197 00e4 01       		.byte	0x1
 2198 00e5 00000000 		.4byte	.LFB1
 2199 00e9 2C000000 		.4byte	.LFE1
 2200 00ed 37000000 		.4byte	.LLST1
 2201 00f1 05010000 		.4byte	0x105
 2202 00f5 0A       		.uleb128 0xa
 2203 00f6 92020000 		.4byte	.LASF16
 2204 00fa 01       		.byte	0x1
 2205 00fb 0801     		.2byte	0x108
 2206 00fd 76000000 		.4byte	0x76
 2207 0101 02       		.byte	0x2
 2208 0102 91       		.byte	0x91
 2209 0103 77       		.sleb128 -9
 2210 0104 00       		.byte	0x0
 2211 0105 09       		.uleb128 0x9
 2212 0106 01       		.byte	0x1
 2213 0107 2F040000 		.4byte	.LASF17
 2214 010b 01       		.byte	0x1
 2215 010c 3801     		.2byte	0x138
 2216 010e 01       		.byte	0x1
 2217 010f 00000000 		.4byte	.LFB2
 2218 0113 2C000000 		.4byte	.LFE2
 2219 0117 6E000000 		.4byte	.LLST2
 2220 011b 2D010000 		.4byte	0x12d
 2221 011f 0B       		.uleb128 0xb
 2222 0120 6900     		.ascii	"i\000"
 2223 0122 01       		.byte	0x1
 2224 0123 3A01     		.2byte	0x13a
 2225 0125 76000000 		.4byte	0x76
 2226 0129 02       		.byte	0x2
 2227 012a 91       		.byte	0x91
 2228 012b 77       		.sleb128 -9
 2229 012c 00       		.byte	0x0
 2230 012d 09       		.uleb128 0x9
 2231 012e 01       		.byte	0x1
 2232 012f 7B000000 		.4byte	.LASF19
 2233 0133 01       		.byte	0x1
 2234 0134 5801     		.2byte	0x158
 2235 0136 01       		.byte	0x1
 2236 0137 00000000 		.4byte	.LFB3
 2237 013b 7C000000 		.4byte	.LFE3
 2238 013f A5000000 		.4byte	.LLST3
 2239 0143 73010000 		.4byte	0x173
 2240 0147 0B       		.uleb128 0xb
 2241 0148 6900     		.ascii	"i\000"
 2242 014a 01       		.byte	0x1
 2243 014b 5A01     		.2byte	0x15a
 2244 014d 76000000 		.4byte	0x76
 2245 0151 02       		.byte	0x2
 2246 0152 91       		.byte	0x91
 2247 0153 75       		.sleb128 -11
 2248 0154 0B       		.uleb128 0xb
 2249 0155 706F7300 		.ascii	"pos\000"
 2250 0159 01       		.byte	0x1
 2251 015a 5B01     		.2byte	0x15b
 2252 015c 76000000 		.4byte	0x76
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 74


 2253 0160 02       		.byte	0x2
 2254 0161 91       		.byte	0x91
 2255 0162 76       		.sleb128 -10
 2256 0163 0C       		.uleb128 0xc
 2257 0164 B4030000 		.4byte	.LASF20
 2258 0168 01       		.byte	0x1
 2259 0169 5C01     		.2byte	0x15c
 2260 016b 76000000 		.4byte	0x76
 2261 016f 02       		.byte	0x2
 2262 0170 91       		.byte	0x91
 2263 0171 77       		.sleb128 -9
 2264 0172 00       		.byte	0x0
 2265 0173 09       		.uleb128 0x9
 2266 0174 01       		.byte	0x1
 2267 0175 AE020000 		.4byte	.LASF21
 2268 0179 01       		.byte	0x1
 2269 017a 9701     		.2byte	0x197
 2270 017c 01       		.byte	0x1
 2271 017d 00000000 		.4byte	.LFB4
 2272 0181 EC010000 		.4byte	.LFE4
 2273 0185 DC000000 		.4byte	.LLST4
 2274 0189 E8010000 		.4byte	0x1e8
 2275 018d 0A       		.uleb128 0xa
 2276 018e 92020000 		.4byte	.LASF16
 2277 0192 01       		.byte	0x1
 2278 0193 9701     		.2byte	0x197
 2279 0195 76000000 		.4byte	0x76
 2280 0199 02       		.byte	0x2
 2281 019a 91       		.byte	0x91
 2282 019b 67       		.sleb128 -25
 2283 019c 0C       		.uleb128 0xc
 2284 019d F5020000 		.4byte	.LASF22
 2285 01a1 01       		.byte	0x1
 2286 01a2 9901     		.2byte	0x199
 2287 01a4 8C000000 		.4byte	0x8c
 2288 01a8 02       		.byte	0x2
 2289 01a9 91       		.byte	0x91
 2290 01aa 6C       		.sleb128 -20
 2291 01ab 0C       		.uleb128 0xc
 2292 01ac 6D050000 		.4byte	.LASF23
 2293 01b0 01       		.byte	0x1
 2294 01b1 9A01     		.2byte	0x19a
 2295 01b3 81000000 		.4byte	0x81
 2296 01b7 02       		.byte	0x2
 2297 01b8 91       		.byte	0x91
 2298 01b9 72       		.sleb128 -14
 2299 01ba 0C       		.uleb128 0xc
 2300 01bb 0D000000 		.4byte	.LASF24
 2301 01bf 01       		.byte	0x1
 2302 01c0 9B01     		.2byte	0x19b
 2303 01c2 81000000 		.4byte	0x81
 2304 01c6 02       		.byte	0x2
 2305 01c7 91       		.byte	0x91
 2306 01c8 74       		.sleb128 -12
 2307 01c9 0C       		.uleb128 0xc
 2308 01ca 68040000 		.4byte	.LASF18
 2309 01ce 01       		.byte	0x1
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 75


 2310 01cf 9C01     		.2byte	0x19c
 2311 01d1 76000000 		.4byte	0x76
 2312 01d5 02       		.byte	0x2
 2313 01d6 91       		.byte	0x91
 2314 01d7 76       		.sleb128 -10
 2315 01d8 0C       		.uleb128 0xc
 2316 01d9 4F040000 		.4byte	.LASF25
 2317 01dd 01       		.byte	0x1
 2318 01de 9D01     		.2byte	0x19d
 2319 01e0 76000000 		.4byte	0x76
 2320 01e4 02       		.byte	0x2
 2321 01e5 91       		.byte	0x91
 2322 01e6 77       		.sleb128 -9
 2323 01e7 00       		.byte	0x0
 2324 01e8 09       		.uleb128 0x9
 2325 01e9 01       		.byte	0x1
 2326 01ea 9F000000 		.4byte	.LASF26
 2327 01ee 01       		.byte	0x1
 2328 01ef 4302     		.2byte	0x243
 2329 01f1 01       		.byte	0x1
 2330 01f2 00000000 		.4byte	.LFB5
 2331 01f6 5C000000 		.4byte	.LFE5
 2332 01fa 13010000 		.4byte	.LLST5
 2333 01fe 2E020000 		.4byte	0x22e
 2334 0202 0B       		.uleb128 0xb
 2335 0203 6900     		.ascii	"i\000"
 2336 0205 01       		.byte	0x1
 2337 0206 4502     		.2byte	0x245
 2338 0208 76000000 		.4byte	0x76
 2339 020c 02       		.byte	0x2
 2340 020d 91       		.byte	0x91
 2341 020e 75       		.sleb128 -11
 2342 020f 0B       		.uleb128 0xb
 2343 0210 706F7300 		.ascii	"pos\000"
 2344 0214 01       		.byte	0x1
 2345 0215 4602     		.2byte	0x246
 2346 0217 76000000 		.4byte	0x76
 2347 021b 02       		.byte	0x2
 2348 021c 91       		.byte	0x91
 2349 021d 76       		.sleb128 -10
 2350 021e 0C       		.uleb128 0xc
 2351 021f B4030000 		.4byte	.LASF20
 2352 0223 01       		.byte	0x1
 2353 0224 4702     		.2byte	0x247
 2354 0226 76000000 		.4byte	0x76
 2355 022a 02       		.byte	0x2
 2356 022b 91       		.byte	0x91
 2357 022c 77       		.sleb128 -9
 2358 022d 00       		.byte	0x0
 2359 022e 0D       		.uleb128 0xd
 2360 022f 01       		.byte	0x1
 2361 0230 97030000 		.4byte	.LASF32
 2362 0234 01       		.byte	0x1
 2363 0235 7C02     		.2byte	0x27c
 2364 0237 01       		.byte	0x1
 2365 0238 76000000 		.4byte	0x76
 2366 023c 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 76


 2367 0240 94010000 		.4byte	.LFE6
 2368 0244 4A010000 		.4byte	.LLST6
 2369 0248 C5020000 		.4byte	0x2c5
 2370 024c 0A       		.uleb128 0xa
 2371 024d 92020000 		.4byte	.LASF16
 2372 0251 01       		.byte	0x1
 2373 0252 7C02     		.2byte	0x27c
 2374 0254 76000000 		.4byte	0x76
 2375 0258 02       		.byte	0x2
 2376 0259 91       		.byte	0x91
 2377 025a 6F       		.sleb128 -17
 2378 025b 0C       		.uleb128 0xc
 2379 025c 15050000 		.4byte	.LASF27
 2380 0260 01       		.byte	0x1
 2381 0261 7E02     		.2byte	0x27e
 2382 0263 76000000 		.4byte	0x76
 2383 0267 02       		.byte	0x2
 2384 0268 91       		.byte	0x91
 2385 0269 71       		.sleb128 -15
 2386 026a 0B       		.uleb128 0xb
 2387 026b 706F7300 		.ascii	"pos\000"
 2388 026f 01       		.byte	0x1
 2389 0270 8002     		.2byte	0x280
 2390 0272 76000000 		.4byte	0x76
 2391 0276 02       		.byte	0x2
 2392 0277 91       		.byte	0x91
 2393 0278 72       		.sleb128 -14
 2394 0279 0C       		.uleb128 0xc
 2395 027a 6F040000 		.4byte	.LASF28
 2396 027e 01       		.byte	0x1
 2397 027f 8102     		.2byte	0x281
 2398 0281 76000000 		.4byte	0x76
 2399 0285 02       		.byte	0x2
 2400 0286 91       		.byte	0x91
 2401 0287 73       		.sleb128 -13
 2402 0288 0C       		.uleb128 0xc
 2403 0289 68040000 		.4byte	.LASF18
 2404 028d 01       		.byte	0x1
 2405 028e 8302     		.2byte	0x283
 2406 0290 76000000 		.4byte	0x76
 2407 0294 02       		.byte	0x2
 2408 0295 91       		.byte	0x91
 2409 0296 74       		.sleb128 -12
 2410 0297 0C       		.uleb128 0xc
 2411 0298 31000000 		.4byte	.LASF29
 2412 029c 01       		.byte	0x1
 2413 029d 8402     		.2byte	0x284
 2414 029f 76000000 		.4byte	0x76
 2415 02a3 02       		.byte	0x2
 2416 02a4 91       		.byte	0x91
 2417 02a5 75       		.sleb128 -11
 2418 02a6 0C       		.uleb128 0xc
 2419 02a7 BF010000 		.4byte	.LASF30
 2420 02ab 01       		.byte	0x1
 2421 02ac 8502     		.2byte	0x285
 2422 02ae 76000000 		.4byte	0x76
 2423 02b2 02       		.byte	0x2
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 77


 2424 02b3 91       		.byte	0x91
 2425 02b4 76       		.sleb128 -10
 2426 02b5 0C       		.uleb128 0xc
 2427 02b6 1B030000 		.4byte	.LASF31
 2428 02ba 01       		.byte	0x1
 2429 02bb 8602     		.2byte	0x286
 2430 02bd 76000000 		.4byte	0x76
 2431 02c1 02       		.byte	0x2
 2432 02c2 91       		.byte	0x91
 2433 02c3 77       		.sleb128 -9
 2434 02c4 00       		.byte	0x0
 2435 02c5 0D       		.uleb128 0xd
 2436 02c6 01       		.byte	0x1
 2437 02c7 04040000 		.4byte	.LASF33
 2438 02cb 01       		.byte	0x1
 2439 02cc CA02     		.2byte	0x2ca
 2440 02ce 01       		.byte	0x1
 2441 02cf 76000000 		.4byte	0x76
 2442 02d3 00000000 		.4byte	.LFB7
 2443 02d7 60000000 		.4byte	.LFE7
 2444 02db 81010000 		.4byte	.LLST7
 2445 02df 20030000 		.4byte	0x320
 2446 02e3 0A       		.uleb128 0xa
 2447 02e4 68040000 		.4byte	.LASF18
 2448 02e8 01       		.byte	0x1
 2449 02e9 CA02     		.2byte	0x2ca
 2450 02eb 76000000 		.4byte	0x76
 2451 02ef 02       		.byte	0x2
 2452 02f0 91       		.byte	0x91
 2453 02f1 6F       		.sleb128 -17
 2454 02f2 0C       		.uleb128 0xc
 2455 02f3 2A010000 		.4byte	.LASF34
 2456 02f7 01       		.byte	0x1
 2457 02f8 CC02     		.2byte	0x2cc
 2458 02fa 76000000 		.4byte	0x76
 2459 02fe 02       		.byte	0x2
 2460 02ff 91       		.byte	0x91
 2461 0300 75       		.sleb128 -11
 2462 0301 0C       		.uleb128 0xc
 2463 0302 33010000 		.4byte	.LASF35
 2464 0306 01       		.byte	0x1
 2465 0307 CD02     		.2byte	0x2cd
 2466 0309 76000000 		.4byte	0x76
 2467 030d 02       		.byte	0x2
 2468 030e 91       		.byte	0x91
 2469 030f 76       		.sleb128 -10
 2470 0310 0C       		.uleb128 0xc
 2471 0311 49010000 		.4byte	.LASF36
 2472 0315 01       		.byte	0x1
 2473 0316 CE02     		.2byte	0x2ce
 2474 0318 76000000 		.4byte	0x76
 2475 031c 02       		.byte	0x2
 2476 031d 91       		.byte	0x91
 2477 031e 77       		.sleb128 -9
 2478 031f 00       		.byte	0x0
 2479 0320 0D       		.uleb128 0xd
 2480 0321 01       		.byte	0x1
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 78


 2481 0322 62010000 		.4byte	.LASF37
 2482 0326 01       		.byte	0x1
 2483 0327 F502     		.2byte	0x2f5
 2484 0329 01       		.byte	0x1
 2485 032a 76000000 		.4byte	0x76
 2486 032e 00000000 		.4byte	.LFB8
 2487 0332 42000000 		.4byte	.LFE8
 2488 0336 B8010000 		.4byte	.LLST8
 2489 033a 5B030000 		.4byte	0x35b
 2490 033e 0B       		.uleb128 0xb
 2491 033f 6900     		.ascii	"i\000"
 2492 0341 01       		.byte	0x1
 2493 0342 F702     		.2byte	0x2f7
 2494 0344 76000000 		.4byte	0x76
 2495 0348 02       		.byte	0x2
 2496 0349 91       		.byte	0x91
 2497 034a 76       		.sleb128 -10
 2498 034b 0C       		.uleb128 0xc
 2499 034c 49010000 		.4byte	.LASF36
 2500 0350 01       		.byte	0x1
 2501 0351 F802     		.2byte	0x2f8
 2502 0353 76000000 		.4byte	0x76
 2503 0357 02       		.byte	0x2
 2504 0358 91       		.byte	0x91
 2505 0359 77       		.sleb128 -9
 2506 035a 00       		.byte	0x0
 2507 035b 09       		.uleb128 0x9
 2508 035c 01       		.byte	0x1
 2509 035d 3A030000 		.4byte	.LASF38
 2510 0361 01       		.byte	0x1
 2511 0362 2203     		.2byte	0x322
 2512 0364 01       		.byte	0x1
 2513 0365 00000000 		.4byte	.LFB9
 2514 0369 7C000000 		.4byte	.LFE9
 2515 036d EF010000 		.4byte	.LLST9
 2516 0371 C1030000 		.4byte	0x3c1
 2517 0375 0A       		.uleb128 0xa
 2518 0376 68040000 		.4byte	.LASF18
 2519 037a 01       		.byte	0x1
 2520 037b 2203     		.2byte	0x322
 2521 037d 76000000 		.4byte	0x76
 2522 0381 02       		.byte	0x2
 2523 0382 91       		.byte	0x91
 2524 0383 6F       		.sleb128 -17
 2525 0384 0B       		.uleb128 0xb
 2526 0385 706F7300 		.ascii	"pos\000"
 2527 0389 01       		.byte	0x1
 2528 038a 2403     		.2byte	0x324
 2529 038c 76000000 		.4byte	0x76
 2530 0390 02       		.byte	0x2
 2531 0391 91       		.byte	0x91
 2532 0392 74       		.sleb128 -12
 2533 0393 0C       		.uleb128 0xc
 2534 0394 B4030000 		.4byte	.LASF20
 2535 0398 01       		.byte	0x1
 2536 0399 2503     		.2byte	0x325
 2537 039b 76000000 		.4byte	0x76
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 79


 2538 039f 02       		.byte	0x2
 2539 03a0 91       		.byte	0x91
 2540 03a1 75       		.sleb128 -11
 2541 03a2 0C       		.uleb128 0xc
 2542 03a3 2A010000 		.4byte	.LASF34
 2543 03a7 01       		.byte	0x1
 2544 03a8 2603     		.2byte	0x326
 2545 03aa 76000000 		.4byte	0x76
 2546 03ae 02       		.byte	0x2
 2547 03af 91       		.byte	0x91
 2548 03b0 76       		.sleb128 -10
 2549 03b1 0C       		.uleb128 0xc
 2550 03b2 33010000 		.4byte	.LASF35
 2551 03b6 01       		.byte	0x1
 2552 03b7 2703     		.2byte	0x327
 2553 03b9 76000000 		.4byte	0x76
 2554 03bd 02       		.byte	0x2
 2555 03be 91       		.byte	0x91
 2556 03bf 77       		.sleb128 -9
 2557 03c0 00       		.byte	0x0
 2558 03c1 09       		.uleb128 0x9
 2559 03c2 01       		.byte	0x1
 2560 03c3 13010000 		.4byte	.LASF39
 2561 03c7 01       		.byte	0x1
 2562 03c8 5303     		.2byte	0x353
 2563 03ca 01       		.byte	0x1
 2564 03cb 00000000 		.4byte	.LFB10
 2565 03cf 86000000 		.4byte	.LFE10
 2566 03d3 26020000 		.4byte	.LLST10
 2567 03d7 27040000 		.4byte	0x427
 2568 03db 0A       		.uleb128 0xa
 2569 03dc 68040000 		.4byte	.LASF18
 2570 03e0 01       		.byte	0x1
 2571 03e1 5303     		.2byte	0x353
 2572 03e3 76000000 		.4byte	0x76
 2573 03e7 02       		.byte	0x2
 2574 03e8 91       		.byte	0x91
 2575 03e9 6F       		.sleb128 -17
 2576 03ea 0B       		.uleb128 0xb
 2577 03eb 706F7300 		.ascii	"pos\000"
 2578 03ef 01       		.byte	0x1
 2579 03f0 5503     		.2byte	0x355
 2580 03f2 76000000 		.4byte	0x76
 2581 03f6 02       		.byte	0x2
 2582 03f7 91       		.byte	0x91
 2583 03f8 74       		.sleb128 -12
 2584 03f9 0C       		.uleb128 0xc
 2585 03fa B4030000 		.4byte	.LASF20
 2586 03fe 01       		.byte	0x1
 2587 03ff 5603     		.2byte	0x356
 2588 0401 76000000 		.4byte	0x76
 2589 0405 02       		.byte	0x2
 2590 0406 91       		.byte	0x91
 2591 0407 75       		.sleb128 -11
 2592 0408 0C       		.uleb128 0xc
 2593 0409 2A010000 		.4byte	.LASF34
 2594 040d 01       		.byte	0x1
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 80


 2595 040e 5703     		.2byte	0x357
 2596 0410 76000000 		.4byte	0x76
 2597 0414 02       		.byte	0x2
 2598 0415 91       		.byte	0x91
 2599 0416 76       		.sleb128 -10
 2600 0417 0C       		.uleb128 0xc
 2601 0418 33010000 		.4byte	.LASF35
 2602 041c 01       		.byte	0x1
 2603 041d 5803     		.2byte	0x358
 2604 041f 76000000 		.4byte	0x76
 2605 0423 02       		.byte	0x2
 2606 0424 91       		.byte	0x91
 2607 0425 77       		.sleb128 -9
 2608 0426 00       		.byte	0x0
 2609 0427 0D       		.uleb128 0xd
 2610 0428 01       		.byte	0x1
 2611 0429 99020000 		.4byte	.LASF40
 2612 042d 01       		.byte	0x1
 2613 042e 8303     		.2byte	0x383
 2614 0430 01       		.byte	0x1
 2615 0431 76000000 		.4byte	0x76
 2616 0435 00000000 		.4byte	.LFB11
 2617 0439 7C000000 		.4byte	.LFE11
 2618 043d 5D020000 		.4byte	.LLST11
 2619 0441 AD040000 		.4byte	0x4ad
 2620 0445 0A       		.uleb128 0xa
 2621 0446 0E050000 		.4byte	.LASF41
 2622 044a 01       		.byte	0x1
 2623 044b 8303     		.2byte	0x383
 2624 044d 76000000 		.4byte	0x76
 2625 0451 02       		.byte	0x2
 2626 0452 91       		.byte	0x91
 2627 0453 6F       		.sleb128 -17
 2628 0454 0A       		.uleb128 0xa
 2629 0455 00000000 		.4byte	.LASF42
 2630 0459 01       		.byte	0x1
 2631 045a 8303     		.2byte	0x383
 2632 045c 76000000 		.4byte	0x76
 2633 0460 02       		.byte	0x2
 2634 0461 91       		.byte	0x91
 2635 0462 6E       		.sleb128 -18
 2636 0463 0A       		.uleb128 0xa
 2637 0464 31000000 		.4byte	.LASF29
 2638 0468 01       		.byte	0x1
 2639 0469 8303     		.2byte	0x383
 2640 046b 76000000 		.4byte	0x76
 2641 046f 02       		.byte	0x2
 2642 0470 91       		.byte	0x91
 2643 0471 6D       		.sleb128 -19
 2644 0472 0B       		.uleb128 0xb
 2645 0473 6900     		.ascii	"i\000"
 2646 0475 01       		.byte	0x1
 2647 0476 8603     		.2byte	0x386
 2648 0478 76000000 		.4byte	0x76
 2649 047c 02       		.byte	0x2
 2650 047d 91       		.byte	0x91
 2651 047e 71       		.sleb128 -15
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 81


 2652 047f 0C       		.uleb128 0xc
 2653 0480 76040000 		.4byte	.LASF43
 2654 0484 01       		.byte	0x1
 2655 0485 9003     		.2byte	0x390
 2656 0487 76000000 		.4byte	0x76
 2657 048b 02       		.byte	0x2
 2658 048c 91       		.byte	0x91
 2659 048d 72       		.sleb128 -14
 2660 048e 0C       		.uleb128 0xc
 2661 048f FD010000 		.4byte	.LASF44
 2662 0493 01       		.byte	0x1
 2663 0494 9103     		.2byte	0x391
 2664 0496 76000000 		.4byte	0x76
 2665 049a 02       		.byte	0x2
 2666 049b 91       		.byte	0x91
 2667 049c 73       		.sleb128 -13
 2668 049d 0C       		.uleb128 0xc
 2669 049e EF010000 		.4byte	.LASF45
 2670 04a2 01       		.byte	0x1
 2671 04a3 9203     		.2byte	0x392
 2672 04a5 AD040000 		.4byte	0x4ad
 2673 04a9 02       		.byte	0x2
 2674 04aa 91       		.byte	0x91
 2675 04ab 74       		.sleb128 -12
 2676 04ac 00       		.byte	0x0
 2677 04ad 0E       		.uleb128 0xe
 2678 04ae 04       		.byte	0x4
 2679 04af 76000000 		.4byte	0x76
 2680 04b3 0D       		.uleb128 0xd
 2681 04b4 01       		.byte	0x1
 2682 04b5 3E050000 		.4byte	.LASF46
 2683 04b9 01       		.byte	0x1
 2684 04ba 1E04     		.2byte	0x41e
 2685 04bc 01       		.byte	0x1
 2686 04bd 76000000 		.4byte	0x76
 2687 04c1 00000000 		.4byte	.LFB12
 2688 04c5 D2010000 		.4byte	.LFE12
 2689 04c9 94020000 		.4byte	.LLST12
 2690 04cd 77050000 		.4byte	0x577
 2691 04d1 0A       		.uleb128 0xa
 2692 04d2 76040000 		.4byte	.LASF43
 2693 04d6 01       		.byte	0x1
 2694 04d7 1E04     		.2byte	0x41e
 2695 04d9 76000000 		.4byte	0x76
 2696 04dd 02       		.byte	0x2
 2697 04de 91       		.byte	0x91
 2698 04df 67       		.sleb128 -25
 2699 04e0 0A       		.uleb128 0xa
 2700 04e1 0E050000 		.4byte	.LASF41
 2701 04e5 01       		.byte	0x1
 2702 04e6 1E04     		.2byte	0x41e
 2703 04e8 76000000 		.4byte	0x76
 2704 04ec 02       		.byte	0x2
 2705 04ed 91       		.byte	0x91
 2706 04ee 66       		.sleb128 -26
 2707 04ef 0A       		.uleb128 0xa
 2708 04f0 00000000 		.4byte	.LASF42
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 82


 2709 04f4 01       		.byte	0x1
 2710 04f5 1E04     		.2byte	0x41e
 2711 04f7 76000000 		.4byte	0x76
 2712 04fb 02       		.byte	0x2
 2713 04fc 91       		.byte	0x91
 2714 04fd 65       		.sleb128 -27
 2715 04fe 0A       		.uleb128 0xa
 2716 04ff 90040000 		.4byte	.LASF47
 2717 0503 01       		.byte	0x1
 2718 0504 1E04     		.2byte	0x41e
 2719 0506 81000000 		.4byte	0x81
 2720 050a 02       		.byte	0x2
 2721 050b 91       		.byte	0x91
 2722 050c 62       		.sleb128 -30
 2723 050d 0A       		.uleb128 0xa
 2724 050e 4F040000 		.4byte	.LASF25
 2725 0512 01       		.byte	0x1
 2726 0513 1E04     		.2byte	0x41e
 2727 0515 76000000 		.4byte	0x76
 2728 0519 02       		.byte	0x2
 2729 051a 91       		.byte	0x91
 2730 051b 00       		.sleb128 0
 2731 051c 0C       		.uleb128 0xc
 2732 051d 41000000 		.4byte	.LASF48
 2733 0521 01       		.byte	0x1
 2734 0522 2104     		.2byte	0x421
 2735 0524 76000000 		.4byte	0x76
 2736 0528 02       		.byte	0x2
 2737 0529 91       		.byte	0x91
 2738 052a 69       		.sleb128 -23
 2739 052b 0C       		.uleb128 0xc
 2740 052c E7010000 		.4byte	.LASF49
 2741 0530 01       		.byte	0x1
 2742 0531 2204     		.2byte	0x422
 2743 0533 76000000 		.4byte	0x76
 2744 0537 02       		.byte	0x2
 2745 0538 91       		.byte	0x91
 2746 0539 6A       		.sleb128 -22
 2747 053a 0C       		.uleb128 0xc
 2748 053b 23020000 		.4byte	.LASF50
 2749 053f 01       		.byte	0x1
 2750 0540 2904     		.2byte	0x429
 2751 0542 76000000 		.4byte	0x76
 2752 0546 02       		.byte	0x2
 2753 0547 91       		.byte	0x91
 2754 0548 6B       		.sleb128 -21
 2755 0549 0C       		.uleb128 0xc
 2756 054a 58010000 		.4byte	.LASF51
 2757 054e 01       		.byte	0x1
 2758 054f 2A04     		.2byte	0x42a
 2759 0551 97000000 		.4byte	0x97
 2760 0555 02       		.byte	0x2
 2761 0556 91       		.byte	0x91
 2762 0557 6C       		.sleb128 -20
 2763 0558 0C       		.uleb128 0xc
 2764 0559 82010000 		.4byte	.LASF52
 2765 055d 01       		.byte	0x1
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 83


 2766 055e 2B04     		.2byte	0x42b
 2767 0560 97000000 		.4byte	0x97
 2768 0564 02       		.byte	0x2
 2769 0565 91       		.byte	0x91
 2770 0566 70       		.sleb128 -16
 2771 0567 0C       		.uleb128 0xc
 2772 0568 EF010000 		.4byte	.LASF45
 2773 056c 01       		.byte	0x1
 2774 056d 2C04     		.2byte	0x42c
 2775 056f AD040000 		.4byte	0x4ad
 2776 0573 02       		.byte	0x2
 2777 0574 91       		.byte	0x91
 2778 0575 74       		.sleb128 -12
 2779 0576 00       		.byte	0x0
 2780 0577 0D       		.uleb128 0xd
 2781 0578 01       		.byte	0x1
 2782 0579 AD040000 		.4byte	.LASF53
 2783 057d 01       		.byte	0x1
 2784 057e E304     		.2byte	0x4e3
 2785 0580 01       		.byte	0x1
 2786 0581 81000000 		.4byte	0x81
 2787 0585 00000000 		.4byte	.LFB13
 2788 0589 46010000 		.4byte	.LFE13
 2789 058d CB020000 		.4byte	.LLST13
 2790 0591 0E060000 		.4byte	0x60e
 2791 0595 0A       		.uleb128 0xa
 2792 0596 68040000 		.4byte	.LASF18
 2793 059a 01       		.byte	0x1
 2794 059b E304     		.2byte	0x4e3
 2795 059d 76000000 		.4byte	0x76
 2796 05a1 02       		.byte	0x2
 2797 05a2 91       		.byte	0x91
 2798 05a3 6F       		.sleb128 -17
 2799 05a4 0C       		.uleb128 0xc
 2800 05a5 12030000 		.4byte	.LASF54
 2801 05a9 01       		.byte	0x1
 2802 05aa EA04     		.2byte	0x4ea
 2803 05ac 76000000 		.4byte	0x76
 2804 05b0 02       		.byte	0x2
 2805 05b1 91       		.byte	0x91
 2806 05b2 70       		.sleb128 -16
 2807 05b3 0C       		.uleb128 0xc
 2808 05b4 60000000 		.4byte	.LASF55
 2809 05b8 01       		.byte	0x1
 2810 05b9 EB04     		.2byte	0x4eb
 2811 05bb 76000000 		.4byte	0x76
 2812 05bf 02       		.byte	0x2
 2813 05c0 91       		.byte	0x91
 2814 05c1 71       		.sleb128 -15
 2815 05c2 0C       		.uleb128 0xc
 2816 05c3 50030000 		.4byte	.LASF56
 2817 05c7 01       		.byte	0x1
 2818 05c8 EC04     		.2byte	0x4ec
 2819 05ca 76000000 		.4byte	0x76
 2820 05ce 02       		.byte	0x2
 2821 05cf 91       		.byte	0x91
 2822 05d0 72       		.sleb128 -14
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 84


 2823 05d1 0C       		.uleb128 0xc
 2824 05d2 76040000 		.4byte	.LASF43
 2825 05d6 01       		.byte	0x1
 2826 05d7 F404     		.2byte	0x4f4
 2827 05d9 76000000 		.4byte	0x76
 2828 05dd 02       		.byte	0x2
 2829 05de 91       		.byte	0x91
 2830 05df 73       		.sleb128 -13
 2831 05e0 0C       		.uleb128 0xc
 2832 05e1 23020000 		.4byte	.LASF50
 2833 05e5 01       		.byte	0x1
 2834 05e6 F504     		.2byte	0x4f5
 2835 05e8 81000000 		.4byte	0x81
 2836 05ec 02       		.byte	0x2
 2837 05ed 91       		.byte	0x91
 2838 05ee 74       		.sleb128 -12
 2839 05ef 0C       		.uleb128 0xc
 2840 05f0 0E050000 		.4byte	.LASF41
 2841 05f4 01       		.byte	0x1
 2842 05f5 F604     		.2byte	0x4f6
 2843 05f7 76000000 		.4byte	0x76
 2844 05fb 02       		.byte	0x2
 2845 05fc 91       		.byte	0x91
 2846 05fd 76       		.sleb128 -10
 2847 05fe 0C       		.uleb128 0xc
 2848 05ff 00000000 		.4byte	.LASF42
 2849 0603 01       		.byte	0x1
 2850 0604 F704     		.2byte	0x4f7
 2851 0606 76000000 		.4byte	0x76
 2852 060a 02       		.byte	0x2
 2853 060b 91       		.byte	0x91
 2854 060c 77       		.sleb128 -9
 2855 060d 00       		.byte	0x0
 2856 060e 0D       		.uleb128 0xd
 2857 060f 01       		.byte	0x1
 2858 0610 02020000 		.4byte	.LASF57
 2859 0614 01       		.byte	0x1
 2860 0615 6107     		.2byte	0x761
 2861 0617 01       		.byte	0x1
 2862 0618 81000000 		.4byte	0x81
 2863 061c 00000000 		.4byte	.LFB14
 2864 0620 3A000000 		.4byte	.LFE14
 2865 0624 02030000 		.4byte	.LLST14
 2866 0628 58060000 		.4byte	0x658
 2867 062c 0F       		.uleb128 0xf
 2868 062d 783100   		.ascii	"x1\000"
 2869 0630 01       		.byte	0x1
 2870 0631 6107     		.2byte	0x761
 2871 0633 81000000 		.4byte	0x81
 2872 0637 02       		.byte	0x2
 2873 0638 91       		.byte	0x91
 2874 0639 6E       		.sleb128 -18
 2875 063a 0F       		.uleb128 0xf
 2876 063b 783200   		.ascii	"x2\000"
 2877 063e 01       		.byte	0x1
 2878 063f 6107     		.2byte	0x761
 2879 0641 81000000 		.4byte	0x81
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 85


 2880 0645 02       		.byte	0x2
 2881 0646 91       		.byte	0x91
 2882 0647 6C       		.sleb128 -20
 2883 0648 0B       		.uleb128 0xb
 2884 0649 746D7000 		.ascii	"tmp\000"
 2885 064d 01       		.byte	0x1
 2886 064e 6407     		.2byte	0x764
 2887 0650 8C000000 		.4byte	0x8c
 2888 0654 02       		.byte	0x2
 2889 0655 91       		.byte	0x91
 2890 0656 74       		.sleb128 -12
 2891 0657 00       		.byte	0x0
 2892 0658 10       		.uleb128 0x10
 2893 0659 76000000 		.4byte	0x76
 2894 065d 68060000 		.4byte	0x668
 2895 0661 11       		.uleb128 0x11
 2896 0662 A2000000 		.4byte	0xa2
 2897 0666 02       		.byte	0x2
 2898 0667 00       		.byte	0x0
 2899 0668 08       		.uleb128 0x8
 2900 0669 E2040000 		.4byte	.LASF58
 2901 066d 01       		.byte	0x1
 2902 066e 63       		.byte	0x63
 2903 066f 58060000 		.4byte	0x658
 2904 0673 05       		.byte	0x5
 2905 0674 03       		.byte	0x3
 2906 0675 24000000 		.4byte	CapSense_centroid
 2907 0679 10       		.uleb128 0x10
 2908 067a 81000000 		.4byte	0x81
 2909 067e 89060000 		.4byte	0x689
 2910 0682 11       		.uleb128 0x11
 2911 0683 A2000000 		.4byte	0xa2
 2912 0687 06       		.byte	0x6
 2913 0688 00       		.byte	0x0
 2914 0689 12       		.uleb128 0x12
 2915 068a EC030000 		.4byte	.LASF59
 2916 068e 01       		.byte	0x1
 2917 068f 50       		.byte	0x50
 2918 0690 79060000 		.4byte	0x679
 2919 0694 01       		.byte	0x1
 2920 0695 05       		.byte	0x5
 2921 0696 03       		.byte	0x3
 2922 0697 00000000 		.4byte	CapSense_rawFilterData1
 2923 069b 13       		.uleb128 0x13
 2924 069c 2C020000 		.4byte	.LASF60
 2925 06a0 01       		.byte	0x1
 2926 06a1 56       		.byte	0x56
 2927 06a2 79060000 		.4byte	0x679
 2928 06a6 01       		.byte	0x1
 2929 06a7 01       		.byte	0x1
 2930 06a8 10       		.uleb128 0x10
 2931 06a9 76000000 		.4byte	0x76
 2932 06ad B8060000 		.4byte	0x6b8
 2933 06b1 11       		.uleb128 0x11
 2934 06b2 A2000000 		.4byte	0xa2
 2935 06b6 00       		.byte	0x0
 2936 06b7 00       		.byte	0x0
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 86


 2937 06b8 13       		.uleb128 0x13
 2938 06b9 F4040000 		.4byte	.LASF61
 2939 06bd 01       		.byte	0x1
 2940 06be 57       		.byte	0x57
 2941 06bf A8060000 		.4byte	0x6a8
 2942 06c3 01       		.byte	0x1
 2943 06c4 01       		.byte	0x1
 2944 06c5 10       		.uleb128 0x10
 2945 06c6 76000000 		.4byte	0x76
 2946 06ca D0060000 		.4byte	0x6d0
 2947 06ce 14       		.uleb128 0x14
 2948 06cf 00       		.byte	0x0
 2949 06d0 13       		.uleb128 0x13
 2950 06d1 A2010000 		.4byte	.LASF62
 2951 06d5 01       		.byte	0x1
 2952 06d6 58       		.byte	0x58
 2953 06d7 DD060000 		.4byte	0x6dd
 2954 06db 01       		.byte	0x1
 2955 06dc 01       		.byte	0x1
 2956 06dd 15       		.uleb128 0x15
 2957 06de C5060000 		.4byte	0x6c5
 2958 06e2 12       		.uleb128 0x12
 2959 06e3 CA040000 		.4byte	.LASF63
 2960 06e7 01       		.byte	0x1
 2961 06e8 5A       		.byte	0x5a
 2962 06e9 79060000 		.4byte	0x679
 2963 06ed 01       		.byte	0x1
 2964 06ee 05       		.byte	0x5
 2965 06ef 03       		.byte	0x3
 2966 06f0 00000000 		.4byte	CapSense_SensorBaseline
 2967 06f4 10       		.uleb128 0x10
 2968 06f5 76000000 		.4byte	0x76
 2969 06f9 04070000 		.4byte	0x704
 2970 06fd 11       		.uleb128 0x11
 2971 06fe A2000000 		.4byte	0xa2
 2972 0702 06       		.byte	0x6
 2973 0703 00       		.byte	0x0
 2974 0704 12       		.uleb128 0x12
 2975 0705 23050000 		.4byte	.LASF64
 2976 0709 01       		.byte	0x1
 2977 070a 5B       		.byte	0x5b
 2978 070b F4060000 		.4byte	0x6f4
 2979 070f 01       		.byte	0x1
 2980 0710 05       		.byte	0x5
 2981 0711 03       		.byte	0x3
 2982 0712 00000000 		.4byte	CapSense_SensorBaselineLow
 2983 0716 12       		.uleb128 0x12
 2984 0717 81030000 		.4byte	.LASF65
 2985 071b 01       		.byte	0x1
 2986 071c 5C       		.byte	0x5c
 2987 071d F4060000 		.4byte	0x6f4
 2988 0721 01       		.byte	0x1
 2989 0722 05       		.byte	0x5
 2990 0723 03       		.byte	0x3
 2991 0724 00000000 		.4byte	CapSense_SensorSignal
 2992 0728 12       		.uleb128 0x12
 2993 0729 FD000000 		.4byte	.LASF66
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 87


 2994 072d 01       		.byte	0x1
 2995 072e 5D       		.byte	0x5d
 2996 072f A8060000 		.4byte	0x6a8
 2997 0733 01       		.byte	0x1
 2998 0734 05       		.byte	0x5
 2999 0735 03       		.byte	0x3
 3000 0736 00000000 		.4byte	CapSense_SensorOnMask
 3001 073a 12       		.uleb128 0x12
 3002 073b CA010000 		.4byte	.LASF67
 3003 073f 01       		.byte	0x1
 3004 0740 5F       		.byte	0x5f
 3005 0741 F4060000 		.4byte	0x6f4
 3006 0745 01       		.byte	0x1
 3007 0746 05       		.byte	0x5
 3008 0747 03       		.byte	0x3
 3009 0748 00000000 		.4byte	CapSense_LowBaselineResetCnt
 3010 074c 12       		.uleb128 0x12
 3011 074d D3030000 		.4byte	.LASF68
 3012 0751 01       		.byte	0x1
 3013 0752 66       		.byte	0x66
 3014 0753 58060000 		.4byte	0x658
 3015 0757 01       		.byte	0x1
 3016 0758 05       		.byte	0x5
 3017 0759 03       		.byte	0x3
 3018 075a 00000000 		.4byte	CapSense_fingerThreshold
 3019 075e 12       		.uleb128 0x12
 3020 075f BB030000 		.4byte	.LASF69
 3021 0763 01       		.byte	0x1
 3022 0764 6A       		.byte	0x6a
 3023 0765 58060000 		.4byte	0x658
 3024 0769 01       		.byte	0x1
 3025 076a 05       		.byte	0x5
 3026 076b 03       		.byte	0x3
 3027 076c 00000000 		.4byte	CapSense_noiseThreshold
 3028 0770 12       		.uleb128 0x12
 3029 0771 1D000000 		.4byte	.LASF70
 3030 0775 01       		.byte	0x1
 3031 0776 6E       		.byte	0x6e
 3032 0777 58060000 		.4byte	0x658
 3033 077b 01       		.byte	0x1
 3034 077c 05       		.byte	0x5
 3035 077d 03       		.byte	0x3
 3036 077e 00000000 		.4byte	CapSense_hysteresis
 3037 0782 12       		.uleb128 0x12
 3038 0783 9B040000 		.4byte	.LASF71
 3039 0787 01       		.byte	0x1
 3040 0788 72       		.byte	0x72
 3041 0789 58060000 		.4byte	0x658
 3042 078d 01       		.byte	0x1
 3043 078e 05       		.byte	0x5
 3044 078f 03       		.byte	0x3
 3045 0790 00000000 		.4byte	CapSense_debounce
 3046 0794 12       		.uleb128 0x12
 3047 0795 54050000 		.4byte	.LASF72
 3048 0799 01       		.byte	0x1
 3049 079a 76       		.byte	0x76
 3050 079b 58060000 		.4byte	0x658
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 88


 3051 079f 01       		.byte	0x1
 3052 07a0 05       		.byte	0x5
 3053 07a1 03       		.byte	0x3
 3054 07a2 00000000 		.4byte	CapSense_debounceCounter
 3055 07a6 12       		.uleb128 0x12
 3056 07a7 69020000 		.4byte	.LASF73
 3057 07ab 01       		.byte	0x1
 3058 07ac 7A       		.byte	0x7a
 3059 07ad B8070000 		.4byte	0x7b8
 3060 07b1 01       		.byte	0x1
 3061 07b2 05       		.byte	0x5
 3062 07b3 03       		.byte	0x3
 3063 07b4 00000000 		.4byte	CapSense_rawDataIndex
 3064 07b8 15       		.uleb128 0x15
 3065 07b9 58060000 		.4byte	0x658
 3066 07bd 12       		.uleb128 0x12
 3067 07be 75050000 		.4byte	.LASF74
 3068 07c2 01       		.byte	0x1
 3069 07c3 81       		.byte	0x81
 3070 07c4 CF070000 		.4byte	0x7cf
 3071 07c8 01       		.byte	0x1
 3072 07c9 05       		.byte	0x5
 3073 07ca 03       		.byte	0x3
 3074 07cb 00000000 		.4byte	CapSense_numberOfSensors
 3075 07cf 15       		.uleb128 0x15
 3076 07d0 58060000 		.4byte	0x658
 3077 07d4 10       		.uleb128 0x10
 3078 07d5 81000000 		.4byte	0x81
 3079 07d9 E4070000 		.4byte	0x7e4
 3080 07dd 11       		.uleb128 0x11
 3081 07de A2000000 		.4byte	0xa2
 3082 07e2 00       		.byte	0x0
 3083 07e3 00       		.byte	0x0
 3084 07e4 12       		.uleb128 0x12
 3085 07e5 24030000 		.4byte	.LASF75
 3086 07e9 01       		.byte	0x1
 3087 07ea 88       		.byte	0x88
 3088 07eb F6070000 		.4byte	0x7f6
 3089 07ef 01       		.byte	0x1
 3090 07f0 05       		.byte	0x5
 3091 07f1 03       		.byte	0x3
 3092 07f2 00000000 		.4byte	CapSense_centroidMult
 3093 07f6 15       		.uleb128 0x15
 3094 07f7 D4070000 		.4byte	0x7d4
 3095 07fb 12       		.uleb128 0x12
 3096 07fc 51020000 		.4byte	.LASF76
 3097 0800 01       		.byte	0x1
 3098 0801 8C       		.byte	0x8c
 3099 0802 0D080000 		.4byte	0x80d
 3100 0806 01       		.byte	0x1
 3101 0807 05       		.byte	0x5
 3102 0808 03       		.byte	0x3
 3103 0809 00000000 		.4byte	CapSense_posFiltersMask
 3104 080d 15       		.uleb128 0x15
 3105 080e A8060000 		.4byte	0x6a8
 3106 0812 12       		.uleb128 0x12
 3107 0813 FA020000 		.4byte	.LASF77
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 89


 3108 0817 01       		.byte	0x1
 3109 0818 90       		.byte	0x90
 3110 0819 58060000 		.4byte	0x658
 3111 081d 01       		.byte	0x1
 3112 081e 05       		.byte	0x5
 3113 081f 03       		.byte	0x3
 3114 0820 00000000 		.4byte	CapSense_posFiltersData
 3115 0824 00       		.byte	0x0
 3116              		.section	.debug_abbrev
 3117 0000 01       		.uleb128 0x1
 3118 0001 11       		.uleb128 0x11
 3119 0002 01       		.byte	0x1
 3120 0003 25       		.uleb128 0x25
 3121 0004 0E       		.uleb128 0xe
 3122 0005 13       		.uleb128 0x13
 3123 0006 0B       		.uleb128 0xb
 3124 0007 03       		.uleb128 0x3
 3125 0008 0E       		.uleb128 0xe
 3126 0009 1B       		.uleb128 0x1b
 3127 000a 0E       		.uleb128 0xe
 3128 000b 11       		.uleb128 0x11
 3129 000c 01       		.uleb128 0x1
 3130 000d 52       		.uleb128 0x52
 3131 000e 01       		.uleb128 0x1
 3132 000f 55       		.uleb128 0x55
 3133 0010 06       		.uleb128 0x6
 3134 0011 10       		.uleb128 0x10
 3135 0012 06       		.uleb128 0x6
 3136 0013 00       		.byte	0x0
 3137 0014 00       		.byte	0x0
 3138 0015 02       		.uleb128 0x2
 3139 0016 24       		.uleb128 0x24
 3140 0017 00       		.byte	0x0
 3141 0018 0B       		.uleb128 0xb
 3142 0019 0B       		.uleb128 0xb
 3143 001a 3E       		.uleb128 0x3e
 3144 001b 0B       		.uleb128 0xb
 3145 001c 03       		.uleb128 0x3
 3146 001d 0E       		.uleb128 0xe
 3147 001e 00       		.byte	0x0
 3148 001f 00       		.byte	0x0
 3149 0020 03       		.uleb128 0x3
 3150 0021 24       		.uleb128 0x24
 3151 0022 00       		.byte	0x0
 3152 0023 0B       		.uleb128 0xb
 3153 0024 0B       		.uleb128 0xb
 3154 0025 3E       		.uleb128 0x3e
 3155 0026 0B       		.uleb128 0xb
 3156 0027 03       		.uleb128 0x3
 3157 0028 08       		.uleb128 0x8
 3158 0029 00       		.byte	0x0
 3159 002a 00       		.byte	0x0
 3160 002b 04       		.uleb128 0x4
 3161 002c 16       		.uleb128 0x16
 3162 002d 00       		.byte	0x0
 3163 002e 03       		.uleb128 0x3
 3164 002f 0E       		.uleb128 0xe
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 90


 3165 0030 3A       		.uleb128 0x3a
 3166 0031 0B       		.uleb128 0xb
 3167 0032 3B       		.uleb128 0x3b
 3168 0033 0B       		.uleb128 0xb
 3169 0034 49       		.uleb128 0x49
 3170 0035 13       		.uleb128 0x13
 3171 0036 00       		.byte	0x0
 3172 0037 00       		.byte	0x0
 3173 0038 05       		.uleb128 0x5
 3174 0039 24       		.uleb128 0x24
 3175 003a 00       		.byte	0x0
 3176 003b 0B       		.uleb128 0xb
 3177 003c 0B       		.uleb128 0xb
 3178 003d 3E       		.uleb128 0x3e
 3179 003e 0B       		.uleb128 0xb
 3180 003f 00       		.byte	0x0
 3181 0040 00       		.byte	0x0
 3182 0041 06       		.uleb128 0x6
 3183 0042 2E       		.uleb128 0x2e
 3184 0043 01       		.byte	0x1
 3185 0044 3F       		.uleb128 0x3f
 3186 0045 0C       		.uleb128 0xc
 3187 0046 03       		.uleb128 0x3
 3188 0047 0E       		.uleb128 0xe
 3189 0048 3A       		.uleb128 0x3a
 3190 0049 0B       		.uleb128 0xb
 3191 004a 3B       		.uleb128 0x3b
 3192 004b 0B       		.uleb128 0xb
 3193 004c 27       		.uleb128 0x27
 3194 004d 0C       		.uleb128 0xc
 3195 004e 11       		.uleb128 0x11
 3196 004f 01       		.uleb128 0x1
 3197 0050 12       		.uleb128 0x12
 3198 0051 01       		.uleb128 0x1
 3199 0052 40       		.uleb128 0x40
 3200 0053 06       		.uleb128 0x6
 3201 0054 01       		.uleb128 0x1
 3202 0055 13       		.uleb128 0x13
 3203 0056 00       		.byte	0x0
 3204 0057 00       		.byte	0x0
 3205 0058 07       		.uleb128 0x7
 3206 0059 05       		.uleb128 0x5
 3207 005a 00       		.byte	0x0
 3208 005b 03       		.uleb128 0x3
 3209 005c 0E       		.uleb128 0xe
 3210 005d 3A       		.uleb128 0x3a
 3211 005e 0B       		.uleb128 0xb
 3212 005f 3B       		.uleb128 0x3b
 3213 0060 0B       		.uleb128 0xb
 3214 0061 49       		.uleb128 0x49
 3215 0062 13       		.uleb128 0x13
 3216 0063 02       		.uleb128 0x2
 3217 0064 0A       		.uleb128 0xa
 3218 0065 00       		.byte	0x0
 3219 0066 00       		.byte	0x0
 3220 0067 08       		.uleb128 0x8
 3221 0068 34       		.uleb128 0x34
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 91


 3222 0069 00       		.byte	0x0
 3223 006a 03       		.uleb128 0x3
 3224 006b 0E       		.uleb128 0xe
 3225 006c 3A       		.uleb128 0x3a
 3226 006d 0B       		.uleb128 0xb
 3227 006e 3B       		.uleb128 0x3b
 3228 006f 0B       		.uleb128 0xb
 3229 0070 49       		.uleb128 0x49
 3230 0071 13       		.uleb128 0x13
 3231 0072 02       		.uleb128 0x2
 3232 0073 0A       		.uleb128 0xa
 3233 0074 00       		.byte	0x0
 3234 0075 00       		.byte	0x0
 3235 0076 09       		.uleb128 0x9
 3236 0077 2E       		.uleb128 0x2e
 3237 0078 01       		.byte	0x1
 3238 0079 3F       		.uleb128 0x3f
 3239 007a 0C       		.uleb128 0xc
 3240 007b 03       		.uleb128 0x3
 3241 007c 0E       		.uleb128 0xe
 3242 007d 3A       		.uleb128 0x3a
 3243 007e 0B       		.uleb128 0xb
 3244 007f 3B       		.uleb128 0x3b
 3245 0080 05       		.uleb128 0x5
 3246 0081 27       		.uleb128 0x27
 3247 0082 0C       		.uleb128 0xc
 3248 0083 11       		.uleb128 0x11
 3249 0084 01       		.uleb128 0x1
 3250 0085 12       		.uleb128 0x12
 3251 0086 01       		.uleb128 0x1
 3252 0087 40       		.uleb128 0x40
 3253 0088 06       		.uleb128 0x6
 3254 0089 01       		.uleb128 0x1
 3255 008a 13       		.uleb128 0x13
 3256 008b 00       		.byte	0x0
 3257 008c 00       		.byte	0x0
 3258 008d 0A       		.uleb128 0xa
 3259 008e 05       		.uleb128 0x5
 3260 008f 00       		.byte	0x0
 3261 0090 03       		.uleb128 0x3
 3262 0091 0E       		.uleb128 0xe
 3263 0092 3A       		.uleb128 0x3a
 3264 0093 0B       		.uleb128 0xb
 3265 0094 3B       		.uleb128 0x3b
 3266 0095 05       		.uleb128 0x5
 3267 0096 49       		.uleb128 0x49
 3268 0097 13       		.uleb128 0x13
 3269 0098 02       		.uleb128 0x2
 3270 0099 0A       		.uleb128 0xa
 3271 009a 00       		.byte	0x0
 3272 009b 00       		.byte	0x0
 3273 009c 0B       		.uleb128 0xb
 3274 009d 34       		.uleb128 0x34
 3275 009e 00       		.byte	0x0
 3276 009f 03       		.uleb128 0x3
 3277 00a0 08       		.uleb128 0x8
 3278 00a1 3A       		.uleb128 0x3a
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 92


 3279 00a2 0B       		.uleb128 0xb
 3280 00a3 3B       		.uleb128 0x3b
 3281 00a4 05       		.uleb128 0x5
 3282 00a5 49       		.uleb128 0x49
 3283 00a6 13       		.uleb128 0x13
 3284 00a7 02       		.uleb128 0x2
 3285 00a8 0A       		.uleb128 0xa
 3286 00a9 00       		.byte	0x0
 3287 00aa 00       		.byte	0x0
 3288 00ab 0C       		.uleb128 0xc
 3289 00ac 34       		.uleb128 0x34
 3290 00ad 00       		.byte	0x0
 3291 00ae 03       		.uleb128 0x3
 3292 00af 0E       		.uleb128 0xe
 3293 00b0 3A       		.uleb128 0x3a
 3294 00b1 0B       		.uleb128 0xb
 3295 00b2 3B       		.uleb128 0x3b
 3296 00b3 05       		.uleb128 0x5
 3297 00b4 49       		.uleb128 0x49
 3298 00b5 13       		.uleb128 0x13
 3299 00b6 02       		.uleb128 0x2
 3300 00b7 0A       		.uleb128 0xa
 3301 00b8 00       		.byte	0x0
 3302 00b9 00       		.byte	0x0
 3303 00ba 0D       		.uleb128 0xd
 3304 00bb 2E       		.uleb128 0x2e
 3305 00bc 01       		.byte	0x1
 3306 00bd 3F       		.uleb128 0x3f
 3307 00be 0C       		.uleb128 0xc
 3308 00bf 03       		.uleb128 0x3
 3309 00c0 0E       		.uleb128 0xe
 3310 00c1 3A       		.uleb128 0x3a
 3311 00c2 0B       		.uleb128 0xb
 3312 00c3 3B       		.uleb128 0x3b
 3313 00c4 05       		.uleb128 0x5
 3314 00c5 27       		.uleb128 0x27
 3315 00c6 0C       		.uleb128 0xc
 3316 00c7 49       		.uleb128 0x49
 3317 00c8 13       		.uleb128 0x13
 3318 00c9 11       		.uleb128 0x11
 3319 00ca 01       		.uleb128 0x1
 3320 00cb 12       		.uleb128 0x12
 3321 00cc 01       		.uleb128 0x1
 3322 00cd 40       		.uleb128 0x40
 3323 00ce 06       		.uleb128 0x6
 3324 00cf 01       		.uleb128 0x1
 3325 00d0 13       		.uleb128 0x13
 3326 00d1 00       		.byte	0x0
 3327 00d2 00       		.byte	0x0
 3328 00d3 0E       		.uleb128 0xe
 3329 00d4 0F       		.uleb128 0xf
 3330 00d5 00       		.byte	0x0
 3331 00d6 0B       		.uleb128 0xb
 3332 00d7 0B       		.uleb128 0xb
 3333 00d8 49       		.uleb128 0x49
 3334 00d9 13       		.uleb128 0x13
 3335 00da 00       		.byte	0x0
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 93


 3336 00db 00       		.byte	0x0
 3337 00dc 0F       		.uleb128 0xf
 3338 00dd 05       		.uleb128 0x5
 3339 00de 00       		.byte	0x0
 3340 00df 03       		.uleb128 0x3
 3341 00e0 08       		.uleb128 0x8
 3342 00e1 3A       		.uleb128 0x3a
 3343 00e2 0B       		.uleb128 0xb
 3344 00e3 3B       		.uleb128 0x3b
 3345 00e4 05       		.uleb128 0x5
 3346 00e5 49       		.uleb128 0x49
 3347 00e6 13       		.uleb128 0x13
 3348 00e7 02       		.uleb128 0x2
 3349 00e8 0A       		.uleb128 0xa
 3350 00e9 00       		.byte	0x0
 3351 00ea 00       		.byte	0x0
 3352 00eb 10       		.uleb128 0x10
 3353 00ec 01       		.uleb128 0x1
 3354 00ed 01       		.byte	0x1
 3355 00ee 49       		.uleb128 0x49
 3356 00ef 13       		.uleb128 0x13
 3357 00f0 01       		.uleb128 0x1
 3358 00f1 13       		.uleb128 0x13
 3359 00f2 00       		.byte	0x0
 3360 00f3 00       		.byte	0x0
 3361 00f4 11       		.uleb128 0x11
 3362 00f5 21       		.uleb128 0x21
 3363 00f6 00       		.byte	0x0
 3364 00f7 49       		.uleb128 0x49
 3365 00f8 13       		.uleb128 0x13
 3366 00f9 2F       		.uleb128 0x2f
 3367 00fa 0B       		.uleb128 0xb
 3368 00fb 00       		.byte	0x0
 3369 00fc 00       		.byte	0x0
 3370 00fd 12       		.uleb128 0x12
 3371 00fe 34       		.uleb128 0x34
 3372 00ff 00       		.byte	0x0
 3373 0100 03       		.uleb128 0x3
 3374 0101 0E       		.uleb128 0xe
 3375 0102 3A       		.uleb128 0x3a
 3376 0103 0B       		.uleb128 0xb
 3377 0104 3B       		.uleb128 0x3b
 3378 0105 0B       		.uleb128 0xb
 3379 0106 49       		.uleb128 0x49
 3380 0107 13       		.uleb128 0x13
 3381 0108 3F       		.uleb128 0x3f
 3382 0109 0C       		.uleb128 0xc
 3383 010a 02       		.uleb128 0x2
 3384 010b 0A       		.uleb128 0xa
 3385 010c 00       		.byte	0x0
 3386 010d 00       		.byte	0x0
 3387 010e 13       		.uleb128 0x13
 3388 010f 34       		.uleb128 0x34
 3389 0110 00       		.byte	0x0
 3390 0111 03       		.uleb128 0x3
 3391 0112 0E       		.uleb128 0xe
 3392 0113 3A       		.uleb128 0x3a
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 94


 3393 0114 0B       		.uleb128 0xb
 3394 0115 3B       		.uleb128 0x3b
 3395 0116 0B       		.uleb128 0xb
 3396 0117 49       		.uleb128 0x49
 3397 0118 13       		.uleb128 0x13
 3398 0119 3F       		.uleb128 0x3f
 3399 011a 0C       		.uleb128 0xc
 3400 011b 3C       		.uleb128 0x3c
 3401 011c 0C       		.uleb128 0xc
 3402 011d 00       		.byte	0x0
 3403 011e 00       		.byte	0x0
 3404 011f 14       		.uleb128 0x14
 3405 0120 21       		.uleb128 0x21
 3406 0121 00       		.byte	0x0
 3407 0122 00       		.byte	0x0
 3408 0123 00       		.byte	0x0
 3409 0124 15       		.uleb128 0x15
 3410 0125 26       		.uleb128 0x26
 3411 0126 00       		.byte	0x0
 3412 0127 49       		.uleb128 0x49
 3413 0128 13       		.uleb128 0x13
 3414 0129 00       		.byte	0x0
 3415 012a 00       		.byte	0x0
 3416 012b 00       		.byte	0x0
 3417              		.section	.debug_pubnames,"",%progbits
 3418 0000 97030000 		.4byte	0x397
 3419 0004 0200     		.2byte	0x2
 3420 0006 00000000 		.4byte	.Ldebug_info0
 3421 000a 25080000 		.4byte	0x825
 3422 000e A5000000 		.4byte	0xa5
 3423 0012 43617053 		.ascii	"CapSense_BaseInit\000"
 3423      656E7365 
 3423      5F426173 
 3423      65496E69 
 3423      7400
 3424 0024 DB000000 		.4byte	0xdb
 3425 0028 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 3425      656E7365 
 3425      5F496E69 
 3425      7469616C 
 3425      697A6553 
 3426 004a 05010000 		.4byte	0x105
 3427 004e 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 3427      656E7365 
 3427      5F496E69 
 3427      7469616C 
 3427      697A6541 
 3428 006e 2D010000 		.4byte	0x12d
 3429 0072 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 3429      656E7365 
 3429      5F496E69 
 3429      7469616C 
 3429      697A6545 
 3430 0096 73010000 		.4byte	0x173
 3431 009a 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 3431      656E7365 
 3431      5F557064 
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 95


 3431      61746553 
 3431      656E736F 
 3432 00b8 E8010000 		.4byte	0x1e8
 3433 00bc 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 3433      656E7365 
 3433      5F557064 
 3433      61746545 
 3433      6E61626C 
 3434 00dc 2E020000 		.4byte	0x22e
 3435 00e0 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 3435      656E7365 
 3435      5F436865 
 3435      636B4973 
 3435      53656E73 
 3436 00fd C5020000 		.4byte	0x2c5
 3437 0101 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 3437      656E7365 
 3437      5F436865 
 3437      636B4973 
 3437      57696467 
 3438 011e 20030000 		.4byte	0x320
 3439 0122 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 3439      656E7365 
 3439      5F436865 
 3439      636B4973 
 3439      416E7957 
 3440 0142 5B030000 		.4byte	0x35b
 3441 0146 43617053 		.ascii	"CapSense_EnableWidget\000"
 3441      656E7365 
 3441      5F456E61 
 3441      626C6557 
 3441      69646765 
 3442 015c C1030000 		.4byte	0x3c1
 3443 0160 43617053 		.ascii	"CapSense_DisableWidget\000"
 3443      656E7365 
 3443      5F446973 
 3443      61626C65 
 3443      57696467 
 3444 0177 27040000 		.4byte	0x427
 3445 017b 43617053 		.ascii	"CapSense_FindMaximum\000"
 3445      656E7365 
 3445      5F46696E 
 3445      644D6178 
 3445      696D756D 
 3446 0190 B3040000 		.4byte	0x4b3
 3447 0194 43617053 		.ascii	"CapSense_CalcCentroid\000"
 3447      656E7365 
 3447      5F43616C 
 3447      6343656E 
 3447      74726F69 
 3448 01aa 77050000 		.4byte	0x577
 3449 01ae 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 3449      656E7365 
 3449      5F476574 
 3449      43656E74 
 3449      726F6964 
 3450 01c6 0E060000 		.4byte	0x60e
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 96


 3451 01ca 43617053 		.ascii	"CapSense_IIR4Filter\000"
 3451      656E7365 
 3451      5F494952 
 3451      3446696C 
 3451      74657200 
 3452 01de 89060000 		.4byte	0x689
 3453 01e2 43617053 		.ascii	"CapSense_rawFilterData1\000"
 3453      656E7365 
 3453      5F726177 
 3453      46696C74 
 3453      65724461 
 3454 01fa E2060000 		.4byte	0x6e2
 3455 01fe 43617053 		.ascii	"CapSense_SensorBaseline\000"
 3455      656E7365 
 3455      5F53656E 
 3455      736F7242 
 3455      6173656C 
 3456 0216 04070000 		.4byte	0x704
 3457 021a 43617053 		.ascii	"CapSense_SensorBaselineLow\000"
 3457      656E7365 
 3457      5F53656E 
 3457      736F7242 
 3457      6173656C 
 3458 0235 16070000 		.4byte	0x716
 3459 0239 43617053 		.ascii	"CapSense_SensorSignal\000"
 3459      656E7365 
 3459      5F53656E 
 3459      736F7253 
 3459      69676E61 
 3460 024f 28070000 		.4byte	0x728
 3461 0253 43617053 		.ascii	"CapSense_SensorOnMask\000"
 3461      656E7365 
 3461      5F53656E 
 3461      736F724F 
 3461      6E4D6173 
 3462 0269 3A070000 		.4byte	0x73a
 3463 026d 43617053 		.ascii	"CapSense_LowBaselineResetCnt\000"
 3463      656E7365 
 3463      5F4C6F77 
 3463      42617365 
 3463      6C696E65 
 3464 028a 4C070000 		.4byte	0x74c
 3465 028e 43617053 		.ascii	"CapSense_fingerThreshold\000"
 3465      656E7365 
 3465      5F66696E 
 3465      67657254 
 3465      68726573 
 3466 02a7 5E070000 		.4byte	0x75e
 3467 02ab 43617053 		.ascii	"CapSense_noiseThreshold\000"
 3467      656E7365 
 3467      5F6E6F69 
 3467      73655468 
 3467      72657368 
 3468 02c3 70070000 		.4byte	0x770
 3469 02c7 43617053 		.ascii	"CapSense_hysteresis\000"
 3469      656E7365 
 3469      5F687973 
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 97


 3469      74657265 
 3469      73697300 
 3470 02db 82070000 		.4byte	0x782
 3471 02df 43617053 		.ascii	"CapSense_debounce\000"
 3471      656E7365 
 3471      5F646562 
 3471      6F756E63 
 3471      6500
 3472 02f1 94070000 		.4byte	0x794
 3473 02f5 43617053 		.ascii	"CapSense_debounceCounter\000"
 3473      656E7365 
 3473      5F646562 
 3473      6F756E63 
 3473      65436F75 
 3474 030e A6070000 		.4byte	0x7a6
 3475 0312 43617053 		.ascii	"CapSense_rawDataIndex\000"
 3475      656E7365 
 3475      5F726177 
 3475      44617461 
 3475      496E6465 
 3476 0328 BD070000 		.4byte	0x7bd
 3477 032c 43617053 		.ascii	"CapSense_numberOfSensors\000"
 3477      656E7365 
 3477      5F6E756D 
 3477      6265724F 
 3477      6653656E 
 3478 0345 E4070000 		.4byte	0x7e4
 3479 0349 43617053 		.ascii	"CapSense_centroidMult\000"
 3479      656E7365 
 3479      5F63656E 
 3479      74726F69 
 3479      644D756C 
 3480 035f FB070000 		.4byte	0x7fb
 3481 0363 43617053 		.ascii	"CapSense_posFiltersMask\000"
 3481      656E7365 
 3481      5F706F73 
 3481      46696C74 
 3481      6572734D 
 3482 037b 12080000 		.4byte	0x812
 3483 037f 43617053 		.ascii	"CapSense_posFiltersData\000"
 3483      656E7365 
 3483      5F706F73 
 3483      46696C74 
 3483      65727344 
 3484 0397 00000000 		.4byte	0x0
 3485              		.section	.debug_aranges,"",%progbits
 3486 0000 8C000000 		.4byte	0x8c
 3487 0004 0200     		.2byte	0x2
 3488 0006 00000000 		.4byte	.Ldebug_info0
 3489 000a 04       		.byte	0x4
 3490 000b 00       		.byte	0x0
 3491 000c 0000     		.2byte	0x0
 3492 000e 0000     		.2byte	0x0
 3493 0010 00000000 		.4byte	.LFB0
 3494 0014 9C000000 		.4byte	.LFE0-.LFB0
 3495 0018 00000000 		.4byte	.LFB1
 3496 001c 2C000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 98


 3497 0020 00000000 		.4byte	.LFB2
 3498 0024 2C000000 		.4byte	.LFE2-.LFB2
 3499 0028 00000000 		.4byte	.LFB3
 3500 002c 7C000000 		.4byte	.LFE3-.LFB3
 3501 0030 00000000 		.4byte	.LFB4
 3502 0034 EC010000 		.4byte	.LFE4-.LFB4
 3503 0038 00000000 		.4byte	.LFB5
 3504 003c 5C000000 		.4byte	.LFE5-.LFB5
 3505 0040 00000000 		.4byte	.LFB6
 3506 0044 94010000 		.4byte	.LFE6-.LFB6
 3507 0048 00000000 		.4byte	.LFB7
 3508 004c 60000000 		.4byte	.LFE7-.LFB7
 3509 0050 00000000 		.4byte	.LFB8
 3510 0054 42000000 		.4byte	.LFE8-.LFB8
 3511 0058 00000000 		.4byte	.LFB9
 3512 005c 7C000000 		.4byte	.LFE9-.LFB9
 3513 0060 00000000 		.4byte	.LFB10
 3514 0064 86000000 		.4byte	.LFE10-.LFB10
 3515 0068 00000000 		.4byte	.LFB11
 3516 006c 7C000000 		.4byte	.LFE11-.LFB11
 3517 0070 00000000 		.4byte	.LFB12
 3518 0074 D2010000 		.4byte	.LFE12-.LFB12
 3519 0078 00000000 		.4byte	.LFB13
 3520 007c 46010000 		.4byte	.LFE13-.LFB13
 3521 0080 00000000 		.4byte	.LFB14
 3522 0084 3A000000 		.4byte	.LFE14-.LFB14
 3523 0088 00000000 		.4byte	0x0
 3524 008c 00000000 		.4byte	0x0
 3525              		.section	.debug_ranges,"",%progbits
 3526              	.Ldebug_ranges0:
 3527 0000 00000000 		.4byte	.Ltext0
 3528 0004 00000000 		.4byte	.Letext0
 3529 0008 00000000 		.4byte	.LFB0
 3530 000c 9C000000 		.4byte	.LFE0
 3531 0010 00000000 		.4byte	.LFB1
 3532 0014 2C000000 		.4byte	.LFE1
 3533 0018 00000000 		.4byte	.LFB2
 3534 001c 2C000000 		.4byte	.LFE2
 3535 0020 00000000 		.4byte	.LFB3
 3536 0024 7C000000 		.4byte	.LFE3
 3537 0028 00000000 		.4byte	.LFB4
 3538 002c EC010000 		.4byte	.LFE4
 3539 0030 00000000 		.4byte	.LFB5
 3540 0034 5C000000 		.4byte	.LFE5
 3541 0038 00000000 		.4byte	.LFB6
 3542 003c 94010000 		.4byte	.LFE6
 3543 0040 00000000 		.4byte	.LFB7
 3544 0044 60000000 		.4byte	.LFE7
 3545 0048 00000000 		.4byte	.LFB8
 3546 004c 42000000 		.4byte	.LFE8
 3547 0050 00000000 		.4byte	.LFB9
 3548 0054 7C000000 		.4byte	.LFE9
 3549 0058 00000000 		.4byte	.LFB10
 3550 005c 86000000 		.4byte	.LFE10
 3551 0060 00000000 		.4byte	.LFB11
 3552 0064 7C000000 		.4byte	.LFE11
 3553 0068 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 99


 3554 006c D2010000 		.4byte	.LFE12
 3555 0070 00000000 		.4byte	.LFB13
 3556 0074 46010000 		.4byte	.LFE13
 3557 0078 00000000 		.4byte	.LFB14
 3558 007c 3A000000 		.4byte	.LFE14
 3559 0080 00000000 		.4byte	0x0
 3560 0084 00000000 		.4byte	0x0
 3561              		.section	.debug_str,"MS",%progbits,1
 3562              	.LASF42:
 3563 0000 636F756E 		.ascii	"count\000"
 3563      7400
 3564              	.LASF11:
 3565 0006 75696E74 		.ascii	"uint16\000"
 3565      313600
 3566              	.LASF24:
 3567 000d 66696C74 		.ascii	"filteredRawData\000"
 3567      65726564 
 3567      52617744 
 3567      61746100 
 3568              	.LASF70:
 3569 001d 43617053 		.ascii	"CapSense_hysteresis\000"
 3569      656E7365 
 3569      5F687973 
 3569      74657265 
 3569      73697300 
 3570              	.LASF29:
 3571 0031 66696E67 		.ascii	"fingerThreshold\000"
 3571      65725468 
 3571      72657368 
 3571      6F6C6400 
 3572              	.LASF48:
 3573 0041 706F7350 		.ascii	"posPrev\000"
 3573      72657600 
 3574              	.LASF7:
 3575 0049 6C6F6E67 		.ascii	"long long unsigned int\000"
 3575      206C6F6E 
 3575      6720756E 
 3575      7369676E 
 3575      65642069 
 3576              	.LASF55:
 3577 0060 66697273 		.ascii	"firstTimeIndex\000"
 3577      7454696D 
 3577      65496E64 
 3577      657800
 3578              	.LASF78:
 3579 006f 474E5520 		.ascii	"GNU C 4.4.1\000"
 3579      4320342E 
 3579      342E3100 
 3580              	.LASF19:
 3581 007b 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 3581      656E7365 
 3581      5F496E69 
 3581      7469616C 
 3581      697A6545 
 3582              	.LASF26:
 3583 009f 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 3583      656E7365 
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 100


 3583      5F557064 
 3583      61746545 
 3583      6E61626C 
 3584              	.LASF80:
 3585 00bf 493A5C43 		.ascii	"I:\\ControllerKinect\\Transmitter\\Transmitter.cyds"
 3585      6F6E7472 
 3585      6F6C6C65 
 3585      724B696E 
 3585      6563745C 
 3586 00ef 6E00     		.ascii	"n\000"
 3587              	.LASF0:
 3588 00f1 7369676E 		.ascii	"signed char\000"
 3588      65642063 
 3588      68617200 
 3589              	.LASF66:
 3590 00fd 43617053 		.ascii	"CapSense_SensorOnMask\000"
 3590      656E7365 
 3590      5F53656E 
 3590      736F724F 
 3590      6E4D6173 
 3591              	.LASF39:
 3592 0113 43617053 		.ascii	"CapSense_DisableWidget\000"
 3592      656E7365 
 3592      5F446973 
 3592      61626C65 
 3592      57696467 
 3593              	.LASF34:
 3594 012a 72617749 		.ascii	"rawIndex\000"
 3594      6E646578 
 3594      00
 3595              	.LASF35:
 3596 0133 6E756D62 		.ascii	"numberOfSensors\000"
 3596      65724F66 
 3596      53656E73 
 3596      6F727300 
 3597              	.LASF13:
 3598 0143 696E7433 		.ascii	"int32\000"
 3598      3200
 3599              	.LASF36:
 3600 0149 73746174 		.ascii	"state\000"
 3600      6500
 3601              	.LASF4:
 3602 014f 6C6F6E67 		.ascii	"long int\000"
 3602      20696E74 
 3602      00
 3603              	.LASF51:
 3604 0158 6E756D65 		.ascii	"numerator\000"
 3604      7261746F 
 3604      7200
 3605              	.LASF37:
 3606 0162 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 3606      656E7365 
 3606      5F436865 
 3606      636B4973 
 3606      416E7957 
 3607              	.LASF52:
 3608 0182 64656E6F 		.ascii	"denominator\000"
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 101


 3608      6D696E61 
 3608      746F7200 
 3609              	.LASF10:
 3610 018e 75696E74 		.ascii	"uint8\000"
 3610      3800
 3611              	.LASF6:
 3612 0194 6C6F6E67 		.ascii	"long long int\000"
 3612      206C6F6E 
 3612      6720696E 
 3612      7400
 3613              	.LASF62:
 3614 01a2 43617053 		.ascii	"CapSense_widgetNumber\000"
 3614      656E7365 
 3614      5F776964 
 3614      6765744E 
 3614      756D6265 
 3615              	.LASF12:
 3616 01b8 75696E74 		.ascii	"uint32\000"
 3616      333200
 3617              	.LASF30:
 3618 01bf 68797374 		.ascii	"hysteresis\000"
 3618      65726573 
 3618      697300
 3619              	.LASF67:
 3620 01ca 43617053 		.ascii	"CapSense_LowBaselineResetCnt\000"
 3620      656E7365 
 3620      5F4C6F77 
 3620      42617365 
 3620      6C696E65 
 3621              	.LASF49:
 3622 01e7 706F734E 		.ascii	"posNext\000"
 3622      65787400 
 3623              	.LASF45:
 3624 01ef 73746172 		.ascii	"startOfSlider\000"
 3624      744F6653 
 3624      6C696465 
 3624      7200
 3625              	.LASF44:
 3626 01fd 74656D70 		.ascii	"temp\000"
 3626      00
 3627              	.LASF57:
 3628 0202 43617053 		.ascii	"CapSense_IIR4Filter\000"
 3628      656E7365 
 3628      5F494952 
 3628      3446696C 
 3628      74657200 
 3629              	.LASF8:
 3630 0216 756E7369 		.ascii	"unsigned int\000"
 3630      676E6564 
 3630      20696E74 
 3630      00
 3631              	.LASF50:
 3632 0223 706F7369 		.ascii	"position\000"
 3632      74696F6E 
 3632      00
 3633              	.LASF60:
 3634 022c 43617053 		.ascii	"CapSense_SensorRaw\000"
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 102


 3634      656E7365 
 3634      5F53656E 
 3634      736F7252 
 3634      617700
 3635              	.LASF5:
 3636 023f 6C6F6E67 		.ascii	"long unsigned int\000"
 3636      20756E73 
 3636      69676E65 
 3636      6420696E 
 3636      7400
 3637              	.LASF76:
 3638 0251 43617053 		.ascii	"CapSense_posFiltersMask\000"
 3638      656E7365 
 3638      5F706F73 
 3638      46696C74 
 3638      6572734D 
 3639              	.LASF73:
 3640 0269 43617053 		.ascii	"CapSense_rawDataIndex\000"
 3640      656E7365 
 3640      5F726177 
 3640      44617461 
 3640      496E6465 
 3641              	.LASF3:
 3642 027f 73686F72 		.ascii	"short unsigned int\000"
 3642      7420756E 
 3642      7369676E 
 3642      65642069 
 3642      6E7400
 3643              	.LASF16:
 3644 0292 73656E73 		.ascii	"sensor\000"
 3644      6F7200
 3645              	.LASF40:
 3646 0299 43617053 		.ascii	"CapSense_FindMaximum\000"
 3646      656E7365 
 3646      5F46696E 
 3646      644D6178 
 3646      696D756D 
 3647              	.LASF21:
 3648 02ae 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 3648      656E7365 
 3648      5F557064 
 3648      61746553 
 3648      656E736F 
 3649              	.LASF79:
 3650 02cc 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense_CSHL.c\000"
 3650      6E657261 
 3650      7465645F 
 3650      536F7572 
 3650      63655C50 
 3651              	.LASF22:
 3652 02f5 63616C63 		.ascii	"calc\000"
 3652      00
 3653              	.LASF77:
 3654 02fa 43617053 		.ascii	"CapSense_posFiltersData\000"
 3654      656E7365 
 3654      5F706F73 
 3654      46696C74 
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 103


 3654      65727344 
 3655              	.LASF54:
 3656 0312 706F7349 		.ascii	"posIndex\000"
 3656      6E646578 
 3656      00
 3657              	.LASF31:
 3658 031b 6465626F 		.ascii	"debounce\000"
 3658      756E6365 
 3658      00
 3659              	.LASF75:
 3660 0324 43617053 		.ascii	"CapSense_centroidMult\000"
 3660      656E7365 
 3660      5F63656E 
 3660      74726F69 
 3660      644D756C 
 3661              	.LASF38:
 3662 033a 43617053 		.ascii	"CapSense_EnableWidget\000"
 3662      656E7365 
 3662      5F456E61 
 3662      626C6557 
 3662      69646765 
 3663              	.LASF56:
 3664 0350 706F7346 		.ascii	"posFiltersMask\000"
 3664      696C7465 
 3664      72734D61 
 3664      736B00
 3665              	.LASF15:
 3666 035f 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 3666      656E7365 
 3666      5F496E69 
 3666      7469616C 
 3666      697A6553 
 3667              	.LASF65:
 3668 0381 43617053 		.ascii	"CapSense_SensorSignal\000"
 3668      656E7365 
 3668      5F53656E 
 3668      736F7253 
 3668      69676E61 
 3669              	.LASF32:
 3670 0397 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 3670      656E7365 
 3670      5F436865 
 3670      636B4973 
 3670      53656E73 
 3671              	.LASF20:
 3672 03b4 656E4D61 		.ascii	"enMask\000"
 3672      736B00
 3673              	.LASF69:
 3674 03bb 43617053 		.ascii	"CapSense_noiseThreshold\000"
 3674      656E7365 
 3674      5F6E6F69 
 3674      73655468 
 3674      72657368 
 3675              	.LASF68:
 3676 03d3 43617053 		.ascii	"CapSense_fingerThreshold\000"
 3676      656E7365 
 3676      5F66696E 
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 104


 3676      67657254 
 3676      68726573 
 3677              	.LASF59:
 3678 03ec 43617053 		.ascii	"CapSense_rawFilterData1\000"
 3678      656E7365 
 3678      5F726177 
 3678      46696C74 
 3678      65724461 
 3679              	.LASF33:
 3680 0404 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 3680      656E7365 
 3680      5F436865 
 3680      636B4973 
 3680      57696467 
 3681              	.LASF1:
 3682 0421 756E7369 		.ascii	"unsigned char\000"
 3682      676E6564 
 3682      20636861 
 3682      7200
 3683              	.LASF17:
 3684 042f 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 3684      656E7365 
 3684      5F496E69 
 3684      7469616C 
 3684      697A6541 
 3685              	.LASF25:
 3686 044f 6E6F6973 		.ascii	"noiseThreshold\000"
 3686      65546872 
 3686      6573686F 
 3686      6C6400
 3687              	.LASF2:
 3688 045e 73686F72 		.ascii	"short int\000"
 3688      7420696E 
 3688      7400
 3689              	.LASF18:
 3690 0468 77696467 		.ascii	"widget\000"
 3690      657400
 3691              	.LASF28:
 3692 046f 6F6E4D61 		.ascii	"onMask\000"
 3692      736B00
 3693              	.LASF43:
 3694 0476 6D617869 		.ascii	"maximum\000"
 3694      6D756D00 
 3695              	.LASF14:
 3696 047e 43617053 		.ascii	"CapSense_BaseInit\000"
 3696      656E7365 
 3696      5F426173 
 3696      65496E69 
 3696      7400
 3697              	.LASF47:
 3698 0490 7265736F 		.ascii	"resolution\000"
 3698      6C757469 
 3698      6F6E00
 3699              	.LASF71:
 3700 049b 43617053 		.ascii	"CapSense_debounce\000"
 3700      656E7365 
 3700      5F646562 
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 105


 3700      6F756E63 
 3700      6500
 3701              	.LASF53:
 3702 04ad 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 3702      656E7365 
 3702      5F476574 
 3702      43656E74 
 3702      726F6964 
 3703              	.LASF9:
 3704 04c5 63686172 		.ascii	"char\000"
 3704      00
 3705              	.LASF63:
 3706 04ca 43617053 		.ascii	"CapSense_SensorBaseline\000"
 3706      656E7365 
 3706      5F53656E 
 3706      736F7242 
 3706      6173656C 
 3707              	.LASF58:
 3708 04e2 43617053 		.ascii	"CapSense_centroid\000"
 3708      656E7365 
 3708      5F63656E 
 3708      74726F69 
 3708      6400
 3709              	.LASF61:
 3710 04f4 43617053 		.ascii	"CapSense_SensorEnableMask\000"
 3710      656E7365 
 3710      5F53656E 
 3710      736F7245 
 3710      6E61626C 
 3711              	.LASF41:
 3712 050e 6F666673 		.ascii	"offset\000"
 3712      657400
 3713              	.LASF27:
 3714 0515 6465626F 		.ascii	"debounceIndex\000"
 3714      756E6365 
 3714      496E6465 
 3714      7800
 3715              	.LASF64:
 3716 0523 43617053 		.ascii	"CapSense_SensorBaselineLow\000"
 3716      656E7365 
 3716      5F53656E 
 3716      736F7242 
 3716      6173656C 
 3717              	.LASF46:
 3718 053e 43617053 		.ascii	"CapSense_CalcCentroid\000"
 3718      656E7365 
 3718      5F43616C 
 3718      6343656E 
 3718      74726F69 
 3719              	.LASF72:
 3720 0554 43617053 		.ascii	"CapSense_debounceCounter\000"
 3720      656E7365 
 3720      5F646562 
 3720      6F756E63 
 3720      65436F75 
 3721              	.LASF23:
 3722 056d 74656D70 		.ascii	"tempRaw\000"
ARM GAS  C:\Users\awkward\AppData\Local\Temp\cclsZhTN.s 			page 106


 3722      52617700 
 3723              	.LASF74:
 3724 0575 43617053 		.ascii	"CapSense_numberOfSensors\000"
 3724      656E7365 
 3724      5F6E756D 
 3724      6265724F 
 3724      6653656E 
 3725              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
